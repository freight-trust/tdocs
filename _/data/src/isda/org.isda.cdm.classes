
// below references collateral issuer types >>>

enum IssuerTypeEnum:
	SupraNational 
	SovereignCentralBank 
	QuasiGovernment 
	RegionalGovernment 
	Corporate 
	Fund 
	SpecialPurposeVehicle 

enum SupraNationalIssuerTypeEnum:
    InternationalOrganisation 
	MultilateralBank 

enum CreditRiskEnum:
    TranchedCreditRisk 
	UntranchedCreditRisk 
    
// below references collateral instrument types >>>

enum CollateralProductTypeEnum:
	Security 
	Cash 
	Commodity 
	Other  // possible place holder to use for other collateral types such as land, machinery, property 
	// MoneyMarketFunds  // Now specified under CollateralProductType.fundType.fundProductTypeEnum

enum SecurityTypeEnum: 
	Bond  
	Equity 
	Fund 
	Warrant 
	Certificate  // (Not Certificates of Deposit)
	// CertificateOfDeposit  All References to CDs removed from model

enum BondClassEnum:
	Vanilla 
	RegCap 
	Structured 
	AssetBacked  
	// TODO: other (non-exhaustive) criteria e.g. by asset class (RMBS, CMBS, CLO, by regional risk focus, by guarantor (e.g. Ginnie Mae)). Can the existing FpML framework be leveraged.  See type MortgageBackedSecurity


// Now referenced in taxonomy through combination of Issuer and Product classfication
	// CoveredBonds  
	// ConvertibleBond  
	// MortgageBackedSecurity  
	// TreasuryBonds  // Do we need  sub list with potential to include (Treasury G20 /G7/ EUzone/ G10) ?
	// MunicipalBonds  // possible duplication under regional govt

enum EquityTypeEnum:
	Ordinary 
	NonConvertiblePreference 
	Convertible 
	IssuerConvertible 
	HolderConvertible 
	IssuerExchangeable 
	HolderExchangeable 
// Now referenced in taxonomy through combination of Issuer and Product classfication
	// ConvertibleExchangeable 
	// DepositoryReceipts 
	// Rightsissue 
	// Warrants 
	// ExchangeTradedFund  
	// MutualFund  // see notation below
	// FreelyTransferableMutualFund  

enum BondSeniorityEnum:
	Secured 
	Senior 
	Subordinated 

enum BondInterestEnum:
	Fixed 
	Floating 
	InflationLinked 
	IndexLinked 
	OtherStructured  

enum BondPrincipalEnum:
	Bullet 
	Callable 
	Puttable 
	Amortising 
	InflationLinked 
	IndexLinked 
	OtherStructured 

enum FundProductTypeEnum:
	MoneyMarketFund 
	ExchangeTradedFund 
	OtherFund 
	// TODO: other (non-exhaustive) criteria e.g. UCITS, Mutual funds, Hedge funds, Private Equity)



enum CreditNotationMismatchResolutionEnum: 
	Lowest
	Highest
	ReferenceAgency

enum MaturityTypeEnum:
	RemainingMaturity 
	OriginalMaturity 
	FromIssuance 


import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*

/*
 * Function Specifications for Equity Swap product creation
 * 
 * These should be implementation-specific, and exist in implementors' "private" extensions of the CDM rather than the public CDM
 * They are positioned here for illustration of the equity workflow as part of the CDM, until such time when they could be deemed to be moved
 * 
 */
func NewEquitySwapProduct: 
	inputs:
		underlier Equity (1..1) 
		masterConfirmation EquitySwapMasterConfirmation2018 (0..1) 

	output:
		product Product (1..1)

	alias payout:
		product -> contractualProduct -> economicTerms -> payout

	assign-output product -> contractualProduct -> economicTerms -> payout -> equityPayout:
		NewSingleNameEquityPayout(underlier, masterConfirmation)

	assign-output product -> contractualProduct -> economicTerms -> payout -> interestRatePayout: 
		if masterConfirmation exists then NewFloatingPayout(masterConfirmation)

	post-condition: 
		if masterConfirmation is absent then payout -> interestRatePayout is absent
			and payout -> cashflow is absent
			and payout -> creditDefaultPayout is absent
			and payout -> forwardPayout is absent
			and payout -> optionPayout is absent

	post-condition: 
		product -> contractualProduct only exists


func NewSingleNameEquityPayout: 
	inputs:
		underlier Equity (1..1)
		masterConfirmation EquitySwapMasterConfirmation2018 (0..1)

	output:
		equityPayout EquityPayout (1..1)

	assign-output equityPayout -> returnType:  
		masterConfirmation -> typeOfSwapElection

	assign-output equityPayout -> calculationPeriodDates:  
		masterConfirmation -> equityCalculationPeriod

	assign-output equityPayout -> paymentDates:  
		masterConfirmation -> equityCashSettlementDates

	assign-output equityPayout -> settlementTerms:  
		masterConfirmation -> settlementTerms

	post-condition: 
		equityPayout -> underlier -> underlyingProduct -> security -> equity = underlier


func NewFloatingPayout: 
	inputs: masterConfirmation EquitySwapMasterConfirmation2018 (0..1)
	output: interestRatePayout InterestRatePayout (1..1)

	post-condition: 
		if masterConfirmation exists
		then interestRatePayout -> calculationPeriodDates = masterConfirmation -> equityCalculationPeriod
			and interestRatePayout -> paymentDates = masterConfirmation -> equityCashSettlementDates

/**
 * Function specifications that are used in the Equity Reset process 
 */
func ResolveEquityContract: 
	inputs:
		contractState ContractState (1..1)
		observation ObservationPrimitive (1..1)
		date date (1..1)

	output:
		updatedContract Contract (1..1)

	alias price:
		observation -> observation

	alias equityPayout:
		contractState -> contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout only-element

	alias updatedEquityPayout:
		updatedContract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout only-element

	alias periodEndDate:
		CalculationPeriod( equityPayout -> calculationPeriodDates, date ) -> endDate

	alias equityPerformance:
		EquityPerformance(contractState, observation -> observation, periodEndDate)

	condition IsEquityContract:
		equityPayout exists

	assign-output updatedEquityPayout -> priceReturnTerms -> valuationPriceFinal -> netPrice -> amount:
		if CalculationPeriod( equityPayout -> calculationPeriodDates, periodEndDate ) -> isLastPeriod then price

	assign-output updatedEquityPayout -> priceReturnTerms -> valuationPriceInterim -> netPrice -> amount:
		if CalculationPeriod( equityPayout -> calculationPeriodDates, periodEndDate ) -> isLastPeriod = False then price

	assign-output updatedContract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout -> performance:
		
		equityPerformance

	assign-output updatedContract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout -> payoutQuantity -> quantityMultiplier -> multiplierValue:
		  
		1 + equityPerformance / 100


func EquityPriceObservation: 
	inputs:
		equity Equity (1..1)
		valuationDate AdjustableOrRelativeDate (1..1)
		valuationTime BusinessCenterTime (0..1)
		timeType TimeTypeEnum (0..1)
		determinationMethod DeterminationMethodEnum (1..1)

	output:
		observation ObservationPrimitive (1..1)

	condition: 
		if valuationTime exists then timeType is absent
		else if timeType exists then valuationTime is absent
			else False

	post-condition: 
		observation -> date = ResolveAdjustableDate(valuationDate)
		and if valuationTime exists then
		observation -> time = TimeZoneFromBusinessCenterTime(valuationTime)
		else
		observation -> time = ResolveTimeZoneFromTimeType(timeType, determinationMethod)

	post-condition: 
		observation -> observation = EquitySpot(equity, observation -> date, observation -> time)


// should be provided as a fully specified function (with a body, like calculation) with logic based on the direction of RateOfReturn
func EquityAmountPayer: 
	inputs: equityPayout EquityPayout (1..1)
	output: payerReceiver PayerReceiver (1..1)


func EquitySpot: 
	inputs:
		equity Equity (1..1)
		date date (1..1)
		time TimeZone (1..1 )

	output: spot number (1..1)

func ResolveTimeZoneFromTimeType: 
	inputs:
		timeType TimeTypeEnum (1..1)
		determinationMethod DeterminationMethodEnum (1..1)

	output:
		time TimeZone (1..1)


func EquityCashSettlementAmount: 
	inputs:
		contractState ContractState (1..1)
		date date (1..1)

	output:
		equityCashSettlementAmount Money (1..1)

	alias equityPayout:
		contractState -> contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout

	// Consider moving this as a data rule on EquityPayout
	condition:
		equityPayout -> payoutQuantity -> assetIdentifier -> productIdentifier = equityPayout -> underlier -> underlyingProduct -> security -> equity -> productIdentifier
	
	assign-output equityCashSettlementAmount -> amount:  
		Abs(contractState -> updatedContract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout only-element -> performance)

	assign-output equityCashSettlementAmount -> currency: 
		ResolveEquityInitialPrice( equityPayout only-element -> underlier, contractState -> contract -> tradableProduct -> priceNotation ) -> netPrice -> currency


func ResolveEquityPeriodStartPrice: 
	inputs:
		equityPayout EquityPayout (1..1)
		priceNotations PriceNotation (0..*)
		date date (1..1)
	output:
		price number (1..1)

	alias priceReturnTerms:
		equityPayout -> priceReturnTerms

	alias calculationPeriod:
		CalculationPeriod(equityPayout -> calculationPeriodDates, date)

	assign-output price: 
		if calculationPeriod -> isFirstPeriod
		then ResolveEquityInitialPrice( equityPayout -> underlier, priceNotations ) -> netPrice -> amount
		else priceReturnTerms -> valuationPriceInterim -> netPrice -> amount


func ResolveEquityPeriodEndPrice:
	inputs:
		equityPayout EquityPayout (1..1)
		date date (1..1)
	output:
		price number (1..1)

	alias priceReturnTerms:
		equityPayout -> priceReturnTerms

	alias calculationPeriod:
		CalculationPeriod(equityPayout -> calculationPeriodDates, date)

	assign-output price: 
		if calculationPeriod -> isLastPeriod
		then priceReturnTerms -> valuationPriceFinal -> netPrice -> amount
		else priceReturnTerms -> valuationPriceInterim -> netPrice -> amount


func EquityPerformance: 
	inputs:
		contractState ContractState (1..1)
		observation number (1..1)
		date date (1..1)

	output:
		equityPerformance number (1..1)

	alias equityPayout:
		contractState -> contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout only-element

	alias periodStartPrice:
		ResolveEquityPeriodStartPrice(equityPayout, contractState -> contract -> tradableProduct -> priceNotation, date)

	alias periodEndPrice:
		observation

	alias assetIdentifier:
		equityPayout -> payoutQuantity -> assetIdentifier
	
	alias numberOfSecurities:
		ExtractQuantityByAsset( contractState -> contract -> tradableProduct -> quantityNotation, assetIdentifier ) -> quantity -> amount

	alias rateOfReturn:
		RateOfReturn(periodStartPrice, periodEndPrice)

	alias notionalAmount:
		EquityNotionalAmount(numberOfSecurities, periodEndPrice)

	assign-output equityPerformance:
		rateOfReturn * notionalAmount


func RateOfReturn: 
	inputs:
		initialPrice number (1..1)
		finalPrice number (1..1)

	output:
		rateOfReturn number (1..1)

	assign-output rateOfReturn:
		(finalPrice - initialPrice) / initialPrice


func EquityNotionalAmount: 
	inputs:
		numberOfSecurities number (1..1)
		price number (1..1)

	output:
		equityNotionalAmount number (1..1)

	assign-output equityNotionalAmount:
		numberOfSecurities * price


func ResolveEquityInitialPrice:
	inputs:
		underlier Underlier (1..1)
		priceNotations PriceNotation (0..*)

	output:
		initialPrice CashPrice (1..1)


func StockSplit: 
	inputs:
		instruction StockSplitInstruction (1..1)

	output:
		businessEvent BusinessEvent (1..1)

	alias preSplitNumberOfShares:
		NoOfUnits( instruction -> trade -> contract -> tradableProduct -> quantityNotation )

	alias postSplitNumberOfShares: 
		preSplitNumberOfShares * instruction -> adjustmentRatio

	alias preSplitPrices:
		instruction -> trade -> contract -> tradableProduct -> priceNotation -> price -> cashPrice -> netPrice -> amount

	alias postSplitPrice: 
		preSplitPrices only-element / instruction -> adjustmentRatio

	condition:
		instruction -> trade -> contract exists

	assign-output businessEvent -> primitives -> quantityChange: 
		Create_QuantityChangePrimitive( instruction -> trade, empty, postSplitNumberOfShares )

	assign-output businessEvent -> primitives -> termsChange: 
		Create_PriceChangePrimitive( instruction -> trade, postSplitPrice )


// MdM comments: this is the Dividend Cash Settlement Amount as defined in the SES1 legal document.  The cash dividend will be paid on the relevant DividendDateReferenceEnum. I did not include a function to monitor when the dividends are declared (i.e a dividend observation).
func DividendCashSettlementAmount: 

	inputs:
		numberOfSecurities number (1..1)
		declaredDividend number (1..1)

	output:
		dividendCashSettlementAmount number (1..1)

	assign-output dividendCashSettlementAmount:
		declaredDividend * numberOfSecurities


import cdm.base.*
import cdm.base.datetime.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

enum DeliveryMethodEnum: 

	DeliveryVersusPayment 
		[synonym FpML_5_10 value "DeliveryVersusPayment"]
	FreeOfPayment 
		[synonym FpML_5_10 value "FreeOfPayment"]
	PreDelivery 
		[synonym FpML_5_10 value "PreDelivery"]
	PrePayment 
		[synonym FpML_5_10 value "PrePayment"]


enum AveragingInOutEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AveragingInOutEnum"]
	In 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "In"]
	Out 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Out"]
	Both 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Both"]



enum BrokerConfirmationTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "brokerConfirmationTypeScheme_5_0"]
	ABX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ABX"]
	AsiaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsiaCorporate"]
	AsiaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsiaSovereign"]
	AustraliaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AustraliaCorporate"]
	AustraliaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AustraliaSovereign"]
	CDSonLeveragedLoans 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDSonLeveragedLoans"]
	CDSonMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDSonMBS"]
	CDXEmergingMarkets 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXEmergingMarkets"]
	CDXEmergingMarketsDiversified 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXEmergingMarketsDiversified"]
	CDXSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXSwaption"]
	CDXTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXTranche"]
	CMBX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CMBX"]
	DJ_CDX_EM_ displayName "DJ.CDX.EM " 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DJ.CDX.EM "]
	DJ_CDX_NA displayName "DJ.CDX.NA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DJ.CDX.NA"]
	EmergingEuropeanAndMiddleEasternSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanAndMiddleEasternSovereign"]
	EmergingEuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanCorporate"]
	EmergingEuropeanCorporateLPN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanCorporateLPN"]
	EuropeanCMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanCMBS"]
	EuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanCorporate"]
	EuropeanRMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanRMBS"]
	JapanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JapanCorporate"]
	JapanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JapanSovereign"]
	LatinAmericaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaCorporate"]
	LatinAmericaCorporateBond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaCorporateBond"]
	LatinAmericaCorporateBondOrLoan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaCorporateBondOrLoan"]
	LatinAmericaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaSovereign"]
	MBX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MBX"]
	MCDX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MCDX"]
	NewZealandCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NewZealandCorporate"]
	NewZealandSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NewZealandSovereign"]
	NorthAmericanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NorthAmericanCorporate"]
	PO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PO"]
	SingaporeCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SingaporeCorporate"]
	SingaporeSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SingaporeSovereign"]
	StandardAsiaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAsiaCorporate"]
	StandardAsiaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAsiaSovereign"]
	StandardAustraliaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAustraliaCorporate"]
	StandardAustraliaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAustraliaSovereign"]
	StandardCDXTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardCDXTranche"]
	StandardEmergingEuropeanAndMiddleEasternSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanAndMiddleEasternSovereign"]
	StandardEmergingEuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanCorporate"]
	StandardEmergingEuropeanCorporateLPN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanCorporateLPN"]
	StandardEuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEuropeanCorporate"]
	StandardJapanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardJapanCorporate"]
	StandardJapanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardJapanSovereign"]
	StandardLCDS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDS"]
	StandardLCDSBullet 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDSBullet"]
	StandardLCDXBullet 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDXBullet"]
	StandardLCDXBulletTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDXBulletTranche"]
	StandardLatinAmericaCorporateBond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaCorporateBond"]
	StandardLatinAmericaCorporateBondOrLoan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaCorporateBondOrLoan"]
	StandardLatinAmericaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaSovereign"]
	StandardNewZealandCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNewZealandCorporate"]
	StandardNewZealandSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNewZealandSovereign"]
	StandardNorthAmericanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNorthAmericanCorporate"]
	StandardSingaporeCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSingaporeCorporate"]
	StandardSingaporeSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSingaporeSovereign"]
	StandardSubordinatedEuropeanInsuranceCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSubordinatedEuropeanInsuranceCorporate"]
	StandardWesternEuropeanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardWesternEuropeanSovereign"]
	StandardiTraxxEuropeTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardiTraxxEuropeTranche"]
	SubordinatedEuropeanInsuranceCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SubordinatedEuropeanInsuranceCorporate"]
	SukukCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SukukCorporate"]
	SukukSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SukukSovereign"]
	SyndicatedSecuredLoanCDS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SyndicatedSecuredLoanCDS"]
	TRX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRX"]
	TRX_II displayName "TRX.II" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRX.II"]
	USMunicipalFullFaithAndCredit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMunicipalFullFaithAndCredit"]
	USMunicipalGeneralFund 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMunicipalGeneralFund"]
	USMunicipalRevenue 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMunicipalRevenue"]
	WesternEuropeanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WesternEuropeanSovereign"]
	iTraxxAsiaExJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAsiaExJapan"]
	iTraxxAsiaExJapanSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAsiaExJapanSwaption"]
	iTraxxAsiaExJapanTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAsiaExJapanTranche"]
	iTraxxAustralia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAustralia"]
	iTraxxAustraliaSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAustraliaSwaption"]
	iTraxxAustraliaTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAustraliaTranche"]
	iTraxxCJ 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxCJ"]
	iTraxxCJTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxCJTranche"]
	iTraxxEurope 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEurope"]
	iTraxxEuropeSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEuropeSwaption"]
	iTraxxEuropeTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEuropeTranche"]
	iTraxxJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxJapan"]
	iTraxxJapanSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxJapanSwaption"]
	iTraxxJapanTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxJapanTranche"]
	iTraxxLevX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxLevX"]
	iTraxxSDI75 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxSDI75"]
	iTraxxSovX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxSovX"]

enum CalculationAgentPartyEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CalculationAgentPartyEnum"]
	ExercisingParty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExercisingParty"]
	NonExercisingParty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NonExercisingParty"]
	AsSpecifiedInMasterAgreement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsSpecifiedInMasterAgreement"]
	AsSpecifiedInStandardTermsSupplement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsSpecifiedInStandardTermsSupplement"]
	Both 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Both"]


enum CategoryEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "categoryScheme_1_0"]
	Agent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "Agent"]
	Counterparty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "Counterparty"]
	Customer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "Customer"]
		[synonym CME_ClearedConfirm_1_17 value "CUST"]
	Principal 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "Principal"]
		[synonym CME_ClearedConfirm_1_17 value "HOUS"]


enum CompoundingMethodEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CompoundingMethodEnum"]
	Flat 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Flat"]
	None 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "None"]
	Straight 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Straight"]
	SpreadExclusive 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SpreadExclusive"]


enum ContractualDefinitionsEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "contractualDefinitionsScheme_3_7"]
	ISDA1991 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1991"]
	ISDA1993Commodity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1993Commodity"]
	ISDA1996Equity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1996Equity"]
	ISDA1997Bullion 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1997Bullion"]
	ISDA1997GovernmentBond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1997GovernmentBond"]
	ISDA1998FX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1998FX"]
	ISDA1999Credit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1999Credit"]
	ISDA2000 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2000"]
	ISDA2002Equity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2002Equity"]
	ISDA2003Credit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003Credit"]
	ISDA2004Novation 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004Novation"]
	ISDA2005Commodity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2005Commodity"]
	ISDA2006 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2006"]
	ISDA2006Inflation 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2006Inflation"]
	ISDA2008Inflation 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008Inflation"]
	ISDA2011Equity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2011Equity"]
	ISDA2014Credit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2014Credit"]


enum ContractualSupplementEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "contractualSupplementScheme_8_0"]
	ABX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ABX"]
	ABXTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ABXTranche"]
	CDSonLeveragedLoans 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDSonLeveragedLoans"]
	CDSonMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDSonMBS"]
	CDX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDX"]
	CDXEmergingMarkets 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXEmergingMarkets"]
	CDXEmergingMarketsDiversified 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXEmergingMarketsDiversified"]
	CDXSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXSwaption"]
	CDXTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDXTranche"]
	CMBX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CMBX"]
	EuropeanCMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanCMBS"]
	EuropeanRMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanRMBS"]
	IOS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IOS"]
	ISDA1999CreditConvertibleExchangeableAccretingObligations 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1999CreditConvertibleExchangeableAccretingObligations"]
	ISDA1999CreditRestructuring 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1999CreditRestructuring"]
	ISDA1999CreditSuccessorAndCreditEvents 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1999CreditSuccessorAndCreditEvents"]
	ISDA2003AdditionalProvisionsLPN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003AdditionalProvisionsLPN"]
	ISDA2003ContingentCreditSpreadTransaction 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003ContingentCreditSpreadTransaction"]
	ISDA2003Credit2005MatrixSupplement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003Credit2005MatrixSupplement"]
	ISDA2003CreditArgentineRepublic 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditArgentineRepublic"]
	ISDA2003CreditAuctionSupplement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditAuctionSupplement"]
	ISDA2003CreditMay2003 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditMay2003"]
	ISDA2003CreditMonolineInsurers 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditMonolineInsurers"]
	ISDA2003CreditMonolineInsurers2005 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditMonolineInsurers2005"]
	ISDA2003CreditRepublicOfHungary 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditRepublicOfHungary"]
	ISDA2003CreditRepublicOfHungary2005 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditRepublicOfHungary2005"]
	ISDA2003CreditRussianFederation 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditRussianFederation"]
	ISDA2003CreditUSMunicipals 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditUSMunicipals"]
	ISDA2003STMicroelectronicsNV 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003STMicroelectronicsNV"]
	ISDA2007FullLookthroughDepositoryReceiptSupplement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007FullLookthroughDepositoryReceiptSupplement"]
	ISDA2007PartialLookthroughDepositoryReceiptSupplement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007PartialLookthroughDepositoryReceiptSupplement"]
	ISDACreditMonolineInsurers 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDACreditMonolineInsurers"]
	ISDADeliveryRestrictions 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDADeliveryRestrictions"]
	ISDAFixedRecovery 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDAFixedRecovery"]
	ISDALPNReferenceEntities 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDALPNReferenceEntities"]
	ISDAMarch2004EquityCanadianSupplement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDAMarch2004EquityCanadianSupplement"]
	ISDARecoveryLock 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDARecoveryLock"]
	ISDASecuredDeliverableObligationCharacteristic 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDASecuredDeliverableObligationCharacteristic"]
	LCDX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LCDX"]
	LCDXTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LCDXTranche"]
	MBX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MBX"]
	MCDX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MCDX"]
	PO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PO"]
	PrimeX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PrimeX"]
	StandardCDXTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardCDXTranche"]
	StandardLCDS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDS"]
	StandardLCDSBullet 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDSBullet"]
	StandardLCDXBullet 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDXBullet"]
	StandardLCDXBulletTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLCDXBulletTranche"]
	StandardiTraxxEuropeTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardiTraxxEuropeTranche"]
	SyndicatedSecuredLoanCDS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SyndicatedSecuredLoanCDS"]
	TRX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRX"]
	TRX_II displayName "TRX.II" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRX.II"]
	iTraxxAsiaExJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAsiaExJapan"]
	iTraxxAsiaExJapanSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAsiaExJapanSwaption"]
	iTraxxAsiaExJapanTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAsiaExJapanTranche"]
	iTraxxAustralia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAustralia"]
	iTraxxAustraliaSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAustraliaSwaption"]
	iTraxxAustraliaTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxAustraliaTranche"]
	iTraxxCJ 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxCJ"]
	iTraxxCJTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxCJTranche"]
	iTraxxEurope 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEurope"]
	iTraxxEuropeDealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEuropeDealer"]
	iTraxxEuropeNonDealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEuropeNonDealer"]
	iTraxxEuropeSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEuropeSwaption"]
	iTraxxEuropeTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxEuropeTranche"]
	iTraxxJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxJapan"]
	iTraxxJapanSwaption 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxJapanSwaption"]
	iTraxxJapanTranche 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxJapanTranche"]
	iTraxxLevX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxLevX"]
	iTraxxSDI75Dealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxSDI75Dealer"]
	iTraxxSDI75NonDealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxSDI75NonDealer"]
	iTraxxSovX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "iTraxxSovX"]


enum CreditSupportAgreementTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditSupportAgreementTypeScheme_1_1"]
	ISDA1994CreditSupportAnnexNewYorkLaw	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1994CreditSupportAnnexNewYorkLaw"]
	ISDA1995CreditSupportAnnexEnglishLaw	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1995CreditSupportAnnexEnglishLaw"]
	ISDA1995CreditSupportAnnexJapaneseLaw 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1995CreditSupportAnnexJapaneseLaw"]
	ISDA1995CreditSupportDeedEnglishLaw 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1995CreditSupportDeedEnglishLaw"]
	ISDA2001MarginProvisions	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2001MarginProvisions"]
	ISDA2013StandardCreditSupportAgreement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2013StandardCreditSupportAgreement"]
	ISDA2014StandardCreditSupportAgreement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2014StandardCreditSupportAgreement"]


enum DayCountFractionEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayCountFractionScheme_2_2"]
	ACT_360 displayName "ACT/360" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ACT/360"]
	ACT_365L displayName "ACT/365L" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ACT/365L"]
	ACT_365_FIXED displayName "ACT/365.FIXED" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ACT/365.FIXED"]
	ACT_ACT_AFB displayName "ACT/ACT.AFB" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ACT/ACT.AFB"]
	ACT_ACT_ICMA displayName "ACT/ACT.ICMA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ACT/ACT.ISMA"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ACT/ACT.ICMA"]
	ACT_ACT_ISDA displayName "ACT/ACT.ISDA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ACT/ACT.ISDA"]
	BUS_252 displayName "BUS/252" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BUS/252"]
	_1_1 displayName "1/1" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "1/1"]
	_30E_360 displayName "30E/360" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "30E/360"]
	_30E_360_ISDA displayName "30E/360.ISDA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "30E/360.ISDA"]
	_30_360 displayName "30/360" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "30/360"]
	RBA_BOND_BASIS_QUARTER displayName "RBA Bond Basis (quarter)" 
	RBA_BOND_BASIS_SEMI_ANNUAL displayName "RBA Bond Basis (semi-annual)" 
	RBA_BOND_BASIS_ANNUAL displayName "RBA Bond Basis (annual)" 


enum DeterminationMethodEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DeterminationMethodEnum"]
	AgreedInitialPrice 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AgreedInitialPrice"]
	AsSpecifiedInMasterConfirmation	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsSpecifiedInMasterConfirmation"]
	CalculationAgent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CalculationAgent"]
	ClosingPrice 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ClosingPrice"]
	DividendCurrency 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DividendCurrency"]
	ExpiringContractLevel 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExpiringContractLevel"]
	HedgeExecution 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HedgeExecution"]
	IssuerPaymentCurrency 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IssuerPaymentCurrency"]
	NAV	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NAV"]
	OpenPrice 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OpenPrice"]
	OSPPrice 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OSPPrice"]
	SettlementCurrency 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SettlementCurrency"]
	StrikeDateDetermination	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StrikeDateDetermination"]
	TWAPPrice 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWAPPrice"]
	ValuationTime 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ValuationTime"]
	VWAPPrice 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VWAPPrice"]


enum DiscountingTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DiscountingTypeEnum"]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FraDiscountingEnum"]
	Standard 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Standard"]
	FRA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FRA"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA"]
	FRAYield 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FRAYield"]
	AFMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AFMA"]


enum DividendAmountTypeEnum: 
	[synonym FpML_5_10 value "DividendAmountTypeEnum"]
	RecordAmount 
		[synonym FpML_5_10 value "RecordAmount"]
	ExAmount 
		[synonym FpML_5_10 value "ExAmount"]
	PaidAmount 
		[synonym FpML_5_10 value "PaidAmount"]
	AsSpecifiedInMasterConfirmation 
		[synonym FpML_5_10 value "AsSpecifiedInMasterConfirmation"]


enum DividendDateReferenceEnum: 
	[synonym FpML_5_10 value "DividendDateReferenceEnum"]
	// How would this work, as the date is actually not specified?
	AdHocDate 
		[synonym FpML_5_10 value "AdHocDate"]
	CashSettlementPaymentDate 
		[synonym FpML_5_10 value "CashSettlementPaymentDate"]
	CashSettlePaymentDateExDiv 
		[synonym FpML_5_10 value "CashSettlePaymentDateExDiv"]
	CashSettlePaymentDateIssuerPayment 
		[synonym FpML_5_10 value "CashSettlePaymentDateIssuerPayment"]
	CumulativeEquityExDiv 
		[synonym FpML_5_10 value "CumulativeEquityExDiv"]
	CumulativeEquityPaid 
		[synonym FpML_5_10 value "CumulativeEquityPaid"]
	CumulativeEquityExDivBeforeReset 
	CumulativeEquityPaidBeforeReset 
	CumulativeEquityPaidInclReset 
	CumulativeInterestExDiv 
		[synonym FpML_5_10 value "CumulativeLiborExDiv"]
	CumulativeInterestPaid 
		[synonym FpML_5_10 value "CumulativeLiborPaid"]
	CumulativeInterestPaidInclReset 
	CumulativeInterestPaidBeforeReset 
	DividendPaymentDate 
		[synonym FpML_5_10 value "DividendPaymentDate"]
	DividendValuationDate 
		[synonym FpML_5_10 value "DividendValuationDate"]
	EquityPaymentDate 
		[synonym FpML_5_10 value "EquityPaymentDate"]
	ExDate 
		[synonym FpML_5_10 value "ExDate"]
	FloatingAmountPaymentDate 
		[synonym FpML_5_10 value "FloatingAmountPaymentDate"]
	FollowingPaymentDate 
		[synonym FpML_5_10 value "FollowingPaymentDate"]
	RecordDate 
		[synonym FpML_5_10 value "RecordDate"]
	SharePayment 
		[synonym FpML_5_10 value "SharePayment"]
	TerminationDate 
		[synonym FpML_5_10 value "TerminationDate"]

	UnwindOrEquityExDiv 
	UnwindOrEquityPaid 
	UnwindOrInterestExDiv 
	UnwindOrInterestPaid 
	UnwindExDiv 
	UnwindPaid 



enum DividendEntitlementEnum: 
	[synonym FpML_5_10 value "DividendEntitlementEnum"]
	ExDate 
		[synonym FpML_5_10 value "ExDate"]
	RecordDate 
		[synonym FIX_5_0_SP2 value "RecordDate"]


enum DividendPeriodEnum: 
	[synonym FpML_5_10 value "DividendPeriodEnum"]
	FirstPeriod 
		[synonym FpML_5_10 value "FirstPeriod"]
	SecondPeriod 
		[synonym FpML_5_10 value "SecondPeriod"]


enum ExecutionTypeEnum: 
	[synonym FpML_5_10 value "executionTypeScheme"]
	Electronic 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, Workflow_Event value "Electronic"]
		[synonym CME_SubmissionIRS_1_0 value "E"]
	OffFacility 
		[synonym Workflow_Event value "OffFacility"]
		[synonym CME_SubmissionIRS_1_0 value "O"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "Voice"]


enum GoverningLawEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "governingLawScheme_1_2"]
	AsSpecifiedInMasterAgreement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsSpecifiedInMasterAgreement"]
	BE 
		[synonym ISDA_Create_1_0 value "Belgian"]
	CAAB 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAAB"]
	CABC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CABC"]
	CAMN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAMN"]
	CAON 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAON"]
	CAQC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAQC"]
	DE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DE"]
	FR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FR"]
	GBEN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBEN"]
		[synonym AcadiaSoft_AM_1_0 value "ENGLISH"]
		[synonym ISDA_Create_1_0 value "English"]
	GBGY 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBGY"]
	GBIM 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBIM"]
	GBJY 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBJY"]
	GBSC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBSC"]
	RelatedMasterAgreement 
		[synonym ISDA_Create_1_0 value "As agreed in the ISDA Master Agreement"]
	JP 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JP"]
		[synonym AcadiaSoft_AM_1_0 value "JAPAN"]
		[synonym ISDA_Create_1_0 value "Japanese"]
	LU 
		[synonym ISDA_Create_1_0 value "Luxembourg"]
	USCA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USCA"]
	USDE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USDE"]
	USIL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USIL"]
	USNY 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USNY"]
		[synonym AcadiaSoft_AM_1_0 value "NY"]
		[synonym ISDA_Create_1_0 value "New York"]


enum IndexAnnexSourceEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexAnnexSourceScheme_1_0"]
	MasterConfirmation 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MasterConfirmation"]
	Publisher 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Publisher"]


enum IndexEventConsequenceEnum: 
	[synonym FpML_5_10 value "IndexEventConsequenceEnum"]
	CalculationAgentAdjustment 
		[synonym FpML_5_10 value "CalculationAgentAdjustment"]
	NegotiatedCloseOut 
		[synonym FpML_5_10 value "NegotiatedCloseOut"]
	CancellationAndPayment 
		[synonym FpML_5_10 value "CancellationAndPayment"]
	RelatedExchange 
		[synonym FpML_5_10 value "RelatedExchange"]


enum InformationProviderEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "informationProviderScheme_2_1"]
	AssocBanksSingapore 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AssocBanksSingapore"]
	BankOfCanada 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BankOfCanada"]
	BankOfEngland 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BankOfEngland"]
	BankOfJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BankOfJapan"]
	Bloomberg 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Bloomberg"]
		[synonym FIX_5_0_SP2 value "0" definition "0 = Bloomberg"]
	EuroCentralBank 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuroCentralBank"]
	FHLBSF 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FHLBSF"]
	FederalReserve 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FederalReserve"]
	ISDA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA"]
	Other
		[synonym FIX_5_0_SP2 value "99" definition "99 = Other"]
	ReserveBankAustralia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ReserveBankAustralia"]
	ReserveBankNewZealand 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ReserveBankNewZealand"]
	Reuters 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Reuters"]
		[synonym FIX_5_0_SP2 value "1" definition "1 = Reuters"]
	SAFEX 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SAFEX"]
	Telerate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Telerate"]
		[synonym FIX_5_0_SP2 value "2" definition "2 = Telerate"]


enum InterestShortfallCapEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "InterestShortfallCapEnum"]
	Fixed
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Fixed"]
	Variable
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Variable"]


enum InterpolationMethodEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "interpolationMethodScheme_1_1"]
	LinearZeroYield 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LinearZeroYield"]
	None 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "None"]


enum LengthUnitEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LengthUnitEnum"]
	Pages
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Pages"]
	TimeUnit
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TimeUnit"]


enum MarketDisruptionEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "marketDisruptionScheme_1_0"]
	ModifiedPostponement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ModifiedPostponement"]
	Omission 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Omission"]
	Postponement 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Postponement"]


enum MasterAgreementTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterAgreementTypeScheme_3_1"]
	AFB	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AFB"]
	Bespoke 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Bespoke"]
	CMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CMA"]
	CMOF 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CMOF"]
	EEIPower 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EEIPower"]
	EFETElectricity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EFETElectricity"]
	EFETGas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EFETGas"]
	EMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EMA"]
	FBF 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FBF"]
	GMRA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GMRA"]
	GMSLA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GMSLA"]
	GTMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GTMA"]
	GasEDI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GasEDI"]
	German 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "German"]
	ICOM 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ICOM"]
	IETA_ERPA displayName "IETA-ERPA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IETA-ERPA"]
	IETA_ETMA displayName "IETA-ETMA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IETA-ETMA"]
	IETA_IETMA displayName "IETA-IETMA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IETA-IETMA"]
	IFEMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IFEMA"]
	IFEOMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IFEOMA"]
	ISDA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA"]
	ISDAFIA_CDEA displayName "ISDAFIA-CDEA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDAFIA-CDEA"]
	JSCC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JSCC"]
	LBMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LBMA"]
	LEAP 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LEAP"]
	MCPSA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MCPSA"]
	NAESBGas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NAESBGas"]
	NBP 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NBP"]
	RussianDerivatives 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RussianDerivatives"]
	RussianRepo 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RussianRepo"]
	SCoTA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SCoTA"]
	Swiss 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Swiss"]
	TTF 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TTF"]
	ZBT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZBT"]


enum MasterConfirmationAnnexTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterConfirmationAnnexTypeScheme_2_6"]
	ISDA2004IndexVarianceSwapAmericasInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004IndexVarianceSwapAmericasInterdealer"]
	ISDA2004ShareVarianceSwapAmericasInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004ShareVarianceSwapAmericasInterdealer"]
	ISDA2007DispersionVarianceSwapEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007DispersionVarianceSwapEuropean"]
	ISDA2007EquityFinanceSwapEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007EquityFinanceSwapEuropean"]
	ISDA2007IndexVarianceSwapAmericasInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007IndexVarianceSwapAmericasInterdealer"]
	ISDA2007ShareVarianceSwapAmericasInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007ShareVarianceSwapAmericasInterdealer"]
	ISDA2007VarianceOptionEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007VarianceOptionEuropean"]
	ISDA2008EquityFinanceSwapAsiaExcludingJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityFinanceSwapAsiaExcludingJapan"]
	ISDA2008EquityFinanceSwapAsiaExcludingJapanRev1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityFinanceSwapAsiaExcludingJapanRev1"]
	ISDA2008EquityOptionAsiaExcludingJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityOptionAsiaExcludingJapan"]
	ISDA2008EquityOptionAsiaExcludingJapanRev1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityOptionAsiaExcludingJapanRev1"]
	ISDA2008EquityOptionJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityOptionJapan"]
	ISDA2009ClosedMarketsOptionsAsiaExcludingJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009ClosedMarketsOptionsAsiaExcludingJapan"]
	ISDA2009EquityEuropeanIS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009EquityEuropeanIS"]
	ISDA2009EquityEuropeanInterdealerSS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009EquityEuropeanInterdealerSS"]
	ISDA2009IndexShareOptionAmericas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009IndexShareOptionAmericas"]
	ISDA2009IndexSwapEuropeanInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009IndexSwapEuropeanInterdealer"]
	ISDA2009IndexSwapPanAsiaInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009IndexSwapPanAsiaInterdealer"]
	ISDA2009ShareSwapPanAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009ShareSwapPanAsia"]
	ISDA2010FairValueShareSwapEuropeanInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2010FairValueShareSwapEuropeanInterdealer"]
	ISDA2010IndexShareOptionEMEAInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2010IndexShareOptionEMEAInterdealer"]


enum MasterConfirmationTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterConfirmationTypeScheme_7_7"]
	DJ_CDX_EM displayName "DJ.CDX.EM" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DJ.CDX.EM"]
	DJ_CDX_EM_DIV displayName "DJ.CDX.EM.DIV" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DJ.CDX.EM.DIV"]
	DJ_CDX_NA displayName "DJ.CDX.NA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DJ.CDX.NA"]
	DJ_iTraxx_Europe displayName "DJ.iTraxx.Europe" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DJ.iTraxx.Europe"]
	EquityAmericas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EquityAmericas"]
	EquityAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EquityAsia"]
	EquityEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EquityEuropean"]
	ISDA1999Credit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA1999Credit"]
	ISDA2003CreditAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditAsia"]
	ISDA2003CreditAustraliaNewZealand 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditAustraliaNewZealand"]
	ISDA2003CreditEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditEuropean"]
	ISDA2003CreditJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditJapan"]
	ISDA2003CreditNorthAmerican 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditNorthAmerican"]
	ISDA2003CreditSingapore 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditSingapore"]
	ISDA2003CreditSovereignAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditSovereignAsia"]
	ISDA2003CreditSovereignCentralAndEasternEurope 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditSovereignCentralAndEasternEurope"]
	ISDA2003CreditSovereignJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditSovereignJapan"]
	ISDA2003CreditSovereignLatinAmerica 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditSovereignLatinAmerica"]
	ISDA2003CreditSovereignMiddleEast 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditSovereignMiddleEast"]
	ISDA2003CreditSovereignWesternEurope 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003CreditSovereignWesternEurope"]
	ISDA2003StandardCreditAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003StandardCreditAsia"]
	ISDA2003StandardCreditAustraliaNewZealand 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003StandardCreditAustraliaNewZealand"]
	ISDA2003StandardCreditEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003StandardCreditEuropean"]
	ISDA2003StandardCreditJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003StandardCreditJapan"]
	ISDA2003StandardCreditNorthAmerican 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003StandardCreditNorthAmerican"]
	ISDA2003StandardCreditSingapore 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2003StandardCreditSingapore"]
	ISDA2004CreditSovereignAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004CreditSovereignAsia"]
	ISDA2004CreditSovereignEmergingEuropeanAndMiddleEastern 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004CreditSovereignEmergingEuropeanAndMiddleEastern"]
	ISDA2004CreditSovereignJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004CreditSovereignJapan"]
	ISDA2004CreditSovereignLatinAmerican 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004CreditSovereignLatinAmerican"]
	ISDA2004CreditSovereignWesternEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004CreditSovereignWesternEuropean"]
	ISDA2004EquityAmericasInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004EquityAmericasInterdealer"]
	ISDA2004EquityAmericasInterdealerRev1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004EquityAmericasInterdealerRev1"]
	ISDA2004StandardCreditSovereignAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004StandardCreditSovereignAsia"]
	ISDA2004StandardCreditSovereignEmergingEuropeanAndMiddleEastern 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004StandardCreditSovereignEmergingEuropeanAndMiddleEastern"]
	ISDA2004StandardCreditSovereignJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004StandardCreditSovereignJapan"]
	ISDA2004StandardCreditSovereignLatinAmerican 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004StandardCreditSovereignLatinAmerican"]
	ISDA2004StandardCreditSovereignWesternEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2004StandardCreditSovereignWesternEuropean"]
	ISDA2005EquityAsiaExcludingJapanInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2005EquityAsiaExcludingJapanInterdealer"]
	ISDA2005EquityAsiaExcludingJapanInterdealerRev2 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2005EquityAsiaExcludingJapanInterdealerRev2"]
	ISDA2005EquityJapaneseInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2005EquityJapaneseInterdealer"]
	ISDA2006VarianceSwapJapanese 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2006VarianceSwapJapanese"]
	ISDA2006VarianceSwapJapaneseInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2006VarianceSwapJapaneseInterdealer"]
	ISDA2007EquityEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007EquityEuropean"]
	ISDA2007VarianceSwapAmericas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007VarianceSwapAmericas"]
	ISDA2007VarianceSwapAsiaExcludingJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007VarianceSwapAsiaExcludingJapan"]
	ISDA2007VarianceSwapAsiaExcludingJapanRev1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007VarianceSwapAsiaExcludingJapanRev1"]
	ISDA2007VarianceSwapAsiaExcludingJapanRev2 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007VarianceSwapAsiaExcludingJapanRev2"]
	ISDA2007VarianceSwapEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007VarianceSwapEuropean"]
	ISDA2007VarianceSwapEuropeanRev1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2007VarianceSwapEuropeanRev1"]
	ISDA2008DividendSwapJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008DividendSwapJapan"]
	ISDA2008DividendSwapJapaneseRev1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008DividendSwapJapaneseRev1"]
	ISDA2008EquityAmericas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityAmericas"]
	ISDA2008EquityAsiaExcludingJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityAsiaExcludingJapan"]
	ISDA2008EquityAsiaExcludingJapanRev1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityAsiaExcludingJapanRev1"]
	ISDA2008EquityJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2008EquityJapan"]
	ISDA2009EquityAmericas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009EquityAmericas"]
	ISDA2009EquityEuropeanInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009EquityEuropeanInterdealer"]
	ISDA2009EquityPanAsia 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2009EquityPanAsia"]
	ISDA2010EquityEMEAInterdealer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2010EquityEMEAInterdealer"]
	ISDA2013VolatilitySwapAmericas 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2013VolatilitySwapAmericas"]
	ISDA2013VolatilitySwapAsiaExcludingJapan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2013VolatilitySwapAsiaExcludingJapan"]
	ISDA2013VolatilitySwapEuropean 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2013VolatilitySwapEuropean"]
	ISDA2013VolatilitySwapJapanese 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISDA2013VolatilitySwapJapanese"]
	_2003CreditIndex displayName "2003CreditIndex" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2003CreditIndex"]
	_2004EquityEuropeanInterdealer displayName "2004EquityEuropeanInterdealer" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2004EquityEuropeanInterdealer"]
	_2005VarianceSwapEuropeanInterdealer displayName "2005VarianceSwapEuropeanInterdealer" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2005VarianceSwapEuropeanInterdealer"]
	_2006DividendSwapEuropean displayName "2006DividendSwapEuropean" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2006DividendSwapEuropean"]
	_2006DividendSwapEuropeanInterdealer displayName "2006DividendSwapEuropeanInterdealer" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2006DividendSwapEuropeanInterdealer"]
	_2014CreditAsia displayName "2014CreditAsia" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditAsia"]
	_2014CreditAsiaFinancial displayName "2014CreditAsiaFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditAsiaFinancial"]
	_2014CreditAustraliaNewZealand displayName "2014CreditAustraliaNewZealand" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditAustraliaNewZealand"]
	_2014CreditAustraliaNewZealandFinancial displayName "2014CreditAustraliaNewZealandFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditAustraliaNewZealandFinancial"]
	_2014CreditEuropean displayName "2014CreditEuropean" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditEuropean"]
	_2014CreditEuropeanCoCoFinancial displayName "2014CreditEuropeanCoCoFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditEuropeanCoCoFinancial"]
	_2014CreditEuropeanFinancial displayName "2014CreditEuropeanFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditEuropeanFinancial"]
	_2014CreditJapan displayName "2014CreditJapan" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditJapan"]
	_2014CreditJapanFinancial displayName "2014CreditJapanFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditJapanFinancial"]
	_2014CreditNorthAmerican displayName "2014CreditNorthAmerican" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditNorthAmerican"]
	_2014CreditNorthAmericanFinancial displayName "2014CreditNorthAmericanFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditNorthAmericanFinancial"]
	_2014CreditSingapore displayName "2014CreditSingapore" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditSingapore"]
	_2014CreditSingaporeFinancial displayName "2014CreditSingaporeFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditSingaporeFinancial"]
	_2014CreditSovereignAsia displayName "2014CreditSovereignAsia" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditSovereignAsia"]
	_2014CreditSovereignEmergingEuropeanAndMiddleEastern displayName "2014CreditSovereignEmergingEuropeanAndMiddleEastern" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditSovereignEmergingEuropeanAndMiddleEastern"]
	_2014CreditSovereignJapan displayName "2014CreditSovereignJapan" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditSovereignJapan"]
	_2014CreditSovereignLatinAmerican displayName "2014CreditSovereignLatinAmerican" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditSovereignLatinAmerican"]
	_2014CreditSovereignWesternEuropean displayName "2014CreditSovereignWesternEuropean" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014CreditSovereignWesternEuropean"]
	_2014StandardCreditAsia displayName "2014StandardCreditAsia" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditAsia"]
	_2014StandardCreditAsiaFinancial displayName "2014StandardCreditAsiaFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditAsiaFinancial"]
	_2014StandardCreditAustraliaNewZealand displayName "2014StandardCreditAustraliaNewZealand" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditAustraliaNewZealand"]
	_2014StandardCreditAustraliaNewZealandFinancial displayName "2014StandardCreditAustraliaNewZealandFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditAustraliaNewZealandFinancial"]
	_2014StandardCreditEuropean displayName "2014StandardCreditEuropean" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditEuropean"]
	_2014StandardCreditEuropeanCoCoFinancial displayName "2014StandardCreditEuropeanCoCoFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditEuropeanCoCoFinancial"]
	_2014StandardCreditEuropeanFinancial displayName "2014StandardCreditEuropeanFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditEuropeanFinancial"]
	_2014StandardCreditJapan displayName "2014StandardCreditJapan" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditJapan"]
	_2014StandardCreditJapanFinancial displayName "2014StandardCreditJapanFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditJapanFinancial"]
	_2014StandardCreditNorthAmerican displayName "2014StandardCreditNorthAmerican" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditNorthAmerican"]
	_2014StandardCreditNorthAmericanFinancial displayName "2014StandardCreditNorthAmericanFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditNorthAmericanFinancial"]
	_2014StandardCreditSingapore displayName "2014StandardCreditSingapore" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditSingapore"]
	_2014StandardCreditSingaporeFinancial displayName "2014StandardCreditSingaporeFinancial" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditSingaporeFinancial"]
	_2014StandardCreditSovereignAsia displayName "2014StandardCreditSovereignAsia" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditSovereignAsia"]
	_2014StandardCreditSovereignEmergingEuropeanAndMiddleEastern displayName "2014StandardCreditSovereignEmergingEuropeanAndMiddleEastern" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditSovereignEmergingEuropeanAndMiddleEastern"]
	_2014StandardCreditSovereignJapan displayName "2014StandardCreditSovereignJapan" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditSovereignJapan"]
	_2014StandardCreditSovereignLatinAmerican displayName "2014StandardCreditSovereignLatinAmerican" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditSovereignLatinAmerican"]
	_2014StandardCreditSovereignWesternEuropean displayName "2014StandardCreditSovereignWesternEuropean" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2014StandardCreditSovereignWesternEuropean"]


enum MatrixTermEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "matrixTermScheme_3_11"]
	AsiaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsiaCorporate"]
	AsiaFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsiaFinancialCorporate"]
	AsiaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsiaSovereign"]
	AustraliaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AustraliaCorporate"]
	AustraliaFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AustraliaFinancialCorporate"]
	AustraliaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AustraliaSovereign"]
	EmergingEuropeanAndMiddleEasternSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanAndMiddleEasternSovereign"]
	EmergingEuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanCorporate"]
	EmergingEuropeanCorporateLPN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanCorporateLPN"]
	EmergingEuropeanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanFinancialCorporate"]
	EmergingEuropeanFinancialCorporateLPN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EmergingEuropeanFinancialCorporateLPN"]
	EuropeanCoCoFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanCoCoFinancialCorporate"]
	EuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanCorporate"]
	EuropeanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanFinancialCorporate"]
	EuropeanSeniorNonPreferredFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanSeniorNonPreferredFinancialCorporate"]
	IVS1OpenMarkets 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IVS1OpenMarkets"]
	JapanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JapanCorporate"]
	JapanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JapanFinancialCorporate"]
	JapanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JapanSovereign"]
	LatinAmericaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaCorporate"]
	LatinAmericaCorporateBond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaCorporateBond"]
	LatinAmericaCorporateBondOrLoan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaCorporateBondOrLoan"]
	LatinAmericaFinancialCorporateBond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaFinancialCorporateBond"]
	LatinAmericaFinancialCorporateBondOrLoan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaFinancialCorporateBondOrLoan"]
	LatinAmericaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LatinAmericaSovereign"]
	NewZealandCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NewZealandCorporate"]
	NewZealandFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NewZealandFinancialCorporate"]
	NewZealandSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NewZealandSovereign"]
	NorthAmericanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NorthAmericanCorporate"]
	NorthAmericanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NorthAmericanFinancialCorporate"]
	SingaporeCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SingaporeCorporate"]
	SingaporeFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SingaporeFinancialCorporate"]
	SingaporeSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SingaporeSovereign"]
	StandardAsiaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAsiaCorporate"]
	StandardAsiaFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAsiaFinancialCorporate"]
	StandardAsiaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAsiaSovereign"]
	StandardAustraliaCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAustraliaCorporate"]
	StandardAustraliaFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAustraliaFinancialCorporate"]
	StandardAustraliaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAustraliaSovereign"]
	StandardEmergingEuropeanAndMiddleEasternSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanAndMiddleEasternSovereign"]
	StandardEmergingEuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanCorporate"]
	StandardEmergingEuropeanCorporateLPN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanCorporateLPN"]
	StandardEmergingEuropeanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanFinancialCorporate"]
	StandardEmergingEuropeanFinancialCorporateLPN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEmergingEuropeanFinancialCorporateLPN"]
	StandardEuropeanCoCoFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEuropeanCoCoFinancialCorporate"]
	StandardEuropeanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEuropeanCorporate"]
	StandardEuropeanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEuropeanFinancialCorporate"]
	StandardEuropeanSeniorNonPreferredFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardEuropeanSeniorNonPreferredFinancialCorporate"]
	StandardJapanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardJapanCorporate"]
	StandardJapanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardJapanFinancialCorporate"]
	StandardJapanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardJapanSovereign"]
	StandardLatinAmericaCorporateBond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaCorporateBond"]
	StandardLatinAmericaCorporateBondOrLoan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaCorporateBondOrLoan"]
	StandardLatinAmericaFinancialCorporateBond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaFinancialCorporateBond"]
	StandardLatinAmericaFinancialCorporateBondOrLoan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaFinancialCorporateBondOrLoan"]
	StandardLatinAmericaSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardLatinAmericaSovereign"]
	StandardNewZealandCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNewZealandCorporate"]
	StandardNewZealandFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNewZealandFinancialCorporate"]
	StandardNewZealandSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNewZealandSovereign"]
	StandardNorthAmericanCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNorthAmericanCorporate"]
	StandardNorthAmericanFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardNorthAmericanFinancialCorporate"]
	StandardSingaporeCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSingaporeCorporate"]
	StandardSingaporeFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSingaporeFinancialCorporate"]
	StandardSingaporeSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSingaporeSovereign"]
	StandardSubordinatedEuropeanInsuranceCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSubordinatedEuropeanInsuranceCorporate"]
	StandardSukukFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSukukFinancialCorporate"]
	StandardUSMunicipalFullFaithAndCredit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardUSMunicipalFullFaithAndCredit"]
	StandardUSMunicipalGeneralFund 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardUSMunicipalGeneralFund"]
	StandardUSMunicipalRevenue 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardUSMunicipalRevenue"]
	StandardWesternEuropeanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardWesternEuropeanSovereign"]
	SubordinatedEuropeanInsuranceCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SubordinatedEuropeanInsuranceCorporate"]
	SukukCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SukukCorporate"]
	SukukFinancialCorporate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SukukFinancialCorporate"]
	SukukSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SukukSovereign"]
	USMunicipalFullFaithAndCredit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMunicipalFullFaithAndCredit"]
	USMunicipalGeneralFund 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMunicipalGeneralFund"]
	USMunicipalRevenue 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMunicipalRevenue"]
	WesternEuropeanSovereign 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WesternEuropeanSovereign"]


enum MatrixTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "matrixTypeScheme_1_1"]
	CreditDerivativesPhysicalSettlementMatrix 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CreditDerivativesPhysicalSettlementMatrix"]
	EquityDerivativesMatrix 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EquityDerivativesMatrix"]
	SettlementMatrix 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SettlementMatrix"]


enum NationalizationOrInsolvencyOrDelistingEventEnum: 
	[synonym FpML_5_10 value "NationalisationOrInsolvencyOrDelistingEventEnum"]
	NegotiatedCloseout 
		[synonym FpML_5_10 value "NegotiatedCloseout"]
	CancellationAndPayment 
		[synonym FpML_5_10 value "CancellationAndPayment"]


enum NegativeInterestRateTreatmentEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NegativeInterestRateTreatmentEnum"]
	NegativeInterestRateMethod 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NegativeInterestRateMethod"]
	ZeroInterestRateMethod 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZeroInterestRateMethod"]


enum NotionalAdjustmentEnum: 
	[synonym FpML_5_10 value "NotionalAdjustmentEnum"]
	Execution 
		[synonym FpML_5_10 value "Execution"]
	PortfolioRebalancing 
		[synonym FpML_5_10 value "PortfolioRebalancing"]
	Standard 
		[synonym FpML_5_10 value "Standard"]

enum OptionTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OptionTypeEnum"]
	Put 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Put"]
	Call 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Call"]
	Payer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Payer"]
	Receiver 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Receiver"]
	Straddle 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Straddle"]


enum PayRelativeToEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PayRelativeToEnum"]
	CalculationPeriodStartDate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CalculationPeriodStartDate"]
	CalculationPeriodEndDate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CalculationPeriodEndDate"]
	LastPricingDate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LastPricingDate"]
	ResetDate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ResetDate"]
	ValuationDate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ValuationDate"]


enum PremiumTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PremiumTypeEnum"]
	PrePaid
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PrePaid"]
	PostPaid
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PostPaid"]
	Variable
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Variable"]
	Fixed
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Fixed"]


enum PriceExpressionEnum: 
	[synonym FpML_5_10 value "PriceExpressionEnum"]
	AbsoluteTerms 
		[synonym FpML_5_10 value "AbsoluteTerms"]
	PercentageOfNotional 
		[synonym FpML_5_10 value "PercentageOfNotional"]


enum QuotationRateTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "QuotationRateTypeEnum"]
	Bid 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Bid"]
	Ask 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Ask"]
	Mid 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Mid"]
	ExercisingPartyPays 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExercisingPartyPays"]


enum QuotationSideEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "QuotationSideEnum"]
	Bid 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Bid"]
	Ask 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Ask"]
	Mid 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Mid"]


enum QuotationStyleEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "QuotationStyleEnum"]
	PointsUpFront 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PointsUpFront"]
	TradedSpread 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TradedSpread"]
	Price 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Price"]


enum QuoteBasisEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "QuoteBasisEnum"]
	Currency1PerCurrency2 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Currency1PerCurrency2"]
	Currency2PerCurrency1 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Currency2PerCurrency1"]


enum RateTreatmentEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RateTreatmentEnum"]
	BondEquivalentYield 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BondEquivalentYield"]
	MoneyMarketYield 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MoneyMarketYield"]


enum ResetRelativeToEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ResetRelativeToEnum"]
	CalculationPeriodStartDate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CalculationPeriodStartDate"]
	CalculationPeriodEndDate	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CalculationPeriodEndDate"]


enum ResourceTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resourceTypeScheme_1_1"]
	Confirmation	 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Confirmation"]
	SupplementalMaterialEconomicTerms 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SupplementalMaterialEconomicTerms"]
	TermSheet 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TermSheet"]


enum RestructuringEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "restructuringScheme_1_1"]
	ModModR	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ModModR"]
	ModR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ModR"]
	R 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "R"]


enum ReturnTypeEnum: 
	[synonym FpML_5_10 value "ReturnTypeEnum"]
	Dividend 
		[synonym FpML_5_10 value "Dividend"]
	Price 
		[synonym FpML_5_10 value "Price"]
	Total 
		[synonym FpML_5_10 value "Total"]
	Variance 
	Volatility 


enum RollConventionEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RollConventionEnum"]
	EOM 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EOM"]
	FRN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FRN"]
	IMM 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IMM"]
	IMMCAD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IMMCAD"]
	IMMAUD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IMMAUD"]
	IMMNZD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IMMNZD"]
	SFE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SFE"]
	NONE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NONE"]
	TBILL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TBILL"]
	_1 displayName "1" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "1"]
	_2 displayName "2" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "2"]
	_3 displayName "3" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "3"]
	_4 displayName "4" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "4"]
	_5 displayName "5" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "5"]
	_6 displayName "6" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "6"]
	_7 displayName "7" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "7"]
	_8 displayName "8" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "8"]
	_9 displayName "9" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "9"]
	_10 displayName "10" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "10"]
	_11 displayName "11" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "11"]
	_12 displayName "12" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "12"]
	_13 displayName "13" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "13"]
	_14 displayName "14" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "14"]
	_15 displayName "15" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "15"]
	_16 displayName "16" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "16"]
	_17 displayName "17" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "17"]
	_18 displayName "18" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "18"]
	_19 displayName "19" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "19"]
	_20 displayName "20" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "20"]
	_21 displayName "21" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "21"]
	_22 displayName "22" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "22"]
	_23 displayName "23" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "23"]
	_24 displayName "24" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "24"]
	_25 displayName "25" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "25"]
	_26 displayName "26" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "26"]
	_27 displayName "27" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "27"]
	_28 displayName "28" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "28"]
	_29 displayName "29" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "29"]
	_30 displayName "30" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "30"]
	MON 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MON"]
	TUE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TUE"]
	WED 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WED"]
	THU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THU"]
	FRI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FRI"]
	SAT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SAT"]
	SUN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SUN"]


enum SettledEntityMatrixSourceEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settledEntityMatrixSourceScheme_1_0"]
	ConfirmationAnnex 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ConfirmationAnnex"]
	NotApplicable 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NotApplicable"]
	Publisher 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Publisher"]


enum SettlementRateOptionEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementRateOptionScheme_2_11"]
	ARS_BNAR_ARS01 displayName "ARS.BNAR/ARS01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ARS.BNAR/ARS01"]
	ARS_EMTA_INDICATIVE_SURVEY_RATE_ARS04 displayName "ARS.EMTA.INDICATIVE.SURVEY.RATE/ARS04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ARS.EMTA.INDICATIVE.SURVEY.RATE/ARS04"]
	ARS_EMTA_INDUSTRY_SURVEY_RATE_ARS03 displayName "ARS.EMTA.INDUSTRY.SURVEY.RATE/ARS03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ARS.EMTA.INDUSTRY.SURVEY.RATE/ARS03"]
	ARS_MAE_ARS05 displayName "ARS.MAE/ARS05" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ARS.MAE/ARS05"]
	ARS_OFFICIAL_RATE_ARS02 displayName "ARS.OFFICIAL.RATE/ARS02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ARS.OFFICIAL.RATE/ARS02"]
	BRL_BRBY_BRL01 displayName "BRL.BRBY/BRL01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.BRBY/BRL01"]
	BRL_EMTA_INDICATIVE_SURVEY_RATE_BRL13 displayName "BRL.EMTA.INDICATIVE.SURVEY.RATE/BRL13" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.EMTA.INDICATIVE.SURVEY.RATE/BRL13"]
	BRL_EMTA_INDUSTRY_SURVEY_RATE_BRL12 displayName "BRL.EMTA.INDUSTRY.SURVEY.RATE/BRL12" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.EMTA.INDUSTRY.SURVEY.RATE/BRL12"]
	BRL_OFFICIAL_RATE_BRL02 displayName "BRL.OFFICIAL.RATE/BRL02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.OFFICIAL.RATE/BRL02"]
	BRL_PCOT_COMMERCIAL_BRL03 displayName "BRL.PCOT-COMMERCIAL/BRL03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.PCOT-COMMERCIAL/BRL03"]
	BRL_PCOT_FLOATING_BRL04 displayName "BRL.PCOT-FLOATING/BRL04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.PCOT-FLOATING/BRL04"]
	BRL_PTAX_BRL09 displayName "BRL.PTAX/BRL09" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.PTAX/BRL09"]
	BRL_PTAX_COMMERCIAL_BRFR_BRL06 displayName "BRL.PTAX-COMMERCIAL.BRFR/BRL06" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.PTAX-COMMERCIAL.BRFR/BRL06"]
	BRL_PTAX_COMMERCIAL_BRL05 displayName "BRL.PTAX-COMMERCIAL/BRL05" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.PTAX-COMMERCIAL/BRL05"]
	BRL_PTAX_FLOATING_BRFR_BRL08 displayName "BRL.PTAX-FLOATING.BRFR/BRL08" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.PTAX-FLOATING.BRFR/BRL08"]
	BRL_PTAX_FLOATING_BRL07 displayName "BRL.PTAX-FLOATING/BRL07" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL.PTAX-FLOATING/BRL07"]
	CLP_BCCH_CLP01 displayName "CLP.BCCH/CLP01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.BCCH/CLP01"]
	CLP_CHILD_INFORMAL_CLP02 displayName "CLP.CHILD-INFORMAL/CLP02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.CHILD-INFORMAL/CLP02"]
	CLP_CHILD_INTERBANK_CLP03 displayName "CLP.CHILD-INTERBANK/CLP03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.CHILD-INTERBANK/CLP03"]
	CLP_CHILD_OBSERVADO_CLP04 displayName "CLP.CHILD-OBSERVADO/CLP04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.CHILD-OBSERVADO/CLP04"]
	CLP_CHILG_INFORMAL_CLP05 displayName "CLP.CHILG-INFORMAL/CLP05" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.CHILG-INFORMAL/CLP05"]
	CLP_CHILG_INTERBANK_CLP06 displayName "CLP.CHILG-INTERBANK/CLP06" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.CHILG-INTERBANK/CLP06"]
	CLP_CHILG_OBSERVADO_CLP07 displayName "CLP.CHILG-OBSERVADO/CLP07" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.CHILG-OBSERVADO/CLP07"]
	CLP_DOLAR_OBS_CLP10 displayName "CLP.DOLAR.OBS/CLP10" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.DOLAR.OBS/CLP10"]
	CLP_EMTA_INDICATIVE_SURVEY_RATE_CLP11 displayName "CLP.EMTA.INDICATIVE.SURVEY.RATE/CLP11" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.EMTA.INDICATIVE.SURVEY.RATE/CLP11"]
	CLP_OFFICIAL_RATE_CLP08 displayName "CLP.OFFICIAL.RATE/CLP08" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.OFFICIAL.RATE/CLP08"]
	CLP_TELERATE_38942_CLP09 displayName "CLP.TELERATE.38942/CLP09" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP.TELERATE.38942/CLP09"]
	CNY_SAEC_CNY01 displayName "CNY.SAEC/CNY01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY.SAEC/CNY01"]
	CNY_SFEMC_INDICATIVE_SURVEY_RATE_CNY02 displayName "CNY.SFEMC.INDICATIVE.SURVEY.RATE/CNY02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY.SFEMC.INDICATIVE.SURVEY.RATE/CNY02"]
	COP_CO_COL03_COP01 displayName "COP.CO/COL03/COP01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COP.CO/COL03/COP01"]
	COP_EMTA_INDICATIVE_SURVEY_RATE_COP03 displayName "COP.EMTA.INDICATIVE.SURVEY.RATE/COP03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COP.EMTA.INDICATIVE.SURVEY.RATE/COP03"]
	COP_TRM_COP02 displayName "COP.TRM/COP02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COP.TRM/COP02"]
	CURRENCY_IMPLIED_RATE__ADR__CURA1 displayName "CURRENCY-IMPLIED.RATE.(ADR)/CURA1" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CURRENCY-IMPLIED.RATE.(ADR)/CURA1"]
	CURRENCY_IMPLIED_RATE__LOCAL_ASSET__CURA2 displayName "CURRENCY-IMPLIED.RATE.(LOCAL.ASSET)/CURA2" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CURRENCY-IMPLIED.RATE.(LOCAL.ASSET)/CURA2"]
	CURRENCY_MUTUAL_AGREEMENT_CURA3 displayName "CURRENCY-MUTUAL.AGREEMENT/CURA3" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CURRENCY-MUTUAL.AGREEMENT/CURA3"]
	CURRENCY_REFERENCE_DEALERS_CURA4 displayName "CURRENCY-REFERENCE.DEALERS/CURA4" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CURRENCY-REFERENCE.DEALERS/CURA4"]
	CURRENCY_WHOLESALE_MARKET_CURA5 displayName "CURRENCY-WHOLESALE.MARKET/CURA5" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CURRENCY-WHOLESALE.MARKET/CURA5"]
	ECS_DNRP_ECS01 displayName "ECS.DNRP/ECS01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ECS.DNRP/ECS01"]
	IDR_ABS_IDR01 displayName "IDR.ABS/IDR01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR.ABS/IDR01"]
	IDR_JISDOR_IDR04 displayName "IDR.JISDOR/IDR04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR.JISDOR/IDR04"]
	IDR_SFEMC_INDICATIVE_SURVEY_RATE_IDR02 displayName "IDR.SFEMC.INDICATIVE.SURVEY.RATE/IDR02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR.SFEMC.INDICATIVE.SURVEY.RATE/IDR02"]
	IDR_VWAP_IDR03 displayName "IDR.VWAP/IDR03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR.VWAP/IDR03"]
	ILS_BOIJ_ILS01 displayName "ILS.BOIJ/ILS01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ILS.BOIJ/ILS01"]
	ILS_FXIL_ILS02 displayName "ILS.FXIL/ILS02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ILS.FXIL/ILS02"]
	INR_FBIL_INR01 displayName "INR.FBIL/INR01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR.FBIL/INR01"]
	INR_RBIB_INR01 displayName "INR.RBIB/INR01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR.RBIB/INR01"]
	INR_SFEMC_INDICATIVE_SURVEY_RATE_INR02 displayName "INR.SFEMC.INDICATIVE.SURVEY.RATE/INR02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR.SFEMC.INDICATIVE.SURVEY.RATE/INR02"]
	KRW_KEBEY_KRW01 displayName "KRW.KEBEY/KRW01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW.KEBEY/KRW01"]
	KRW_KFTC18_KRW02 displayName "KRW.KFTC18/KRW02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW.KFTC18/KRW02"]
	KRW_SFEMC_INDICATIVE_SURVEY_RATE_KRW04 displayName "KRW.SFEMC.INDICATIVE.SURVEY.RATE/KRW04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW.SFEMC.INDICATIVE.SURVEY.RATE/KRW04"]
	KRW_TELERATE_45644_KRW03 displayName "KRW.TELERATE.45644/KRW03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW.TELERATE.45644/KRW03"]
	KZT_EMTA_INDICATIVE_SURVEY_RATE_KZT02 displayName "KZT.EMTA.INDICATIVE.SURVEY.RATE/KZT02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KZT.EMTA.INDICATIVE.SURVEY.RATE/KZT02"]
	KZT_KASE_KZT01 displayName "KZT.KASE/KZT01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KZT.KASE/KZT01"]
	LBP_BDLX_LBP01 displayName "LBP.BDLX/LBP01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LBP.BDLX/LBP01"]
	MAD_OFFICIAL_RATE_MAD01 displayName "MAD.OFFICIAL.RATE/MAD01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MAD.OFFICIAL.RATE/MAD01"]
	MXP_BNMX_MXP01 displayName "MXP.BNMX/MXP01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXP.BNMX/MXP01"]
	MXP_FIXING_RATE_MXP02 displayName "MXP.FIXING.RATE/MXP02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXP.FIXING.RATE/MXP02"]
	MXP_MEX01_MXP03 displayName "MXP.MEX01/MXP03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXP.MEX01/MXP03"]
	MXP_PUBLISHED_MXP04 displayName "MXP.PUBLISHED/MXP04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXP.PUBLISHED/MXP04"]
	MYR_ABS_MYR01 displayName "MYR.ABS/MYR01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR.ABS/MYR01"]
	MYR_KL_REF_MYR04 displayName "MYR.KL.REF/MYR04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR.KL.REF/MYR04"]
	MYR_PPKM_MYR03 displayName "MYR.PPKM/MYR03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR.PPKM/MYR03"]
	MYR_SFEMC_INDICATIVE_SURVEY_RATE_MYR02 displayName "MYR.SFEMC.INDICATIVE.SURVEY.RATE/MYR02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR.SFEMC.INDICATIVE.SURVEY.RATE/MYR02"]
	PEN_EMTA_INDICATIVE_SURVEY_RATE_PEN04 displayName "PEN.EMTA.INDICATIVE.SURVEY.RATE/PEN04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PEN.EMTA.INDICATIVE.SURVEY.RATE/PEN04"]
	PEN_INTERBANK_AVE_PEN05 displayName "PEN.INTERBANK.AVE/PEN05" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PEN.INTERBANK.AVE/PEN05"]
	PEN_PDSB_PEN01 displayName "PEN.PDSB/PEN01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PEN.PDSB/PEN01"]
	PEN_WT_AVE_PEN03 displayName "PEN.WT.AVE/PEN03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PEN.WT.AVE/PEN03"]
	PHP_BAPPESO_PHP06 displayName "PHP.BAPPESO/PHP06" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP.BAPPESO/PHP06"]
	PHP_PDSPESO_PHP06 displayName "PHP.PDSPESO/PHP06" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP.PDSPESO/PHP06"]
	PHP_PHPESO_PHP01 displayName "PHP.PHPESO/PHP01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP.PHPESO/PHP01"]
	PHP_SFEMC_INDICATIVE_SURVEY_RATE_PHP05 displayName "PHP.SFEMC.INDICATIVE.SURVEY.RATE/PHP05" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP.SFEMC.INDICATIVE.SURVEY.RATE/PHP05"]
	PHP_TELERATE_15439_PHP03 displayName "PHP.TELERATE.15439/PHP03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP.TELERATE.15439/PHP03"]
	PHP_TELERATE_2920_PHP02 displayName "PHP.TELERATE.2920/PHP02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP.TELERATE.2920/PHP02"]
	PKR_SBPK_PKR01 displayName "PKR.SBPK/PKR01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PKR.SBPK/PKR01"]
	PKR_SFEMC_INDICATIVE_SURVEY_RATE_PKR02 displayName "PKR.SFEMC.INDICATIVE.SURVEY.RATE/PKR02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PKR.SFEMC.INDICATIVE.SURVEY.RATE/PKR02"]
	PLZ_NBPQ_PLZ01 displayName "PLZ.NBPQ/PLZ01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLZ.NBPQ/PLZ01"]
	PLZ_NBPR_PLZ02 displayName "PLZ.NBPR/PLZ02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLZ.NBPR/PLZ02"]
	RUB_CME_EMTA_RUB03 displayName "RUB.CME-EMTA/RUB03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB.CME-EMTA/RUB03"]
	RUB_EMTA_INDICATIVE_SURVEY_RATE_RUB04 displayName "RUB.EMTA.INDICATIVE.SURVEY.RATE/RUB04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB.EMTA.INDICATIVE.SURVEY.RATE/RUB04"]
	RUB_MICEXFRX_RUB01 displayName "RUB.MICEXFRX/RUB01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB.MICEXFRX/RUB01"]
	RUB_MMVB_RUB02 displayName "RUB.MMVB/RUB02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB.MMVB/RUB02"]
	SGD_VWAP_SGD3 displayName "SGD.VWAP/SGD3" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD.VWAP/SGD3"]
	SKK_NBSB_SKK01 displayName "SKK.NBSB/SKK01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SKK.NBSB/SKK01"]
	THB_ABS_THB01 displayName "THB.ABS/THB01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB.ABS/THB01"]
	THB_VWAP_THB01 displayName "THB.VWAP/THB01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB.VWAP/THB01"]
	TWD_SFEMC_INDICATIVE_SURVEY_RATE_TWD04 displayName "TWD.SFEMC.INDICATIVE.SURVEY.RATE/TWD04" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD.SFEMC.INDICATIVE.SURVEY.RATE/TWD04"]
	TWD_TAIFX1_TWD03 displayName "TWD.TAIFX1/TWD03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD.TAIFX1/TWD03"]
	TWD_TELERATE_6161_TWD01 displayName "TWD.TELERATE.6161/TWD01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD.TELERATE.6161/TWD01"]
	TWD_TFEMA_TWD02 displayName "TWD.TFEMA/TWD02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD.TFEMA/TWD02"]
	UAH_EMTA_INDICATIVE_SURVEY_RATE_UAH03 displayName "UAH.EMTA.INDICATIVE.SURVEY.RATE/UAH03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "UAH.EMTA.INDICATIVE.SURVEY.RATE/UAH03"]
	UAH_EMTA_INDUSTRY_SURVEY_RATE_UAH02 displayName "UAH.EMTA.INDUSTRY.SURVEY.RATE/UAH02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "UAH.EMTA.INDUSTRY.SURVEY.RATE/UAH02"]
	UAH_GFI_UAH01 displayName "UAH.GFI/UAH01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "UAH.GFI/UAH01"]
	VEF_FIX_VEF01 displayName "VEF.FIX/VEF01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VEF.FIX/VEF01"]
	VND_ABS_VND01 displayName "VND.ABS/VND01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VND.ABS/VND01"]
	VND_FX_VND02 displayName "VND.FX/VND02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VND.FX/VND02"]
	VND_SFEMC_INDICATIVE_SURVEY_RATE_VND03 displayName "VND.SFEMC.INDICATIVE.SURVEY.RATE/VND03" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VND.SFEMC.INDICATIVE.SURVEY.RATE/VND03"]


enum ShareExtraordinaryEventEnum: 
	[synonym FpML_5_10 value "ShareExtraordinaryEventEnum"]
	AlternativeObligation 
		[synonym FpML_5_10 value "AlternativeObligation"]
	CancellationAndPayment 
		[synonym FpML_5_10 value "CancellationAndPayment"]
	OptionsExchange 
		[synonym FpML_5_10 value "OptionsExchange"]
	CalculationAgent 
		[synonym FpML_5_10 value "CalculationAgent"]
	ModifiedCalculationAgent 
		[synonym FpML_5_10 value "ModifiedCalculationAgent"]
	PartialCancellationAndPayment 
		[synonym FpML_5_10 value "PartialCancellationAndPayment"]
	Component 
		[synonym FpML_5_10 value "Component"]


enum SpreadScheduleTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "spreadScheduleTypeScheme_1_0"]
	Long 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Long"]
	Short 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Short"]


enum StandardSettlementStyleEnum: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardSettlementStyleEnum"]
	Standard 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Standard"]
	Net 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Net"]
	StandardAndNet 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StandardAndNet"]


enum StubPeriodTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StubPeriodTypeEnum"]
	ShortInitial 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ShortInitial"]
	ShortFinal 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ShortFinal"]
	LongInitial 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LongInitial"]
	LongFinal 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LongFinal"]


enum TriggerTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TriggerTypeEnum"]
	EqualOrLess 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EqualOrLess"]
	EqualOrGreater 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EqualOrGreater"]
	Equal 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Equal"]
	Less 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Less"]
	Greater 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Greater"]


enum TimeTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TimeTypeEnum"]
	Close 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Close"]
	Open 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Open"]
	OSP 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OSP"]
	SpecificTime 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SpecificTime"]
	XETRA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "XETRA"]
	DerivativesClose 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DerivativesClose"]
	AsSpecifiedInMasterConfirmation 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AsSpecifiedInMasterConfirmation"]


enum TriggerTimeTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TriggerTimeTypeEnum"]
	Closing 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Closing"]
	Anytime 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Anytime"]


enum ValuationMethodEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ValuationMethodEnum"]
	Market
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Market"]
	Highest
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Highest"]
	AverageMarket
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AverageMarket"]
	AverageHighest
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AverageHighest"]
	BlendedMarket
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BlendedMarket"]
	BlendedHighest
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BlendedHighest"]
	AverageBlendedMarket
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AverageBlendedMarket"]
	AverageBlendedHighest
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AverageBlendedHighest"]


enum WeeklyRollConventionEnum extends DayOfWeekEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WeeklyRollConventionEnum"]
	TBILL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TBILL"]




metaType reference string
metaType id string
metaType scheme string

import cdm.base.*
import cdm.synonyms.config.*

enum AssetClassEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "assetClassScheme_2_0"]
	Commodity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Commodity"]
	Credit 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Credit"]
	Equity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Equity"]
	ForeignExchange 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ForeignExchange"]
	InterestRate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "InterestRate"]


enum MortgageSectorEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mortgageSectorScheme_1_0"]
	ABS	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ABS"]
	CDO	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CDO"]
	CMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CMBS"]
	RMBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RMBS"]


enum ProductIdSourceEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "productIdScheme"]
	

	CUSIP 
	SEDOL 
	ISIN 
	RIC 
	FIGI 
	Wertpapier 
	Sicovam 
    //added new:
	TICKER 
    BBGID 
    
enum TaxonomySourceEnum: 

	CFI 
	ISDA 
	ICAD 

enum ISOCurrencyCodeEnum: 
 
	AED 
	AFN 
	ALL 
	AMD 
	ANG 
	AOA 
	ARS 
	AUD 
	AWG 
	AZN 
	BAM 
	BBD 
	BDT 
	BGN 
	BHD 
	BIF 
	BMD 
	BND 
	BOB 
	BOV 
	BRL 
	BSD 
	BTN 
	BWP 
	BYN 
	BZD 
	CAD 
	CDF 
	CHE 
	CHF 
	CHW 
	CLF 
	CLP 
	CNY 
	COP 
	COU 
	CRC 
	CUC 
	CUP 
	CVE 
	CZK 
	DJF 
	DKK 
	DOP 
	DZD 
	EGP 
	ERN 
	ETB 
	EUR 
	FJD 
	FKP 
	GBP 
	GEL 
	GHS 
	GIP 
	GMD 
	GNF 
	GTQ 
	GYD 
	HKD 
	HNL 
	HRK 
	HTG 
	HUF 
	IDR 
	ILS 
	INR 
	IQD 
	IRR 
	ISK 
	JMD 
	JOD 
	JPY 
	KES 
	KGS 
	KHR 
	KMF 
	KPW 
	KRW 
	KWD 
	KYD 
	KZT 
	LAK 
	LBP 
	LKR 
	LRD 
	LSL 
	LYD 
	MAD 
	MDL 
	MGA 
	MKD 
	MMK 
	MNT 
	MOP 
	MRU 
	MUR 
	MVR 
	MWK 
	MXN 
	MXV 
	MYR 
	MZN 
	NAD 
	NGN 
	NIO 
	NOK 
	NPR 
	NZD 
	OMR 
	PAB 
	PEN 
	PGK 
	PHP 
	PKR 
	PLN 
	PYG 
	QAR 
	RON 
	RSD 
	RUB 
	RWF 
	SAR 
	SBD 
	SCR 
	SDG 
	SEK 
	SGD 
	SHP 
	SLL 
	SOS 
	SRD 
	SSP 
	STN 
	SVC 
	SYP 
	SZL 
	THB 
	TJS 
	TMT 
	TND 
	TOP 
	TRY 
	TTD 
	TWD 
	TZS 
	UAH 
	UGX 
	USD 
	USN 
	UYI 
	UYU 
	UYW 
	UZS 
	VES 
	VND 
	VUV 
	WST 
	XAF 
	XAG 
	XAU 
	XBA 
	XBB 
	XBC 
	XBD 
	XCD 
	XDR 
	XOF 
	XPD 
	XPF 
	XPT 
	XSU 
	XUA 
	XXX 
	YER 
	ZAR 
	ZMW 
	ZWL 

 
enum CurrencyCodeEnum extends ISOCurrencyCodeEnum: 
	[synonym FpML_5_10 value "currencyScheme"]
	CNH 
	CNT 
	GGP 
	IMP 
	JEP 
	KID 
	MCF 
	SML 
	VAL 


 

import cdm.base.math.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

body Authority ESMA 
body Authority FCA 
body Organisation ISDA 

corpus Regulation "600/2014" MiFIR 
	

corpus Regulation "648/2012" EMIR 
	

corpus CommissionDelegatedRegulation "2017/590" RTS_22
	 

corpus CommissionDelegatedRegulation "148/2013" ITS_9
	

corpus ESMA_Q_and_A "09April 2019|ESMA70-1861941480-56" Q_AND_A_MiFIR_DATA_REPORTING
	


corpus ReportingStandard "ISO 20022" ISO_20022
	

segment rationale
segment rationale_author
segment structured_provision

segment article
segment whereas
segment annex
segment table
segment section
segment field
segment paragraph
segment question

report ESMA MiFIR RTS_22 in T+1
	when MifirInvestmentFirm and ReportableTransaction and ReportableProduct
	using standard ISO_20022 with fields
		ReportStatus
		TransactionReferenceNumber
		TradingVenueTransactionIdentificationCode
		ExecutingEntityIdentificationCode
		IsInvestmentFirm
		SubmittingEntityIdentificationCode
		BuyerSeller
		TransmissionOfOrderIndicator
		TradingDateTime
		TradingCapacity
		Quantity
		Price
		Venue
		CountryOfTheBranchMembership
		InstrumentIdentificationCode
		InstrumentFullName
		InstrumentClassification
		NotionalCurrency1
		NotionalCurrency2
		PriceMultiplier
		UnderlyingInstrumentCode
		UnderlyingIndexName
		UnderlyingIndexTermPeriod
		UnderlyingIndexTermMultiplier
		ExpiryDate
		DeliveryType
		InvestmentDecisionWithinFirm
		PersonResponsibleForInvestmentDecisionCountry
		ExecutionWithinFirm
		PersonResponsibleForExecutionCountry
		CommodityDerivativeIndicator
		SecuritiesFinancingTransactionIndicator

report ESMA EMIR ITS_9 in T+1
	when EmirInvestmentFirm
	using standard ISO_20022 with fields
		ReportingCounterpartyID
		BuyerSeller
  		MaturityDate
		Price

eligibility rule ReportableProduct 
	[regulatoryReference ESMA MiFIR RTS_22 article "26" paragraph "2"
   		provision "The obligation laid down in paragraph 1 shall apply to: (a) financial instruments which are admitted to trading or traded on a trading venue or for which a request for admission to trading has been made; (b) financial instruments where the underlying is a financial instrument traded on a trading venue; and(c) financial instruments where the underlying is an index or a basket composed of financial instruments traded on a trading venue The obligation shall apply to transactions in financial instruments referred to in points (a) to (c) irrespective of whether or not such transactions are carried out on the trading venue."]
		filter when rule HasContract

eligibility rule HasContract 
	[regulatoryReference ESMA MiFIR RTS_22 article "2"
   		provision "For the purposes of Article 26 of Regulation (EU) No 600/2014, the conclusion of an acquisition or disposal of a financial instrument referred to in Article 26(2) of Regulation (EU) No 600/2014 shall constitute a transaction."]
		ContractForEvent then
		extract Contract -> tradableProduct -> product -> contractualProduct exists

eligibility rule ReportableTransaction 
	[regulatoryReference ESMA MiFIR RTS_22 article "26"
	provision "For the purposes of Article 26 of Regulation (EU) No 600/2014, the conclusion of an acquisition or disposal of a financial instrument referred to in Article 26(2) of Regulation (EU) No 600/2014 shall constitute a transaction."]
		(NewTrade, QuantityChange)

eligibility rule NewTrade
	[regulatoryReference ESMA MiFIR RTS_22 article "26" paragraph "2"
		provision "An acquisition referred to in paragraph 1 shall include the following:  (b) entering into a derivative contract; (c) an increase in the notional amount of a derivative contract. 5. A transaction for the purposes of Article 26 of Regulation (EU) No 600/2014 shall not include the following:  (b) a contract arising exclusively for clearing or settlement purposes; (c) a settlement of mutual obligations between parties where the net obligation is carried forward;  (e) a post-trade assignment or novation of a derivative contract where one of the parties to the derivative contract is replaced by a third party (f) a portfolio compression;  (h) the exercise of a right embedded in a financial instrument, or the conversion of a convertible bond and the resultant transaction in the underlying financial instrument; (i) the creation, expiration or redemption of a financial instrument as a result of pre-determined contractual terms, or as a result of mandatory events which are beyond the control of the investor where no investment decision by the investor takes place at the point in time of the creation, expiration or redemption of the financial instrument; (j) a decrease or increase in the notional amount of a derivative contract as a result of pre-determined contractual terms or mandatory events where no investment decision by the investor takes place at the point in time of the change in the notional amount; (k) a change in the composition of an index or a basket that occurs after the execution of a transaction;  "]
		(
			filter when WorkflowStep -> businessEvent -> primitives -> execution exists,
			filter when (WorkflowStep -> businessEvent -> primitives -> contractFormation exists and WorkflowStep -> businessEvent -> primitives -> contractFormation -> after only exists)
		)
				
eligibility rule QuantityChange
	[regulatoryReference ESMA MiFIR RTS_22 article "26" paragraph "2"
		structured_provision "A business event that contains a quantityChange primitive must be reported if the business event is in {Increase, partialTermination, Termination}"
		provision " An acquisition referred to in paragraph 1 shall include the following:  (c) an increase in the notional amount of a derivative contract. 3. A disposal referred to in paragraph 1 shall include the following:  (b) closing out of a derivative contract; (c) a decrease in the notional amount of a derivative 5. A transaction for the purposes of Article 26 of Regulation (EU) No 600/2014 shall not include the following:  (e) a post-trade assignment or novation of a derivative contract where one of the parties to the derivative contract is replaced by a third party (f) a portfolio compression;  (h) the exercise of a right embedded in a financial instrument, or the conversion of a convertible bond and the resultant transaction in the underlying financial instrument; (i) the creation, expiration or redemption of a financial instrument as a result of pre-determined contractual terms, or as a result of mandatory events which are beyond the control of the investor where no investment decision by the investor takes place at the point in time of the creation, expiration or redemption of the financial instrument; (j) a decrease or increase in the notional amount of a derivative contract as a result of pre-determined contractual terms or mandatory events where no investment decision by the investor takes place at the point in time of the change in the notional amount; (k) a change in the composition of an index or a basket that occurs after the execution of a transaction; "]
	filter when WorkflowStep -> businessEvent -> primitives -> quantityChange exists

eligibility rule MifirInvestmentFirm 
	[regulatoryReference ESMA MiFIR RTS_22 section "Context of the Delegation Act"
	   	provision "The Markets in Financial Instruments Regulation (EU) No 600/2014 (MiFIR) requires investment firms to report complete and accurate details of transactions in financial instruments. ‘investment firm’ means any legal person whose regular occupation or business is the provision of one or more investment services to third parties and/or the performance of one or more investment activities on a professional basis. Member States may include in the definition of investment firms undertakings which are not legal persons, provided that: (a) their legal status ensures a level of protection for third parties’ interests equivalent to that afforded by legal persons; and (b) they are subject to equivalent prudential supervision appropriate to their legal form. However, where a natural person provides services involving the holding of third party funds or transferable securities, that person may be considered to be an investment firm for the purposes of this Directive and of Regulation (EU) No 600/2014 only if, without prejudice to the other requirements imposed in this Directive, in Regulation (EU) No 600/2014, and in Directive 2013/36/EU, that person complies with the following conditions: (a) the ownership rights of third parties in instruments and funds must be safeguarded, especially in the event of the insolvency of the firm or of its proprietors, seizure, set-off or any other action by creditors of the firm or of its proprietors; (b) the firm must be subject to rules designed to monitor the firm’s solvency and that of its proprietors; (c) the firm’s annual accounts must be audited by one or more persons empowered, under national law, to audit accounts; (d) where the firm has only one proprietor, that person must make provision for the protection of investors in the event of the firm’s cessation of business following the proprietor’s death or incapacity or any other such event"]
		filter when rule IsExecutingEntityInvestmentFirm then
	    filter when rule BranchInEU


eligibility rule EmirInvestmentFirm 
	[regulatoryReference ESMA EMIR ITS_9 article "1 (2)"
   		provision "This Regulation shall apply to CCPs and their clearing members, to financial counterparties and to trade repositories. It shall apply to non-financial counterparties and trading venues where so provided"]
			filter when rule CountryOfIncorporationInEEA

eligibility rule BranchInEU
		ContractForEvent then
			ExecutingEntityForReportingParty then
			 extract ExecutingEntity -> addressOfBranch then
			IsAddressInEU

eligibility rule CountryOfIncorporationInEU
		ContractForEvent then
			ExecutingEntityForReportingParty then
			 extract ExecutingEntity -> addressOfIncorporation then
			IsAddressInEU

eligibility rule BranchInEEA
		ContractForEvent then
			ExecutingEntityForReportingParty then
			 extract ExecutingEntity -> addressOfBranch then
			IsAddressInEEA

eligibility rule CountryOfIncorporationInEEA
		ContractForEvent then
			ExecutingEntityForReportingParty then
			 extract ExecutingEntity -> addressOfIncorporation then
			IsAddressInEEA

eligibility rule IsExecutingEntityInvestmentFirm
		ContractForEvent then
		ExecutingEntityForReportingParty then
		extract ExecutingEntity -> isInvestmentFirm

eligibility rule ExecutingEntityForReportingParty
			extract Contract -> partyContractInformation then
			filter when PartyContractInformation -> relatedParty -> role = PartyRoleEnum -> ReportingParty then
			extract PartyContractInformation -> partyReference then
			lookup ExecutingEntity ExecutingEntity

reporting rule MaturityDate 
	[regulatoryReference ESMA MiFIR RTS_22 annex "1. Table 2. Field 54" provision "Date of maturity of the financial instrument. Field only applies to debt instruments with defined maturity."]
	[regulatoryReference ESMA EMIR ITS_9 field "2.27" provision "Original date of expiry of the reported contract."]
 	ContractForEvent then extract Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> terminationDate -> adjustableDate -> unadjustedDate

reporting rule ReportingCounterpartyID
	[regulatoryReference ESMA EMIR ITS_9 field "1.2"
 	   	provision "Unique code identifying the reporting counterparty of the contract (the LEI)"]
 	ContractForEvent then
	 	extract Contract -> partyContractInformation then
			filter when PartyContractInformation -> relatedParty -> role = PartyRoleEnum -> ReportingParty then
			extract PartyContractInformation -> partyReference -> partyId
			as "Reporting Counterparty ID"


reporting rule ReportStatus 
	[regulatoryReference ESMA MiFIR RTS_22
			annex "I" table "2" field "1"
			provision "Indication as to whether the transaction report is new or a cancellation."]
	[regulatoryReference ESMA MiFIR RTS_22
			article "2"
			rationale_author "DRR"
			rationale "Article 2 means that each reportable event is treated as an independent transaction. The practical implementation of corrections is: A New event is a NEWT, A new, non-reportable version of a previously-reported event, that renders the previous version of the same event non-reportable, is a CANC, A new, non-reportable version of a non-reportable event is not reported, A new, reportable version of a previously-reported event, that supersedes the previous version of the same event is a CANC followed by a NEWT"
			structured_provision "MiFIR.ReportStatus is by definition ‘NEWT’ unless the report is a Cancellation when MiFIR.ReportStatus is by definition ‘CANC’"
			provision "Indication as to whether the transaction report is new or a cancellation."]
 	extract if WorkflowStep -> businessEvent -> primitives -> execution exists 
 				or WorkflowStep -> businessEvent -> primitives -> contractFormation exists
 				or WorkflowStep -> businessEvent -> primitives -> quantityChange exists
		then "NEWT"
			else if WorkflowStep -> action = ActionEnum -> Cancel
				then "CANC"
				else if WorkflowStep -> businessEvent -> eventQualifier = "Termination"
					then "CANC"
					else ""
		 			as "Report Status"


reporting rule TransactionReferenceNumber
		[regulatoryReference ESMA MiFIR RTS_22
			annex "I" table "2" field "2"
			provision "Identification number that is unique to the executing firm for each transaction report. Where, pursuant to Article 26(5) of Regulation (EU) No 600/2014, a trading venue submits a transaction report on behalf of a firm that is not subject to Regulation (EU) No 600/2014, the trading venue shall populate this field with a number that has been internally generated by the trading venue and that is unique for each transaction report submitted by the trading venue"
		]
		extract WorkflowStep -> eventIdentifier -> assignedIdentifier -> identifier
 			as "Transaction Reference Number"


reporting rule TradingVenueTransactionIdentificationCode 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "3"
			provision "This is a number generated by trading venues and disseminated to both the buying and the selling parties in accordance with Article 12 of Commission Delegated Regulation (EU) 2017/580"
		]
 	ContractForEvent then
	 	extract Contract -> contractIdentifier -> assignedIdentifier -> identifier
 		as "Trading Venue Transaction Identification Code"

reporting rule ExecutingEntityIdentificationCode 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "4"
		   	provision "Code used to identify the entity executing the transaction."]
			ContractForEvent then
			extract Contract -> partyContractInformation then
			filter when PartyContractInformation -> relatedParty -> role = PartyRoleEnum -> ReportingParty then
			extract PartyContractInformation -> partyReference then
			extract Party -> partyId

 		as "Executing Entity Identification Code"

reporting rule IsInvestmentFirm
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "5"
			provision "Indicates whether the entity identified in field 4 is an investment firm covered by Article 4(1) of Directive 2014/65/EU."
		]
	 	return "Y"
			as "Is Investment Firm"

reporting rule SubmittingEntityIdentificationCode 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "2"
			provision "Code used to identify the entity submitting the transaction report to the competent authority in accordance with Article 26(7) of Regulation (EU) No 600/2014. Where the report is submitted by the executing firm directly to the competent authority, it shall be populated with the LEI of the executing firm (where the executing firm is a legal entity). Where the report is submitted by a trading venue, it shall be populated with the LEI of the operator of the trading venue. Where the report is submitted by an ARM, it shall be populated with the LEI of the ARM."
		]
 	ContractForEvent then
 	extract Contract -> partyContractInformation then
 	filter when PartyContractInformation -> relatedParty -> role = PartyRoleEnum -> ReportingParty then
 	extract PartyContractInformation -> partyReference -> partyId
 		as "Submitting Entity Identification Code"




reporting rule TransmissionOfOrderIndicator 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "25"
			provision "‘true’ shall be populated by the transmitting firm within the transmitting firm's report where the conditions for transmission specified in Article 4 were not satisfied ‘false’ – in all other circumstances"
		]
 	return "Out Of Scope"
 		as "Transmission Of Order Indicator"


reporting rule TradingDateTime 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "28"
			provision "Date and time when the transaction was executed. For transactions executed on a trading venue, the level of granularity shall be in accordance with the requirements set out in Article of Commission Delegated Regulation (EU) 2017/574 (2). For transactions not executed on a trading venue, the date and time shall be when the parties agree the content of the following fields: quantity, price, currencies in fields 31, 34 and 44, instrument identification code, instrument classification and underlying instrument code, where applicable. For transactions not executed on a trading venue the time reported shall be at least to the nearest second. Where the transaction results from an order transmitted by the executing firm on behalf of a client to a third party where the conditions for transmission set out in Article 4 were not satisfied, this shall be the date and time of the transaction rather than the time of the order transmission."]
 	extract WorkflowStep -> timestamp then
 		filter when EventTimestamp -> qualification = EventTimestampQualificationEnum -> executionDateTime then
 		extract EventTimestamp -> dateTime
 		as "Trading Date Time"

reporting rule TradingCapacity 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "29"
			provision "Indication of whether the transaction results from the executing firm carrying out matched principal trading under Article 4(1)(38) of Directive 2014/65/EU or dealing on own account under Article 4(1)(6) of Directive 2014/65/EU. Where the transaction does not result from the executing firm carrying out matched principal trading or dealing on own account, the field shall indicate that the transaction was carried out under any other capacity."
		]
 	return "Out Of Scope"
 		as "Trading Capacity"

reporting rule Quantity 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "30"
 	   	provision "The number of units of the financial instrument, or the number of derivative contracts in the transaction.
					The nominal or monetary value of the financial instrument.
					For spread bets, the quantity shall be the monetary value wagered per point movement in the underlying financial instrument.
					For credit default swaps, the quantity shall be the notional amount for which the protection is acquired or disposed of.
					For increase or decrease in notional amount derivative contracts, the number shall reflect the absolute value of the change and shall be expressed as a positive number.
					The information reported in this field shall be consistent with the values provided in fields 33 and 46."]
 	ContractForEvent then
 	extract Contract -> tradableProduct -> quantityNotation -> quantity -> amount
		as "Quantity"

 reporting rule FixedRatePrice
 	ContractForEvent then
 		//filter when RateSpecification -> fixedRate count > 0 then
 		filter when Contract -> tradableProduct -> priceNotation -> price -> fixedInterestRate -> rate exists then
	 		extract Contract -> tradableProduct -> priceNotation -> price -> fixedInterestRate -> rate
	 		// extract max value
		 	as "Price"

  reporting rule FloatingRatePrice
 	ContractForEvent then
	 	filter when Contract -> tradableProduct -> priceNotation -> price -> floatingInterestRate -> spread exists then
	 		extract Contract -> tradableProduct -> priceNotation -> price -> floatingInterestRate -> spread //filter when RateSpecification -> fixedRate count = 0 then
	 		// extract max value
	 		as "Price"

reporting rule Venue 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "36"
			provision "Identification of the venue where the transaction was executed. Use the ISO 10383 segment MIC for transactions executed on a trading venue, Systematic Internaliser (SI) or organised trading platform outside of the Union. Where the segment MIC does not exist, use the operating MIC. Use MIC code ‘XOFF’ for financial instruments admitted to trading, or traded on a trading venue or for which a request for admission was made, where the transaction on that financial instrument is not executed on a trading venue, SI or organised trading platform outside of the Union, or where an investment firm does not know it is trading with another investment firm acting as an SI. Use MIC code ‘XXXX’ for financial instruments that are not admitted to trading or traded on a trading venue or for which no request for admission has been made and that are not traded on an organised trading platform outside of the Union but where the underlying is admitted to trading or traded on a trading venue. "
		]
 	return "XXXX"
 		as "Venue"


reporting rule CountryOfTheBranchMembership 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "37"
			provision "Code used to identify the country of a branch of the investment firm whose market membership was used to execute the transaction. Where a branch's market membership was not used, this field shall be populated with the country code of the home Member State of the investment firm or the country code of the country where the firm has established its head office or registered office (in the case of third country firms). This field shall only be populated for the market side of a transaction executed on a trading venue or on an organised trading platform outside of the Union."
		]
 	return "Out Of Scope"
 		as "Country Of The Branch Membership"


reporting rule InstrumentIdentificationCode 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "41"
			provision "Code used to identify the financial instrument. This field applies to financial instruments for which a request for admission to trading has been made, that are admitted to trading or traded on a trading venue or on a systematic internaliser. It also applies to financial instruments which have an ISIN and are traded on organised trading platform outside of the Union where the underlying is a financial instrument traded on a trading venue."
		]
 	return "Out Of Scope"
 		as "Instrument Identification Code"


reporting rule InstrumentFullName 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "42"
			provision "Full name of the financial instrument"
		]
 	return "Out Of Scope"
 		as "Instrument Full Name"


reporting rule InstrumentClassification 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "43"
			provision "Taxonomy used to classify the financial instrument. A complete and accurate CFI code shall be provided."
		]
 	return "Out Of Scope"
 		as "Instrument Classification"


reporting rule NotionalCurrency1 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "44"
			provision "Currency in which the notional is denominated. In the case of an interest rate or currency derivative contract, this will be the notional currency of leg 1 or the currency 1 of the pair.  In the case of swaptions where the underlying swap is single-currency, this will be the notional currency of the underlying swap. For swaptions where the underlying is multi-currency, this will be the notional currency of leg 1 of the swap. "
		]
 	return "Out Of Scope"
 		as "Notional Currency 1"


reporting rule NotionalCurrency2 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "45"
			provision "In the case of multi-currency or cross-currency swaps the currency in which leg 2 of the contract is denominated. For swaptions where the underlying swap is multi-currency, the currency in which leg 2 of the swap is denominated"
		]
 	return "Out Of Scope"
 		as "Notional Currency 2"


reporting rule PriceMultiplier 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "46"
			provision "Number of units of the underlying instrument represented by a single derivative contract. Monetary value covered by a single swap contract where the quantity field indicates the number of swap contracts in the transaction. For a future or option on an index, the amount per index point. For spreadbets the movement in the price of the underlying instrument on which the spreadbet is based. The information reported in this field shall be consistent with the values provided in fields 30 and 33."
		]
 	return "Out Of Scope"
 		as "Price Multiplier"


reporting rule UnderlyingInstrumentCode 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "47"
			provision "ISIN code of the underlying instrument.For ADRs, GDRs and similar instruments, the ISIN code of the financial instrument on which those instruments are based.For convertible bonds, the ISIN code of the instrument in which the bond can be converted.For derivatives or other instruments which have an underlying, the underlying instrument ISIN code, when the underlying is admitted to trading, or traded on a trading venue. Where the underlying is a stock dividend, then ISIN code of the related share entitling the underlying dividend.For Credit Default Swaps, the ISIN of the reference obligation shall be provided.In case the underlying is an Index and has an ISIN, the ISIN code for that index.Where the underlying is a basket, include the ISIN of each constituent of the basket that is admitted to trading or is traded on a trading venue. Field 47 shall be reported as many times as necessary to list all reportable instruments in the basket."
		]
 	return "Out Of Scope"
 		as "Underlying Instrument Code"

reporting rule UnderlyingIndexName
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "48"
   	provision "When the underlying is an index, the name of the Index"
   ]
    ContractForEvent then
 	extract Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout -> underlier then
 		extract
 			if Underlier exists
			then Underlier -> underlyingProduct -> contractualProduct -> productIdentification -> productId
			else "NOAP" // TODO NOAP isn't a basket
			as "Underlying Index Name"


reporting rule UnderlyingIndexTermPeriod 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "49.1"
			provision "In case the underlying is an index, the term of the index."
		]
 	return "Out Of Scope"
 		as "Underlying Index Term Period"


reporting rule UnderlyingIndexTermMultiplier 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "49.2"
			provision "In case the underlying is an index, the term of the index."
		]
 	return "Out Of Scope"
 		as "Underlying Index Term Multiplier"


reporting rule ExpiryDate 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "55"
			provision "Expiry date of the financial instrument. Field only applies to derivatives with a defined expiry date."
		]
 	return "Out Of Scope"
 		as "Expiry Date"


reporting rule DeliveryType 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "56"
			provision "Indication as to whether the transaction is settled physically or in cash. Where delivery type cannot be determined at time of execution, the value shall be ‘OPTL’. The field is only applicable for derivatives."
		]
 	return "Out Of Scope"
 		as "Delivery Type"


reporting rule InvestmentDecisionWithinFirm 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "57"
			provision "Code used to identify the person or algorithm within the investment firm who is responsible for the investment decision. For natural persons, the identifier specified in Article 6 shall be used If the investment decision was made by an algorithm, the field shall be populated as set out in Article 8. Field only applies for investment decision within the firm. Where the transaction is for a transmitted order that has met the conditions for transmission set out in Article 4, this field shall be populated by the receiving firm within the receiving firm's report using the information received from the transmitting firm."
		]
 	return "Out Of Scope"
 		as "Investment Decision Within Firm"


reporting rule PersonResponsibleForInvestmentDecisionCountry 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "58"
			provision "Code used to identify the country of the branch of the investment firm for the person responsible for the investment decision, as set out in Article 14(3)(b). Where the person responsible for the investment decision was not supervised by a branch, this field shall be populated with the country code of the home Member State of the investment firm or the country code of the country where the firm has established its head office or registered office (in the case of third country firms). Where the transaction is for a transmitted order that has met the conditions for transmission set out in Article 4, this field shall be populated by the receiving firm within the receiving firm's report using the information received from the transmitting firm. This field is not applicable when the investment decision was made by an algorithm"
		]
 	return "Out Of Scope"
 		as "Person Responsible For Investment Decision Country"


reporting rule ExecutionWithinFirm 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "59"
			provision "Code used to identify the person or algorithm within the investment firm who is responsible for the execution. For natural persons, the identifier specified in Article 6 shall be used. If the execution was made by an algorithm, the field shall be populated as set out in Article 9."
		]
 	return "Out Of Scope"
 		as "Execution Within Firm"


reporting rule PersonResponsibleForExecutionCountry 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "60"
			provision "Code used to identify the country of the branch of the investment firm for the person responsible for the execution of the transaction, as set out in Article 14(3)(c). Where the person responsible was not supervised by a branch, this field shall be populated with the country code of the home Member State of the investment firm, or the country code of the country where the firm has established its head office or registered office (in the case of third country firms). This field is not applicable when the execution was made by an algorithm."
		]
 	return "Out Of Scope"
 		as "Person Responsible For ExecutionCountry"


reporting rule CommodityDerivativeIndicator 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "64"
			provision "Indication as to whether the transaction reduces risk in an objectively measurable way in accordance with Article 57 of Directive 2014/65/EU. Where the transaction is for a transmitted order that has met the conditions for transmission set out in Article 4, this field shall be populated by the receiving firm in the receiving firm's reports using the information received from the transmitting firm. This field is only applicable for commodity derivative transactions."
		]
 	return "Out Of Scope"
 		as "Commodity Derivative Indicator"

reporting rule SecuritiesFinancingTransactionIndicator 
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "65"
			provision "‘true’ shall be populated where the transaction falls within the scope of activity but is exempted from reporting under Regulation (EU) 2015/2365. ‘false’ otherwise."
		]
 	return "Out Of Scope"
 		as "Securities Financing Transaction Indicator"

reporting rule ContractForEvent
 	extract
 		if WorkflowStep -> businessEvent -> primitives -> contractFormation -> after -> contract only exists
	then WorkflowStep -> businessEvent -> primitives -> contractFormation -> after -> contract
	else if WorkflowStep -> businessEvent -> primitives -> quantityChange -> after -> contract  exists
		then WorkflowStep -> businessEvent -> primitives -> quantityChange -> after -> contract
		else WorkflowStep -> businessEvent -> primitives -> contractFormation -> after -> contract
 	as "Contract"

reporting rule RateSpecification
 	extract Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification
 	as "Rate Specification"

reporting rule BuyerSeller
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "7"
			provision "Code used to identify the acquirer of the financial instrument.Where the acquirer is a legal entity, the LEI code of the acquirer shall be used.Where the acquirer is a non-legal entity, the identifier specified in Article 6 shall be used.Where the transaction was executed on a trading venue or on an organised trading platform outside of the Union that utilises a central counterparty (CCP) and where the identity of the acquirer is not disclosed, the LEI code of the CCP shall be used.Where the transaction was executed on a trading venue or on an organised trading platform outside of the Union that does not utilise a CCP and where the identity of the acquirer is not disclosed, the MIC code of the trading venue or of the organised trading platform outside of the Union shall be used.Where the acquirer is an investment firm acting as a systematic internaliser (SI), the LEI code of the SI shall be used.‘INTC’ shall be used to designate an aggregate client account within the investment firm in order to report a transfer into or out of that account with an associated allocation to the individual client(s) out of or into that account respectively.In case of options and swaptions, the buyer shall be the counterparty that holds the right to exercise the option and the seller shall be the counterparty that sells the option and receives a premium.In case of futures and forwards other than futures and forwards relating to currencies, the buyer shall be the counterparty buying the instrument and the seller the counterparty selling the instrument.In the case of swaps relating to securities, the buyer shall be the counterparty that gets the risk of price movement of the underlying security and receives the security amount. The seller shall be the counterparty paying the security amount.In the case of swaps related to interest rates or inflation indices, the buyer shall be the counterparty paying the fixed rate. The seller shall be the counterparty receiving the fixed rate. In case of basis swaps (float-to-float interest rate swaps), the buyer shall be the counterparty that pays the spread and the seller the counterparty that receives the spread.In the case of swaps and forwards related to currencies and of cross currency swaps, the buyer shall be the counterparty receiving the currency which is first when sorted alphabetically by ISO 4217 standard and the seller shall be the counterparty delivering this currency.In the case of swap related to dividends, the buyer shall be the counterparty receiving the equivalent actual dividend payments. The seller is the counterparty paying the dividend and receiving the fixed rate.In the case of derivative instruments for the transfer of credit risk except options and swaptions, the buyer shall be the counterparty buying the protection. The seller is the counterparty selling the protection.In case of derivative contract related to commodities, the buyer shall be the counterparty that receives the commodity specified in the report and the seller the counterparty delivering this commodity.In case of forward rate agreements, the buyer shall be the counterparty paying the fixed rate and the seller the counterparty receiving the fixed rate.For an increase in notional, the buyer shall be the same as the acquirer of the financial instrument in the original transaction and the seller shall be the same as the disposer of the financial instrument in the original transaction.For a decrease in notional the buyer shall be the same as the disposer of the financial instrument in the original transaction and the seller shall be the same as the acquirer of the financial instrument in the original transaction."]
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "16"
			provision "Code used to identify the disposer of the financial instrument.Where the disposer is a legal entity, the LEI code of the disposer shall be used.Where the disposer is a non-legal entity, the identifier specified in Article 6 shall be used.Where the transaction was executed on a trading venue or on an organised trading platform outside of the Union that utilises a CCP and where the identity of the disposer is not disclosed, the LEI code of the CCP shall be used.Where the transaction was executed on a trading venue or on an organised trading platform outside of the Union that does not utilise a CCP and where the identity of the disposer is not disclosed, the MIC code of the trading venue or of the organised trading platform outside of the Union shall be used.Where the disposer is an investment firm acting as a SI, the LEI code of the SI shall be used‘INTC’ shall be used to designate an aggregate client account within the investment firm in order to report a transfer into or out of that account with an associated allocation to the individual client(s) out of or into that account respectively.In case of options and swaptions, the buyer shall be the counterparty that holds the right to exercise the option and the seller shall be the counterparty that sells the option and receives a premium.In case of futures and forwards other than futures and forwards relating to currencies, the buyer shall be the counterparty buying the instrument and the seller the counterparty selling the instrument.In the case of swaps relating to securities, the buyer shall be the counterparty that gets the risk of price movement of the underlying security and receives the security amount. The seller shall be the counterparty paying the security amount.In the case of swaps related to interest rates or inflation indices, the buyer shall be the counterparty paying the fixed rate. The seller shall be the counterparty receiving the fixed rate. In case of basis swaps (float-to-float interest rate swaps), the buyer shall be the counterparty that pays the spread and the seller the counterparty that receives the spread.In the case of swaps and forwards related to currencies and of cross currency swaps, the buyer shall be the counterparty receiving the currency which is first when sorted alphabetically by ISO 4217 standard and the seller shall be the counterparty delivering this currency.In the case of swap related to dividends, the buyer shall be the counterparty receiving the equivalent actual dividend payments. The seller is the counterparty paying the dividend and receiving the fixed rate.In the case of derivative instruments for the transfer of credit risk except options and swaptions, the buyer shall be the counterparty buying the protection. The seller is the counterparty selling the protection.In case of derivative contracts related to commodities, the buyer shall be the counterparty that receives the commodity specified in the report and the seller the counterparty delivering this commodity.In case of forward rate agreements, the buyer shall be the counterparty paying the fixed rate and the seller the counterparty receiving the fixed rate.For an increase in notional, the seller shall be the same as the disposer in the original transaction.For a decrease in notional the seller shall be the same as the acquirer of the financial instrument in the original transaction."]
	ContractForEvent then
	extract Contract -> tradableProduct then
	(
		FixedFloatBuyerSeller,
		FixedFixedBuyerSeller,
		SingleCurrencyBasisSwap,
		CrossCurrencySwapBuyerSeller,
		CreditDefaultSwapBuyerSeller
	)

reporting rule FixedFloatBuyerSeller
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "7"
			rationale_author "DRR"
			rationale "The assumption is that the mention of Inflation in this paragraph relates solely to Fixed-Inflation not all inflation – i.e. this paragraph is about Fixed-anything swaps. Note that there’s no explicit classification for single-currency Fixed-Fixed Swaps at all . We have not addressed these for now."
			structured_provision "The Buyer of a [Single-Currency] Fixed-Float or Fixed-Inflation Swap is by definition the Payer of the  Fixed Rate"
			provision ""]
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "16"
			rationale_author "DRR"
			rationale "The assumption is that the mention of Inflation in this paragraph relates solely to Fixed-Inflation not all inflation – i.e. this paragraph is about Fixed-anything swaps. Note that there’s no explicit classification for single-currency Fixed-Fixed Swaps at all . We have not addressed these for now."
			structured_provision "The Seller of a [Single-Currency] Fixed-Float or Fixed-Inflation Swap is by definition the Receiver of the  Fixed Rate"
			provision ""]
	filter when rule IsFixedFloat then
	extract multiple TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout then
	filter when InterestRatePayout -> rateSpecification -> fixedRate exists then
	extract InterestRatePayout -> payerReceiver then
	PayerReceiverToBuyerSeller

reporting rule FixedFixedBuyerSeller
	filter when rule IsFixedFixed then
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout then
	filter when InterestRatePayout -> payoutQuantity exists then //this is my interpretation of "Filter Fixed Rate amount exists"
	extract InterestRatePayout -> payerReceiver then
	PayerReceiverToBuyerSeller

reporting rule PayerReceiverToBuyerSeller
	(
		extract PayerReceiver -> payerPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		extract Party -> partyId as "Buyer identification code"
		,
		extract PayerReceiver -> payerPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		lookup ExecutingEntity ExecutingEntity then
		extract ExecutingEntity -> addressOfBranch -> country
		as "Country of the branch for the buyer"
		,
		extract PayerReceiver -> receiverPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		extract Party -> partyId as "Seller identification code"
		,
		extract PayerReceiver -> receiverPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		lookup ExecutingEntity ExecutingEntity then
		extract ExecutingEntity -> addressOfBranch -> country
		as "Country of the branch for the seller"
	)

reporting rule IsFixedFloat
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
	and TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1


reporting rule IsFixedFixed
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 2

reporting rule SingleCurrencyBasisSwap
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "7"
			rationale_author "DRR"
			rationale "In case of basis swaps (float-to-float interest rate swaps), the buyer shall be the counterparty that pays the spread."
			structured_provision "The Buyer of a [Single-Currency] Basis Swap is by definition the Payer of the  Spread"
			provision ""]
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "16"
			rationale_author "DRR"
			rationale "In case of basis swaps (float-to-float interest rate swaps), the seller the counterparty that receives the spread."
			structured_provision "The Seller of a [Single-Currency] Basis Swap is by definition the Receiver of the  Spread"
			provision ""]

	filter when rule IsIRSwapBasis then
	filter when TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> assetIdentifier -> rateOption = TradableProduct -> priceNotation -> assetIdentifier -> rateOption then
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> payerReceiver then
		PayerReceiverToBuyerSeller

reporting rule IsIRSwapBasis
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 2

reporting rule CrossCurrencySwapBuyerSeller
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "7"
			rationale_author "DRR"
			rationale "The cross-currency nature takes precedence over any permutation of interest types"
			structured_provision "The Buyer of a Cross-Currency Swap is by definition the Receiver of the ISO 4217 currency which is first when sorted ascending irrespective of the interest type or spread"
			provision "The buyer shall be the counterparty receiving the currency which is first when sorted alphabetically by ISO 4217 standard."]
		[regulatoryReference ESMA MiFIR RTS_22 annex "I" table "2" field "16"
			rationale_author "DRR"
			rationale "The cross-currency nature takes precedence over any permutation of interest types"
			structured_provision "The Seller of a Cross-Currency Swap is by definition the Payer of the ISO 4217 currency which is first when sorted ascending irrespective of the interest type or spread"
			provision "The seller shall be the counterparty delivering this currency which is first when sorted alphabetically by ISO 4217 standard."]

	filter when rule IsXCCYSwap then
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout then
	minBy InterestRatePayout -> payoutQuantity -> assetIdentifier -> currency then
	extract InterestRatePayout -> payerReceiver then
		PayerReceiverToBuyerSeller

reporting rule IsXCCYSwap
	extract multiple TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges exists

reporting rule CreditDefaultSwapBuyerSeller
	filter when rule IsCreditDefaultSwap then
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> buyerSeller
	then BuyerSellerToBuyerAndSeller

reporting rule IsCreditDefaultSwap
	extract TradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout exists

reporting rule BuyerSellerToBuyerAndSeller
	(
		extract BuyerSeller -> buyerPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		extract Party -> partyId as "Buyer identification code"
		,
		extract BuyerSeller -> buyerPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		lookup ExecutingEntity ExecutingEntity then
		extract ExecutingEntity -> addressOfBranch -> country
		as "Country of the branch for the buyer"
		,
		extract BuyerSeller -> sellerPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		extract Party -> partyId as "Seller identification code"
		,
		extract BuyerSeller -> sellerPartyReference then
		filter when Party -> partyId -> scheme = "iso17442" then
		lookup ExecutingEntity ExecutingEntity then
		extract ExecutingEntity -> addressOfBranch -> country
		as "Country of the branch for the seller"
	)

reporting rule Price
		[regulatoryReference ESMA MiFIR RTS_22 annex "1" table "2" field "33"
 	   	provision "For credit default swaps (CDS) it shall be the coupon in basis points. The information reported in this field shall be consistent with the values provided in fields 30 and 46."]
	ContractForEvent then
	extract Contract -> tradableProduct then
	(
		FixedFixedPrice,
		FixedFloatPrice,
		BasisSwapPrice,
		CDSPrice
	)

reporting rule FixedFloatPrice
		[regulatoryReference ESMA MiFIR Q_AND_A_MiFIR_DATA_REPORTING section "16" question "2"
			rationale_author "DRR"
			rationale "The Regulations don’t mention this but the Q&A defines it."
	 	   	structured_provision "The regulatoryPrice of a Fixed-Float or Fixed-Inflation Swap is by definition the highest Fixed Rate"
	 	   	provision "Questions and Answers On MiFIR data reporting. Section 14 Financial instruments’ volatile attributes [Last update: 05/10/2017]. Question 1; Answer 1 (a) Where a swap rate or forward rate financial contract is quoted as the fixed rate and it is considered to be an attribute of the transaction rather than an attribute of the financial instrument, the respective reports should be completed as follows: Transaction report - the price (field 33) of the transaction should be populated with the fixed rate value. Question 2; Example 1: CFI code SRC*S* fixed-floating with single currency"]
	filter when rule IsFixedFloat then
	extract TradableProduct -> priceNotation -> price -> fixedInterestRate then
	maxBy FixedInterestRate -> rate then
	extract FixedInterestRate -> rate as "Price"

reporting rule BasisSwapPrice
		[regulatoryReference ESMA MiFIR RTS_22 annex "1" table "2" field "33"
			rationale_author "DRR"
			rationale "We also need to cater for the edge case of spreads on both legs. Assume –ve spreads uncommon enough not to need to debate highest positive spread vs highest absolute spread at this point."
	 	   	structured_provision "The regulatoryPrice of a Basis or Float-Inflation Swap is by definition the highest Spread"
	 	   	provision "09April 2019|ESMA70-1861941480-56. Questions and Answers On MiFIR data reporting. Section 16 Interest Rate Swaps reporting [Last update: 26/09/2018]. Question 2 Answer 2 CFI SRA*S*, Tenor basis swap (float-to-float single currency). 10 Years EUR EURIBOR 3 months + 2 basis points VS EURIBOR 6 MONTHS. 33 Price 2: If the spread was negative i.e. Firm X was paying 3 month EUR EURIBOR - 2 basis points then Firm X should still be reported as the buyer but the price would be reported as ‘-2’ in the reports of X and Y."]
	filter when rule IsIRSwapBasis then
	extract TradableProduct -> priceNotation -> price -> floatingInterestRate then
	extract FloatingInterestRate -> initialRate as "Price"

reporting rule FixedFixedPrice
	filter when rule IsFixedFixed then
	extract TradableProduct -> priceNotation -> price -> fixedInterestRate then
	maxBy FixedInterestRate -> rate then
	extract FixedInterestRate -> rate as "Price"

reporting rule CDSPrice
		[regulatoryReference ESMA MiFIR RTS_22 annex "1" table "2" field "33"
			rationale_author "DRR"
			rationale "Coupon refers to the Fixed Rate. However market practice is to have either/both a Fixed Rate and/or a spread on the Floating Rate."
	 	   	structured_provision "Of a Credit Default Swap is by definition the Fixed Rate unless the Fixed Rate is Zero and there is a Spread then the regulatoryPrice is by definition the Spread"
	 	   	provision "For credit default swaps (CDS) it shall be the coupon in basis points. "]

	filter when rule IsCreditDefaultSwap then
	extract TradableProduct -> priceNotation -> price then
	if (
		filter when Price -> fixedInterestRate -> rate <> 0
			=> extract Price -> fixedInterestRate -> rate as "Price",
		extract Price -> floatingInterestRate -> initialRate
			=> extract Price -> floatingInterestRate -> initialRate as "Price",
		=> return 0 as "Price"
	)

	type ExecutingEntity:
		isInvestmentFirm boolean (1..1)
		addressOfBranch Address (1..1)
		addressOfIncorporation Address (1..1)

	eligibility rule IsAddressInEEA
extract
	Address -> country = "FI" or
	Address -> country = "AT" or
	Address -> country = "PT" or
	Address -> country = "BE" or
	Address -> country = "BG" or
	Address -> country = "ES" or
	Address -> country = "HR" or
	Address -> country = "CY" or
	Address -> country = "CZ" or
	Address -> country = "DK" or
	Address -> country = "EE" or
	Address -> country = "FI" or
	Address -> country = "FR" or
	Address -> country = "GF" or
	Address -> country = "DE" or
	Address -> country = "GI" or
	Address -> country = "GR" or
	Address -> country = "GP" or
	Address -> country = "GG" or
	Address -> country = "HU" or
	Address -> country = "IS" or
	Address -> country = "IE" or
	Address -> country = "IM" or
	Address -> country = "IT" or
	Address -> country = "JE" or
	Address -> country = "LV" or
	Address -> country = "LI" or
	Address -> country = "LT" or
	Address -> country = "LU" or
	Address -> country = "PT" or
	Address -> country = "MT" or
	Address -> country = "MQ" or
	Address -> country = "YT" or
	Address -> country = "NL" or
	Address -> country = "NO" or
	Address -> country = "PL" or
	Address -> country = "PT" or
	Address -> country = "RE" or
	Address -> country = "RO" or
	Address -> country = "BL" or
	Address -> country = "MF" or
	Address -> country = "PM" or
	Address -> country = "SK" or
	Address -> country = "SI" or
	Address -> country = "ES" or
	Address -> country = "SE" or
	Address -> country = "GB"

eligibility rule IsAddressInEU
extract
	Address -> country = "AT" or
	Address -> country = "BE" or
	Address -> country = "BG" or
	Address -> country = "CY" or
	Address -> country = "CZ" or
	Address -> country = "DE" or
	Address -> country = "DK" or
	Address -> country = "EE" or
	Address -> country = "ES" or
	Address -> country = "FI" or
	Address -> country = "FR" or
	Address -> country = "GB" or
	Address -> country = "GR" or
	Address -> country = "HR" or
	Address -> country = "HU" or
	Address -> country = "IE" or
	Address -> country = "IT" or
	Address -> country = "LT" or
	Address -> country = "LU" or
	Address -> country = "LV" or
	Address -> country = "MT" or
	Address -> country = "NL" or
	Address -> country = "PO" or
	Address -> country = "PT" or
	Address -> country = "RO" or
	Address -> country = "SE" or
	Address -> country = "SI" or
	Address -> country = "SK"



func TimeZoneFromBusinessCenterTime: 
	inputs: time BusinessCenterTime (1..1)
	output: result TimeZone (1..1)


func ResolveAdjustableDate:
	inputs: terminationDate AdjustableOrRelativeDate (1..1)
	output: adjustedDate date (1..1)


func ToDateTime:
	inputs: date date (1..1)
	output: datetime zonedDateTime (1..1)

 


/*
 * Variation Margin Mark to Market Calculation 
 * 
 * Goals:
 *   1. Describe a product agnostic mark-to-market calculation such that it can be used for Variation Margin valuation process;
 *   2. To be as transparent as possible in capturing which CDM elements are being used for the calculations.
 */
/*
 * Option 1 - A mark to market calculation for an FX Forward as provided by a member firm
 * 
 *   1. + requires minimal infrastructure work to support VG thread
 *   2. - delegates more work to the InterpolateForwardRate function, opaque usage of ForwardPayout
 *   3. - will not support other products
 * 
 */
func FxMarkToMarket: 
	// TODO Never referenced in CDM
	inputs: contract Contract (1..1)
	output: value number (1..1)
	
	alias forwardPayout: 
		contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> forwardPayout only-element
		
	alias forwardExchangeRate: 
		contract -> tradableProduct -> priceNotation -> price -> exchangeRate	
		
	alias currency1Quantity: 
		ExtractQuantityByCurrency(contract -> tradableProduct -> quantityNotation, forwardExchangeRate only-element -> quotedCurrencyPair -> currency1)
	
	alias currency2Quantity: 
		ExtractQuantityByCurrency(contract -> tradableProduct -> quantityNotation, forwardExchangeRate only-element -> quotedCurrencyPair -> currency2 )
	
	alias quotedQuantity: 
 		if forwardExchangeRate -> quotedCurrencyPair -> quoteBasis = QuoteBasisEnum -> Currency1PerCurrency2
		then currency1Quantity -> quantity -> amount
		else currency2Quantity -> quantity -> amount
	
	alias baseQuantity: 
 		if forwardExchangeRate -> quotedCurrencyPair -> quoteBasis = QuoteBasisEnum -> Currency2PerCurrency1
		then currency1Quantity -> quantity -> amount
		else currency2Quantity -> quantity -> amount
	
	alias interpolatedRate:
		InterpolateForwardRate(forwardPayout)
	
	condition: 
		contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> forwardPayout exists
	
	assign-output value:
		(quotedQuantity / interpolatedRate - baseQuantity) * interpolatedRate

func InterpolateForwardRate:
	inputs: forward ForwardPayout (1..1)
	output: result number(1..1)


import cdm.base.*
import cdm.synonyms.config.*

enum AdditionalTypeEnum: 

	NotApplicable 
		[synonym ISDA_Create_1_0 value "not_applicable"]
	EquityOptionOrIndexOption 
	Other
		[synonym ISDA_Create_1_0 value "other"]


enum AmendmentEffectiveDateEnum: 

	AnnexDate 
		[synonym ISDA_Create_1_0 value "annex"]
	DeedDate 
		[synonym ISDA_Create_1_0 value "deed"]
	AmendmentEffectiveDate 
		[synonym ISDA_Create_1_0 value "amendment_effective_date"]


enum CollateralAssetDefinitionsEnum: 
	[synonym FpML_5_10 value "collateralAssetDefinitionsScheme_1_0"]
	AU_CASH 
		[synonym FpML_5_10 value "AU-CASH"]
	AU_CIB displayName "AU-CIB" 
		[synonym FpML_5_10 value "AU-CIB"]
	AU_FIB displayName "AU-FIB" 
		[synonym FpML_5_10 value "AU-FIB"]
	AU_FRB displayName "AU-FRB" 
		[synonym FpML_5_10 value "AU-FRB"]
	AU_ILB displayName "AU-ILB" 
		[synonym FpML_5_10 value "AU-ILB"]
	AU_NOTE displayName "AU-NOTE" 
		[synonym FpML_5_10 value "AU-NOTE"]
	AU_STATENOTE displayName "AU-STATENOTE" 
		[synonym FpML_5_10 value "AU-STATENOTE"]
	AU_TAB displayName "AU-TAB" 
		[synonym FpML_5_10 value "AU-TAB"]
	BE_BEL20 displayName "BE-BEL20" 
		[synonym FpML_5_10 value "BE-BEL20"]
	BE_CERT displayName "BE-CERT" 
		[synonym FpML_5_10 value "BE-CERT"]
	BE_LINEAR displayName "BE-LINEAR" 
		[synonym FpML_5_10 value "BE-LINEAR"]
	BE_NOTE displayName "BE-NOTE" 
		[synonym FpML_5_10 value "BE-NOTE"]
	BE_REGIONGT displayName "BE-REGIONGT" 
		[synonym FpML_5_10 value "BE-REGIONGT"]
	BE_STATEGT displayName "BE-STATEGT" 
		[synonym FpML_5_10 value "BE-STATEGT"]
	BE_STATELOAN displayName "BE-STATELOAN" 
		[synonym FpML_5_10 value "BE-STATELOAN"]
	CA_BOND displayName "CA-BOND" 
		[synonym FpML_5_10 value "CA-BOND"]
	CA_CASH displayName "CA-CASH" 
		[synonym FpML_5_10 value "CA-CASH"]
	CA_RRB displayName "CA-RRB" 
		[synonym FpML_5_10 value "CA-RRB"]
	CA_TBILL displayName "CA-TBILL" 
		[synonym FpML_5_10 value "CA-TBILL"]
	CH_CANTON displayName "CH-CANTON" 
		[synonym FpML_5_10 value "CH-CANTON"]
	CH_CASH displayName "CH-CASH" 
		[synonym FpML_5_10 value "CH-CASH"]
	CH_FEDBOND displayName "CH-FEDBOND" 
		[synonym FpML_5_10 value "CH-FEDBOND"]
	DE_BILL displayName "DE-BILL" 
		[synonym FpML_5_10 value "DE-BILL"]
	DE_BOND displayName "DE-BOND" 
		[synonym FpML_5_10 value "DE-BOND"]
	DE_ERBLAST displayName "DE-ERBLAST" 
		[synonym FpML_5_10 value "DE-ERBLAST"]
	DE_MUNI displayName "DE-MUNI" 
		[synonym FpML_5_10 value "DE-MUNI"]
	DE_NOTE2 displayName "DE-NOTE2" 
		[synonym FpML_5_10 value "DE-NOTE2"]
	DE_NOTE5_5 displayName "DE-NOTE5.5" 
		[synonym FpML_5_10 value "DE-NOTE5.5"]
	DE_PFAND displayName "DE-PFAND" 
		[synonym FpML_5_10 value "DE-PFAND"]
	DK_BILL displayName "DK-BILL" 
		[synonym FpML_5_10 value "DK-BILL"]
	DK_BOLIGX displayName "DK-BOLIGX" 
		[synonym FpML_5_10 value "DK-BOLIGX"]
	DK_BOND displayName "DK-BOND" 
		[synonym FpML_5_10 value "DK-BOND"]
	DK_CALLMORT displayName "DK-CALLMORT" 
		[synonym FpML_5_10 value "DK-CALLMORT"]
	DK_CASH displayName "DK-CASH" 
		[synonym FpML_5_10 value "DK-CASH"]
	DK_KFX displayName "DK-KFX" 
		[synonym FpML_5_10 value "DK-KFX"]
	DK_MORT displayName "DK-MORT" 
		[synonym FpML_5_10 value "DK-MORT"]
	DK_NOTE displayName "DK-NOTE" 
		[synonym FpML_5_10 value "DK-NOTE"]
	ES_BILL displayName "ES-BILL" 
		[synonym FpML_5_10 value "ES-BILL"]
	ES_BOND displayName "ES-BOND" 
		[synonym FpML_5_10 value "ES-BOND"]
	ES_CEDULAS displayName "ES-CEDULAS" 
		[synonym FpML_5_10 value "ES-CEDULAS"]
	ES_CORP displayName "ES-CORP" 
		[synonym FpML_5_10 value "ES-CORP"]
	ES_EQUITY displayName "ES-EQUITY" 
		[synonym FpML_5_10 value "ES-EQUITY"]
	EU_CASH displayName "EU-CASH" 
		[synonym FpML_5_10 value "EU-CASH"]
	EU_EURO100 displayName "EU-EURO100" 
		[synonym FpML_5_10 value "EU-EURO100"]
	EU_EUROTOP300 displayName "EU-EUROTOP300" 
		[synonym FpML_5_10 value "EU-EUROTOP300"]
	EU_STOXX50 displayName "EU-STOXX50" 
		[synonym FpML_5_10 value "EU-STOXX50"]
	EU_STOXX600 displayName "EU-STOXX600" 
		[synonym FpML_5_10 value "EU-STOXX600"]
	FI_BILL displayName "FI-BILL" 
		[synonym FpML_5_10 value "FI-BILL"]
	FI_BOND displayName "FI-BOND" 
		[synonym FpML_5_10 value "FI-BOND"]
	FI_HEX displayName "FI-HEX" 
		[synonym FpML_5_10 value "FI-HEX"]
	FR_BDT displayName "FR-BDT" 
		[synonym FpML_5_10 value "FR-BDT"]
	FR_BTAN displayName "FR-BTAN" 
		[synonym FpML_5_10 value "FR-BTAN"]
	FR_BTF displayName "FR-BTF" 
		[synonym FpML_5_10 value "FR-BTF"]
	FR_OAT displayName "FR-OAT" 
		[synonym FpML_5_10 value "FR-OAT"]
	FR_STRIP displayName "FR-STRIP" 
		[synonym FpML_5_10 value "FR-STRIP"]
	GA_AU_GOV displayName "GA-AU-GOV" 
		[synonym FpML_5_10 value "GA-AU-GOV"]
	GA_BE_GOV displayName "GA-BE-GOV" 
		[synonym FpML_5_10 value "GA-BE-GOV"]
	GA_CA_GOV displayName "GA-CA-GOV" 
		[synonym FpML_5_10 value "GA-CA-GOV"]
	GA_CH_GOV displayName "GA-CH-GOV" 
		[synonym FpML_5_10 value "GA-CH-GOV"]
	GA_DE_GOV displayName "GA-DE-GOV" 
		[synonym FpML_5_10 value "GA-DE-GOV"]
	GA_DK_GOV displayName "GA-DK-GOV" 
		[synonym FpML_5_10 value "GA-DK-GOV"]
	GA_ES_GOV displayName "GA-ES-GOV" 
		[synonym FpML_5_10 value "GA-ES-GOV"]
	GA_EUROZONE_GOV displayName "GA-EUROZONE-GOV" 
		[synonym FpML_5_10 value "GA-EUROZONE-GOV"]
	GA_EU_GOV displayName "GA-EU-GOV" 
		[synonym FpML_5_10 value "GA-EU-GOV"]
	GA_FI_GOV displayName "GA-FI-GOV" 
		[synonym FpML_5_10 value "GA-FI-GOV"]
	GA_FR_GOV displayName "GA-FR-GOV" 
		[synonym FpML_5_10 value "GA-FR-GOV"]
	GA_G5_GOV displayName "GA-G5-GOV" 
		[synonym FpML_5_10 value "GA-G5-GOV"]
	GA_GB_GOV displayName "GA-GB-GOV" 
		[synonym FpML_5_10 value "GA-GB-GOV"]
	GA_HK_GOV displayName "GA-HK-GOV" 
		[synonym FpML_5_10 value "GA-HK-GOV"]
	GA_IT_GOV displayName "GA-IT-GOV" 
		[synonym FpML_5_10 value "GA-IT-GOV"]
	GA_JP_GOV displayName "GA-JP-GOV" 
		[synonym FpML_5_10 value "GA-JP-GOV"]
	GA_KR_GOV displayName "GA-KR-GOV" 
		[synonym FpML_5_10 value "GA-KR-GOV"]
	GA_NL_GOV displayName "GA-NL-GOV" 
		[synonym FpML_5_10 value "GA-NL-GOV"]
	GA_NO_GOV displayName "GA-NO-GOV" 
		[synonym FpML_5_10 value "GA-NO-GOV"]
	GA_NZ_GOV displayName "GA-NZ-GOV" 
		[synonym FpML_5_10 value "GA-NZ-GOV"]
	GA_SE_GOV displayName "GA-SE-GOV" 
		[synonym FpML_5_10 value "GA-SE-GOV"]
	GA_SG_GOV displayName "GA-SG-GOV" 
		[synonym FpML_5_10 value "GA-SG-GOV"]
	GA_US_AGENCY displayName "GA-US-AGENCY" 
		[synonym FpML_5_10 value "GA-US-AGENCY"]
	GA_US_GOV displayName "GA-US-GOV" 
		[synonym FpML_5_10 value "GA-US-GOV"]
	GA_US_MORTGAGES displayName "GA-US-MORTGAGES" 
		[synonym FpML_5_10 value "GA-US-MORTGAGES"]
	GB_CASH displayName "GB-CASH" 
		[synonym FpML_5_10 value "GB-CASH"]
	GB_DDGILT displayName "GB-DDGILT" 
		[synonym FpML_5_10 value "GB-DDGILT"]
	GB_FT100 displayName "GB-FT100" 
		[synonym FpML_5_10 value "GB-FT100"]
	GB_FT250 displayName "GB-FT250" 
		[synonym FpML_5_10 value "GB-FT250"]
	GB_FT350 displayName "GB-FT350" 
		[synonym FpML_5_10 value "GB-FT350"]
	GB_GILT displayName "GB-GILT" 
		[synonym FpML_5_10 value "GB-GILT"]
		[synonym ISDA_Create_1_0 value "UK Gilts"]
	GB_INDEXGILT displayName "GB-INDEXGILT" 
		[synonym FpML_5_10 value "GB-INDEXGILT"]
	GB_PERPGILT displayName "GB-PERPGILT" 
		[synonym FpML_5_10 value "GB-PERPGILT"]
	GB_RUMPGILT displayName "GB-RUMPGILT" 
		[synonym FpML_5_10 value "GB-RUMPGILT"]
	GB_SUPR1 displayName "GB-SUPR1" 
		[synonym FpML_5_10 value "GB-SUPR1"]
	GB_SUPR2 displayName "GB-SUPR2" 
		[synonym FpML_5_10 value "GB-SUPR2"]
	GB_TBILL displayName "GB-TBILL" 
		[synonym FpML_5_10 value "GB-TBILL"]
	GB_ZEROGILT displayName "GB-ZEROGILT" 
		[synonym FpML_5_10 value "GB-ZEROGILT"]
	HK_BILL displayName "HK-BILL" 
		[synonym FpML_5_10 value "HK-BILL"]
	HK_CASH displayName "HK-CASH" 
		[synonym FpML_5_10 value "HK-CASH"]
	HK_NOTE displayName "HK-NOTE" 
		[synonym FpML_5_10 value "HK-NOTE"]
	IT_BOT displayName "IT-BOT" 
		[synonym FpML_5_10 value "IT-BOT"]
	IT_BTP displayName "IT-BTP" 
		[synonym FpML_5_10 value "IT-BTP"]
	IT_CCT displayName "IT-CCT" 
		[synonym FpML_5_10 value "IT-CCT"]
	IT_CORP displayName "IT-CORP" 
		[synonym FpML_5_10 value "IT-CORP"]
	IT_CTZ displayName "IT-CTZ" 
		[synonym FpML_5_10 value "IT-CTZ"]
	IT_MIB30 displayName "IT-MIB30" 
		[synonym FpML_5_10 value "IT-MIB30"]
	IT_REP displayName "IT-REP" 
		[synonym FpML_5_10 value "IT-REP"]
	JP_CASH displayName "JP-CASH" 
		[synonym FpML_5_10 value "JP-CASH"]
	JP_CORPORATE displayName "JP-CORPORATE" 
		[synonym FpML_5_10 value "JP-CORPORATE"]
	JP_CP displayName "JP-CP" 
		[synonym FpML_5_10 value "JP-CP"]
	JP_EQUITY displayName "JP-EQUITY" 
		[synonym FpML_5_10 value "JP-EQUITY"]
	JP_EUROBOND displayName "JP-EUROBOND" 
		[synonym FpML_5_10 value "JP-EUROBOND"]
	JP_JGB displayName "JP-JGB" 
		[synonym FpML_5_10 value "JP-JGB"]
	KR_BOND displayName "KR-BOND" 
		[synonym FpML_5_10 value "KR-BOND"]
	KR_CASH displayName "KR-CASH" 
		[synonym FpML_5_10 value "KR-CASH"]
	KR_EXIM displayName "KR-EXIM" 
		[synonym FpML_5_10 value "KR-EXIM"]
	KR_KDICKRW displayName "KR-KDICKRW" 
		[synonym FpML_5_10 value "KR-KDICKRW"]
	KR_KDR displayName "KR-KDR" 
		[synonym FpML_5_10 value "KR-KDR"]
	KR_KEPCO displayName "KR-KEPCO" 
		[synonym FpML_5_10 value "KR-KEPCO"]
	KR_MSB displayName "KR-MSB" 
		[synonym FpML_5_10 value "KR-MSB"]
	KR_NHC displayName "KR-NHC" 
		[synonym FpML_5_10 value "KR-NHC"]
	KR_ROK displayName "KR-ROK" 
		[synonym FpML_5_10 value "KR-ROK"]
	NL_AEX displayName "NL-AEX" 
		[synonym FpML_5_10 value "NL-AEX"]
	NL_BILL displayName "NL-BILL" 
		[synonym FpML_5_10 value "NL-BILL"]
	NL_BOND displayName "NL-BOND" 
		[synonym FpML_5_10 value "NL-BOND"]
	NO_BOND displayName "NO-BOND" 
		[synonym FpML_5_10 value "NO-BOND"]
	NO_CASH displayName "NO-CASH" 
		[synonym FpML_5_10 value "NO-CASH"]
	NO_OBX displayName "NO-OBX" 
		[synonym FpML_5_10 value "NO-OBX"]
	NO_TBILL displayName "NO-TBILL" 
		[synonym FpML_5_10 value "NO-TBILL"]
	NZ_BOND displayName "NZ-BOND" 
		[synonym FpML_5_10 value "NZ-BOND"]
	NZ_CASH displayName "NZ-CASH" 
		[synonym FpML_5_10 value "NZ-CASH"]
	NZ_TBILL displayName "NZ-TBILL" 
		[synonym FpML_5_10 value "NZ-TBILL"]
	SE_CASH displayName "SE-CASH" 
		[synonym FpML_5_10 value "SE-CASH"]
	SE_GOVT displayName "SE-GOVT" 
		[synonym FpML_5_10 value "SE-GOVT"]
	SE_ILGOVT displayName "SE-ILGOVT" 
		[synonym FpML_5_10 value "SE-ILGOVT"]
	SE_MORT displayName "SE-MORT" 
		[synonym FpML_5_10 value "SE-MORT"]
	SE_OMX displayName "SE-OMX" 
		[synonym FpML_5_10 value "SE-OMX"]
	SE_TBILL displayName "SE-TBILL" 
		[synonym FpML_5_10 value "SE-TBILL"]
	SG_BOND displayName "SG-BOND" 
		[synonym FpML_5_10 value "SG-BOND"]
	SG_CASH displayName "SG-CASH" 
		[synonym FpML_5_10 value "SG-CASH"]
	SG_TBILL displayName "SG-TBILL" 
		[synonym FpML_5_10 value "SG-TBILL"]
	SU_IADB displayName "SU-IADB" 
		[synonym FpML_5_10 value "SU-IADB"]
	SU_IBRDDN displayName "SU-IBRDDN" 
		[synonym FpML_5_10 value "SU-IBRDDN"]
	SU_IBRDGB displayName "SU-IBRDGB" 
		[synonym FpML_5_10 value "SU-IBRDGB"]
	US_ARM displayName "US-ARM" 
		[synonym FpML_5_10 value "US-ARM"]
	US_CASH displayName "US-CASH" 
		[synonym FpML_5_10 value "US-CASH"]
	US_DERIV displayName "US-DERIV" 
		[synonym FpML_5_10 value "US-DERIV"]
	US_DOW displayName "US-DOW" 
		[synonym FpML_5_10 value "US-DOW"]
	US_DOW_COMP displayName "US-DOW-COMP" 
		[synonym FpML_5_10 value "US-DOW-COMP"]
	US_DOW_TRAN displayName "US-DOW-TRAN" 
		[synonym FpML_5_10 value "US-DOW-TRAN"]
	US_DOW_UTIL displayName "US-DOW-UTIL" 
		[synonym FpML_5_10 value "US-DOW-UTIL"]
	US_FAMC displayName "US-FAMC" 
		[synonym FpML_5_10 value "US-FAMC"]
	US_FCS displayName "US-FCS" 
		[synonym FpML_5_10 value "US-FCS"]
	US_FCSFAC displayName "US-FCSFAC" 
		[synonym FpML_5_10 value "US-FCSFAC"]
	US_FHLB displayName "US-FHLB" 
		[synonym FpML_5_10 value "US-FHLB"]
	US_FHLBNC displayName "US-FHLBNC" 
		[synonym FpML_5_10 value "US-FHLBNC"]
	US_FHLBNCDN displayName "US-FHLBNCDN" 
		[synonym FpML_5_10 value "US-FHLBNCDN"]
	US_FHLMC displayName "US-FHLMC" 
		[synonym FpML_5_10 value "US-FHLMC"]
	US_FHLMCMBS displayName "US-FHLMCMBS" 
		[synonym FpML_5_10 value "US-FHLMCMBS"]
	US_FICO displayName "US-FICO" 
		[synonym FpML_5_10 value "US-FICO"]
	US_FNMA displayName "US-FNMA" 
		[synonym FpML_5_10 value "US-FNMA"]
	US_FNMAMBS displayName "US-FNMAMBS" 
		[synonym FpML_5_10 value "US-FNMAMBS"]
	US_GNMA displayName "US-GNMA" 
		[synonym FpML_5_10 value "US-GNMA"]
	US_GNMAMBS displayName "US-GNMAMBS" 
		[synonym FpML_5_10 value "US-GNMAMBS"]
	US_LEHM_BOND displayName "US-LEHM-BOND" 
		[synonym FpML_5_10 value "US-LEHM-BOND"]
	US_NAS_100 displayName "US-NAS-100" 
		[synonym FpML_5_10 value "US-NAS-100"]
	US_NAS_COMP displayName "US-NAS-COMP" 
		[synonym FpML_5_10 value "US-NAS-COMP"]
	US_NCAD displayName "US-NCAD" 
		[synonym FpML_5_10 value "US-NCAD"]
	US_NCADN displayName "US-NCADN" 
		[synonym FpML_5_10 value "US-NCADN"]
	US_NYSE_COMP displayName "US-NYSE-COMP" 
		[synonym FpML_5_10 value "US-NYSE-COMP"]
	US_REFCORP displayName "US-REFCORP" 
		[synonym FpML_5_10 value "US-REFCORP"]
	US_SLMA displayName "US-SLMA" 
		[synonym FpML_5_10 value "US-SLMA"]
	US_STRIP displayName "US-STRIP" 
		[synonym FpML_5_10 value "US-STRIP"]
	US_S_P100 displayName "US-S&P100" 
		[synonym FpML_5_10 value "US-S&P100"]
	US_S_P400 displayName "US-S&P400" 
		[synonym FpML_5_10 value "US-S&P400"]
	US_S_P500 displayName "US-S&P500" 
		[synonym FpML_5_10 value "US-S&P500"]
	US_S_P600 displayName "US-S&P600" 
		[synonym FpML_5_10 value "US-S&P600"]
	US_TBILL displayName "US-TBILL" 
		[synonym FpML_5_10 value "US-TBILL"]
	US_TBOND displayName "US-TBOND" 
		[synonym FpML_5_10 value "US-TBOND"]
	US_TIPS displayName "US-TIPS" 
		[synonym FpML_5_10 value "US-TIPS"]
	US_TNOTE displayName "US-TNOTE" 
		[synonym FpML_5_10 value "US-TNOTE"]
	US_TVA displayName "US-TVA" 
		[synonym FpML_5_10 value "US-TVA"]


enum CreditRatingAgencyEnum: 
	[synonym FpML_5_10 value "creditRatingAgencyScheme_1_0"]
	[synonym AcadiaSoft_AM_1_0 value "AgencyEnum"]
	AMBest 
		[synonym FpML_5_10 value "AMBest"]
	CBRS 
		[synonym FpML_5_10 value "CBRS"]
	DBRS 
		[synonym FpML_5_10, AcadiaSoft_AM_1_0 value "DBRS"]
	Fitch 
		[synonym FpML_5_10 value "Fitch"]
		[synonym AcadiaSoft_AM_1_0 value "FITCH"]
	JapanAgency 
		[synonym FpML_5_10 value "Japanagency"]
	Moodys 
		[synonym FpML_5_10 value "Moodys"]
		[synonym AcadiaSoft_AM_1_0 value "MOODYS"]
	RatingAndInvestmentInformation 
		[synonym FpML_5_10 value "RatingAndInvestmentInformation"]
	StandardAndPoors 
		[synonym FpML_5_10 value "StandardAndPoors"]
		[synonym AcadiaSoft_AM_1_0 value "STANDARD_POORS"]


enum DeliveryAmountElectionEnum: 

	LastLocalBusinessDay 
		[synonym ISDA_Create_1_0 value "include_one"]
	LastAndAnyLocalBusinessDay 
		[synonym ISDA_Create_1_0 value "include_both"]


enum HoldingPostedCollateralEnum: 
	[synonym FpML_5_10 value "holdingPostedCollateralScheme"]

	NoElection 
	AcceptableCustodian 
		[synonym FpML_5_10 value "AcceptableCustodian"]


enum IndependentAmountEligibilityEnum: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10 value "independentAmountEligibilityScheme_1_0"]
	None 
		[synonym FpML_5_10 value "None"]
	NoneUnlessSpecifiedInConfirmation 
		[synonym FpML_5_10 value "NoneUnlessSpecifiedInConfirmation"]


enum InterestAdjustmentPeriodicityEnum: 

	LastLocalBusinessDayOfMonth 
		[synonym ISDA_Create_1_0 value "last_day"]
	EachDay 
		[synonym ISDA_Create_1_0 value "each_day"]


enum LegalAgreementNameEnum: 
	[synonym FpML_5_10 value "legalDocumentNameScheme_1_0"]
	[synonym AcadiaSoft_AM_1_0 value "DocumentNameEnum"]
	CreditSupportDeed 
		[synonym ISDA_Create_1_0 value "Credit Support Deed"]
	CreditSupportAnnex 
		[synonym FpML_5_10 value "CreditSupportAnnex"]
		[synonym AcadiaSoft_AM_1_0 value "CSA"]
		[synonym ISDA_Create_1_0 value "Credit Support Annex"]
	CollateralTransferAgreement 
		[synonym ISDA_Create_1_0 value "Collateral Transfer Agreement"]
	MasterAgreement 
		[synonym FpML_5_10 value "MasterAgreement"]
	StandardCreditSupportAnnex 
		[synonym FpML_5_10 value "StandardCreditSupportAnnex"]
	SecurityAgreement 
		[synonym ISDA_Create_1_0 value "Security Agreement"]


enum LegalAgreementPublisherEnum: 
	[synonym FpML_5_10 value "legalDocumentPublisherScheme_1_0"]
	[synonym AcadiaSoft_AM_1_0 value "PublisherEnum"]
	AFB 
		[synonym FpML_5_10 value "AFB"]
	ISDAClearstream 
		[synonym ISDA_Create_1_0 value "ISDA/Clearstream"]
	ISDAEuroclear 
		[synonym ISDA_Create_1_0 value "ISDA/Euroclear"]
	ISDA 
		[synonym FpML_5_10, AcadiaSoft_AM_1_0, ISDA_Create_1_0 value "ISDA"]

	
enum MarginApproachEnum: 
	Distinct 
		[synonym ISDA_Create_1_0 value "distinct"]
	Allocated 
		[synonym ISDA_Create_1_0 value "allocated"]	
	GreaterOf 
		[synonym ISDA_Create_1_0 value "greaterof"]
		[synonym ISDA_Create_1_0 value "greater_of"]


enum NoThresholdEnum: 
// TODO Never referenced in CDM
	zero


/*
 * Open question: should we look to develop a generic list of all regulatory regimes, with specialized entries, along the below lines?
 * The other approach is to have enumerations that are specialized per type of regulatory provisions 
 */
enum RegulatoryRegimeEnum: 
	[synonym AcadiaSoft_AM_1_0 value "RegimeEnum"]
	AustraliaMarginRules displayName "Australia" 
		[synonym AcadiaSoft_AM_1_0 value "APRA" definition "Australian Prudential Regulation Authority"]
	CanadaMarginRules displayName "Canada" 
		[synonym AcadiaSoft_AM_1_0 value "OSFI" definition "Office of the Superintendent of Financial Institutions"]
	CFTC_MarginRules displayName "CFTC" 
		[synonym AcadiaSoft_AM_1_0 value "CFTC" definition "Commodity Futures Trading Commission"]
	EMIR_MarginRules displayName "EMIR" 
	HongKongMarginRules displayName "Hong Kong" 
		[synonym AcadiaSoft_AM_1_0 value "HKMA" definition "Hong Kong Monetary Authority"]
	JapanMarginRules displayName "Japan" 
		[synonym AcadiaSoft_AM_1_0 value "JFSA" definition "Japanese Financial Services"]
	US_PrudentialMarginRules displayName "Prudential" 
		[synonym AcadiaSoft_AM_1_0 value "USPR" definition "US Prudential Regulators"]
	SEC_MarginRules displayName "SEC" 
		[synonym AcadiaSoft_AM_1_0 value "SEC" definition "Securities Exchange Commission"]
	SingaporeMarginRules displayName "Singapore" 
		[synonym AcadiaSoft_AM_1_0 value "MAS" definition "Monetary Authority of Singapore"]
	SwitzerlandMarginRules displayName "Switzerland" 


enum SensitivitiesEnum: 

	Alternative 
		[synonym ISDA_Create_1_0 value "alternative"]
	Standard 
		[synonym ISDA_Create_1_0 value "standard"]
		[synonym ISDA_Create_1_0 value "not_specified"]

enum ExceptionEnum: 

	Applicable 
		[synonym ISDA_Create_1_0 value "applicable"]
	NotApplicable 
		[synonym ISDA_Create_1_0 value "not_applicable"]
	Other 
		[synonym ISDA_Create_1_0 value "other"]

enum SimmExceptionApplicableEnum: 

	FallBackToMandatoryMethod 
		[synonym ISDA_Create_1_0 value "fallback"]
	MandatoryMethod 
		[synonym ISDA_Create_1_0 value "mandatory"]
	OtherMethod 
		[synonym ISDA_Create_1_0 value "other"]


enum RecalculationOfValueElectionEnum: 

	ConsulationProcedure 
		[synonym ISDA_Create_1_0 value "consultation_procedure"]
	OtherRegulatoryCSAProcedure 
		[synonym ISDA_Create_1_0 value "other_regulatory_CSA_procedure"]
	NotApplicable 
		[synonym ISDA_Create_1_0 value "not_applicable"]

enum ExecutionLocationEnum: 

	ExecutedOutsideBelgium 
		[synonym ISDA_Create_1_0 value "executed_outside_of_belgium"]
	ExecutedInBelgium 
		[synonym ISDA_Create_1_0 value "executed_in_belgium"]
	OtherLocation 
		[synonym ISDA_Create_1_0 value "other"]


import cdm.base.*
import cdm.synonyms.config.*

enum BusinessCenterEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenterScheme_7_24"]
	AEAD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AEAD"]
		[synonym ISDA_Create_1_0 value "Abu Dhabi, United Arab Emirates"]
	AEDU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AEDU"]
	AMYE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AMYE"]
		[synonym ISDA_Create_1_0 value "Yerevan, Armenia"]
	AOLU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AOLU"]
		[synonym ISDA_Create_1_0 value "Luanda, Angola"]
	ARBA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ARBA"]
		[synonym ISDA_Create_1_0 value "Buenos Aires, Argentina"]
	ATVI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ATVI"]
		[synonym ISDA_Create_1_0 value "Vienna, Austria"]
	AUAD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUAD"]
	AUBR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUBR"]
	AUCA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUCA"]
		[synonym ISDA_Create_1_0 value "Canberra, Australia"]
	AUDA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUDA"]
	AUME 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUME"]
	AUPE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUPE"]
	AUSY 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUSY"]
		[synonym ISDA_Create_1_0 value "Sydney, Australia"]
	BBBR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BBBR"]
		[synonym ISDA_Create_1_0 value "Bridgetown, Barbados"]
	BDDH 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BDDH"]
		[synonym ISDA_Create_1_0 value "Dhaka, Bangladesh"]
	BEBR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BEBR"]
		[synonym ISDA_Create_1_0 value "Brussels, Belgium"]
	BGSO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BGSO"]
		[synonym ISDA_Create_1_0 value "Sofia, Bulgaria"]
	BHMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BHMA"]
		[synonym ISDA_Create_1_0 value "Manama, Bahrain"]
	BMHA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BMHA"]
		[synonym ISDA_Create_1_0 value "Hamilton, Bermuda"]
	BNBS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BNBS"]
		[synonym ISDA_Create_1_0 value "Bandar Seri Begawan, Brunei Darussalam"]
	BOLP 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BOLP"]
		[synonym ISDA_Create_1_0 value "La Paz, Bolivia"]
	BRBD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRBD"]
	BRBR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRBR"]
		[synonym ISDA_Create_1_0 value "Brasília, Brazil"]
	BRRJ 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRRJ"]
	BRSP 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRSP"]
	BSNA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BSNA"]
		[synonym ISDA_Create_1_0 value "Nassau, Bahamas"]
	BWGA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BWGA"]
		[synonym ISDA_Create_1_0 value "Gaborone, Botswana"]
	BYMI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BYMI"]
		[synonym ISDA_Create_1_0 value "Minsk, Belarus"]
	CACL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CACL"]
	CAMO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAMO"]
	CAOT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAOT"]
		[synonym ISDA_Create_1_0 value "Ottawa-Gatineau, Canada"]
	CATO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CATO"]
		[synonym ISDA_Create_1_0 value "Toronto, Canada"]
	CAVA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAVA"]
	CAWI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAWI"]
	CHBA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHBA"]
	CHGE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHGE"]
	CHZU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHZU"]
	CIAB 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CIAB"]
		[synonym ISDA_Create_1_0 value "Abidjan, Côte d'Ivoire"]
	CLSA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLSA"]
		[synonym ISDA_Create_1_0 value "Santiago, Chile"]
	CNBE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNBE"]
		[synonym ISDA_Create_1_0 value "Beijing, China"]
	CNSH 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNSH"]
		[synonym ISDA_Create_1_0 value "Shanghai, China"]
	COBO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COBO"]
		[synonym ISDA_Create_1_0 value "Bogotá, Colombia"]
	CRSJ 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CRSJ"]
		[synonym ISDA_Create_1_0 value "San José, Costa Rica"]
	CYNI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CYNI"]
		[synonym ISDA_Create_1_0 value "Nicosia, Cyprus"]
	CZPR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CZPR"]
		[synonym ISDA_Create_1_0 value "Prague, Czechia"]
	DECO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DECO"]
	DEDU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DEDU"]
	DEFR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DEFR"]
		[synonym ISDA_Create_1_0 value "Frankfurt, Germany"]
	DEHH 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DEHH"]
	DELE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DELE"]
	DEMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DEMA"]
	DEMU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DEMU"]
	DEST 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DEST"]
	DKCO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKCO"]
		[synonym ISDA_Create_1_0 value "Copenhagen, Denmark"]
	DOSD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DOSD"]
		[synonym ISDA_Create_1_0 value "Santo Domingo, Dominican Republic"]
	DZAL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DZAL"]
		[synonym ISDA_Create_1_0 value "Algiers, Algeria"]
	EETA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EETA"]
		[synonym ISDA_Create_1_0 value "Tallinn, Estonia"]
	EGCA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EGCA"]
		[synonym ISDA_Create_1_0 value "Cairo, Egypt"]
	ESAS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ESAS"]
	ESBA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ESBA"]
	ESMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ESMA"]
		[synonym ISDA_Create_1_0 value "Madrid, Spain"]
	ETAA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ETAA"]
	EUTA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUTA"]
	FIHE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FIHE"]
		[synonym ISDA_Create_1_0 value "Helsinki, Finland"]
	FRPA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FRPA"]
		[synonym ISDA_Create_1_0 value "Paris, France"]
	GBED 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBED"]
	GBLO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBLO"]
		[synonym ISDA_Create_1_0 value "London, United Kingdom"]
	GETB 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GETB"]
		[synonym ISDA_Create_1_0 value "Tbilisi, Georgia"]
	GGSP 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GGSP"]
		[synonym ISDA_Create_1_0 value ""]
	GHAC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GHAC"]
	GRAT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GRAT"]
		[synonym ISDA_Create_1_0 value "Athens, Greece"]
	HKHK 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKHK"]
		[synonym ISDA_Create_1_0 value "Hong Kong, China"]
	HNTE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HNTE"]
		[synonym ISDA_Create_1_0 value "Tegucigalpa, Honduras"]
	HRZA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HRZA"]
		[synonym ISDA_Create_1_0 value "Zagreb, Croatia"]
	HUBU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HUBU"]
		[synonym ISDA_Create_1_0 value "Budapest, Hungary"]
	IDJA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDJA"]
		[synonym ISDA_Create_1_0 value "Jakarta, Indonesia"]
	IEDU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IEDU"]
		[synonym ISDA_Create_1_0 value "Dublin, Ireland"]
	ILJE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ILJE"]
		[synonym ISDA_Create_1_0 value "Jerusalem, Israel"]
	ILTA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ILTA"]
	INBA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INBA"]
	INCH 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INCH"]
	INHY 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INHY"]
	INKO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INKO"]
	INMU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INMU"]
	INND 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INND"]
		[synonym ISDA_Create_1_0 value "New Delhi, India"]
	IRTE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IRTE"]
		[synonym ISDA_Create_1_0 value "Tehran, Iran (Islamic Republic of)"]
	ISRE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISRE"]
		[synonym ISDA_Create_1_0 value "Reykjavík, Iceland"]
	ITMI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ITMI"]
	ITRO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ITRO"]
	ITTU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ITTU"]
	JESH 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JESH"]
		[synonym ISDA_Create_1_0 value "St. Helier, Channel Islands"]
	JMKI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JMKI"]
		[synonym ISDA_Create_1_0 value "Kingston, Jamaica"]
	JOAM 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JOAM"]
		[synonym ISDA_Create_1_0 value "Amman, Jordan"]
	JPTO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPTO"]
		[synonym ISDA_Create_1_0 value "Tokyo, Japan"]
	KENA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KENA"]
		[synonym ISDA_Create_1_0 value "Nairobi, Kenya"]
	KRSE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRSE"]
		[synonym ISDA_Create_1_0 value "Seoul, Republic of Korea"]
	KWKC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KWKC"]
		[synonym ISDA_Create_1_0 value "Kuwait City, Kuwait"]
	KYGE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KYGE"]
		[synonym ISDA_Create_1_0 value "George Town, Cayman Islands"]
	KZAL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KZAL"]
	LBBE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LBBE"]
		[synonym ISDA_Create_1_0 value "Beirut, Lebanon"]
	LKCO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LKCO"]
		[synonym ISDA_Create_1_0 value "Colombo, Sri Lanka"]
	LULU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LULU"]
		[synonym ISDA_Create_1_0 value "Luxembourg, Luxembourg"]
	LVRI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LVRI"]
		[synonym ISDA_Create_1_0 value "Riga, Latvia"]
	MACA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MACA"]
	MARA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MARA"]
		[synonym ISDA_Create_1_0 value "Rabat, Morocco"]
	MCMO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MCMO"]
		[synonym ISDA_Create_1_0 value "Monaco, Monaco"]
	MOMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MOMA"]
		[synonym ISDA_Create_1_0 value "Macao, China, Macao SAR"]
	MTVA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MTVA"]
		[synonym ISDA_Create_1_0 value "Valletta, Malta"]
	MUPL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MUPL"]
		[synonym ISDA_Create_1_0 value "Port Louis, Mauritius"]
	MVMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MVMA"]
		[synonym ISDA_Create_1_0 value "Male, Maldives"]
	MWLI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MWLI"]
		[synonym ISDA_Create_1_0 value "Lilongwe, Malawi"]
	MXMC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXMC"]
		[synonym ISDA_Create_1_0 value "Mexico City, Mexico"]
	MYKL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYKL"]
		[synonym ISDA_Create_1_0 value "Kuala Lumpur, Malaysia"]
	MYLA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYLA"]
	NAWI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NAWI"]
		[synonym ISDA_Create_1_0 value "Windhoek, Namibia"]
	NGAB 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NGAB"]
		[synonym ISDA_Create_1_0 value "Abuja, Nigeria"]
	NGLA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NGLA"]
	NLAM 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NLAM"]
		[synonym ISDA_Create_1_0 value "Amsterdam, Netherlands"]
	NLRO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NLRO"]
	NOOS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NOOS"]
		[synonym ISDA_Create_1_0 value "Oslo, Norway"]
	NPKA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NPKA"]
		[synonym ISDA_Create_1_0 value "Kathmandu, Nepal"]
	NYFD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NYFD"]
	NYSE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NYSE"]
	NZAU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZAU"]
	NZWE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZWE"]
		[synonym ISDA_Create_1_0 value "Wellington, New Zealand"]
	OMMU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OMMU"]
		[synonym ISDA_Create_1_0 value "Masqat (Muscat), Oman"]
	PAPC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PAPC"]
		[synonym ISDA_Create_1_0 value "Panama City, Panama"]
	PELI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PELI"]
		[synonym ISDA_Create_1_0 value "Lima, Peru"]
	PHMA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHMA"]
		[synonym ISDA_Create_1_0 value "Manila, Philippines"]
	PHMK 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHMK"]
	PKKA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PKKA"]
	PLWA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLWA"]
		[synonym ISDA_Create_1_0 value "Warsaw, Poland"]
	PRSJ 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PRSJ"]
		[synonym ISDA_Create_1_0 value "San Juan, Puerto Rico"]
	PTLI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PTLI"]
		[synonym ISDA_Create_1_0 value "Lisbon, Portugal"]
	QADO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "QADO"]
		[synonym ISDA_Create_1_0 value "Doha, Qatar"]
	ROBU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ROBU"]
	RSBE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RSBE"]
		[synonym ISDA_Create_1_0 value "Belgrade, Serbia"]
	RUMO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUMO"]
		[synonym ISDA_Create_1_0 value "Moscow, Russian Federation"]
	SAAB 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SAAB"]
	SAJE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SAJE"]
	SARI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SARI"]
		[synonym ISDA_Create_1_0 value "Riyadh, Saudi Arabia"]
	SEST 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SEST"]
		[synonym ISDA_Create_1_0 value "Stockholm, Sweden"]
	SGSI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGSI"]
		[synonym ISDA_Create_1_0 value "Singapore, Singapore"]
	SILJ 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SILJ"]
		[synonym ISDA_Create_1_0 value "Ljubljana, Slovenia"]
	SKBR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SKBR"]
		[synonym ISDA_Create_1_0 value "Bratislava, Slovakia"]
	SNDA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SNDA"]
		[synonym ISDA_Create_1_0 value "Dakar, Senegal"]
	SVSS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SVSS"]
		[synonym ISDA_Create_1_0 value "San Salvador, El Salvador"]
	THBA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THBA"]
		[synonym ISDA_Create_1_0 value "Bangkok, Thailand"]
	TNTU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TNTU"]
		[synonym ISDA_Create_1_0 value "Tunis, Tunisia"]
	TRAN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRAN"]
		[synonym ISDA_Create_1_0 value "Ankara, Turkey"]
	TRIS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRIS"]
	TTPS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TTPS"]
		[synonym ISDA_Create_1_0 value "Port of Spain, Trinidad and Tobago"]
	TWTA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWTA"]
		[synonym ISDA_Create_1_0 value " Taibei, China, Taiwan Province of China"]
	TZDA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TZDA"]
	TZDO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TZDO"]
		[synonym ISDA_Create_1_0 value "Dodoma, United Republic of Tanzania"]
    UAKI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "UAKI"]
		[synonym ISDA_Create_1_0 value "Kiev, Ukraine"]
	UGKA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "UGKA"]
		[synonym ISDA_Create_1_0 value "Kampala, Uganda"]
	USBO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USBO"]
	USCH 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USCH"]
	USCR 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USCR"]
	USDC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USDC"]
		[synonym ISDA_Create_1_0 value "Washington, D.C., United States of America"]
	USDN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USDN"]
	USDT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USDT"]
	USGS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USGS"]
	USHL 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USHL"]
	USHO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USHO"]
	USLA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USLA"]
	USMB 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMB"]
	USMN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USMN"]
	USNY 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USNY"]
		[synonym ISDA_Create_1_0 value "New York, United States of America"]
	USPO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USPO"]
	USSA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USSA"]
	USSE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USSE"]
	USWT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USWT"]
	UYMO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "UYMO"]
		[synonym ISDA_Create_1_0 value "Montevideo, Uruguay"]
	VECA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VECA"]
		[synonym ISDA_Create_1_0 value "Caracas, Venezuela (Bolivarian Republic of)"]
	VGRT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VGRT"]
		[synonym ISDA_Create_1_0 value "Road Town, British Virgin Islands"]
	VNHA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VNHA"]
		[synonym ISDA_Create_1_0 value "Hà Noi, Viet Nam"]
	VNHC 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VNHC"]
		[synonym ISDA_Create_1_0 value "Ho Chi Minh (formerly Saigon), Vietnam"]
	YEAD 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "YEAD"]
	ZAJO 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAJO"]
	ZMLU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZMLU"]
		[synonym ISDA_Create_1_0 value "Lusaka, Zambia"]
	ZWHA 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZWHA"]
		[synonym ISDA_Create_1_0 value "Harare, Zimbabwe"]
		
enum BusinessDayConventionEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BusinessDayConventionEnum"]
	FOLLOWING 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FOLLOWING"]
	FRN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FRN"]
	MODFOLLOWING 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MODFOLLOWING"]
	PRECEDING 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PRECEDING"]
	MODPRECEDING 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MODPRECEDING"]
	NEAREST 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NEAREST"]
	NONE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NONE"]
	NotApplicable 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NotApplicable"]		

enum DayOfWeekEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DayOfWeekEnum"]
	MON 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MON"]
	TUE 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TUE"]
	WED 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WED"]
	THU 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THU"]
	FRI 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FRI"]
	SAT 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SAT"]
	SUN 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SUN"]		
		
enum DayTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DayTypeEnum"]
	Business 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Business"]
	Calendar 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Calendar"]
	CommodityBusiness 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CommodityBusiness"]
	CurrencyBusiness 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CurrencyBusiness"]
	ExchangeBusiness 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExchangeBusiness"]
	ScheduledTradingDay 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ScheduledTradingDay"]

enum PeriodEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PeriodEnum"]
	D 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "D"]
	W 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "W"]
	M 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "M"]
	Y 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Y"]

enum PeriodExtendedEnum extends PeriodEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PeriodExtendedEnum"]
	T 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "T"]

		
enum PeriodTimeEnum: 
	[synonym FpML_5_10 value "PeriodTimeEnum"]
	Hour 
		[synonym FpML_5_10 value "Hour"]
	Minute 
		[synonym FpML_5_10 value "Minute"]
	Second 
		[synonym FpML_5_10 value "Second"]
		
enum TimeUnitEnum: 

	Second 
	Minute 
	Hour 
	Day 
	Week 
	Month 
	Year 		
 

import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.asset.rates.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

//***********************
// Product Qualification

isProduct root EconomicTerms;

func Qualify_CreditDefaultSwap: 
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
	assign-output is_product:
		economicTerms -> payout -> creditDefaultPayout exists
		and ( economicTerms -> payout -> interestRatePayout
			or economicTerms -> payout -> cashflow ) exists
		and economicTerms -> payout -> equityPayout is absent
		and economicTerms -> payout -> optionPayout is absent

func Qualify_CreditDefaultSwaption: 
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
	assign-output is_product:
        economicTerms -> payout -> optionPayout exists
        and economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout exists
        and ( economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> contractualProduct -> economicTerms -> payout -> interestRatePayout
            or economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> contractualProduct -> economicTerms -> payout -> cashflow ) exists
        and economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> contractualProduct -> economicTerms -> payout -> equityPayout is absent
        and economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> contractualProduct -> economicTerms -> payout -> optionPayout is absent

func Qualify_EquitySwap_PriceReturnBasicPerformance_SingleName: 
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "EquitySwap_PriceReturnBasicPerformance_SingleName"]
	assign-output is_product:
        economicTerms -> payout -> interestRatePayout exists
        and ( economicTerms -> payout -> equityPayout -> returnType = ReturnTypeEnum -> Price
            or economicTerms -> payout -> equityPayout -> returnType = ReturnTypeEnum -> Total )
        and ( economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> equity
            or economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> exchangeTradedFund
            or economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> mutualFund
            or economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> warrant
            ) exists

func Qualify_EquitySwap_ParameterReturnDividend_SingleName: 
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "EquitySwap_ParameterReturnDividend_SingleName"]
	assign-output is_product:
        economicTerms -> payout -> interestRatePayout exists
        and economicTerms -> payout -> equityPayout -> returnType = ReturnTypeEnum -> Dividend
        and ( economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> equity
            or economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> exchangeTradedFund
            or economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> mutualFund
            or economicTerms -> payout -> equityPayout -> underlier -> underlyingProduct -> security -> warrant
            ) exists

func Qualify_InterestRate_IRSwap_Basis:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_Basis"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 2
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate is absent
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent

func Qualify_InterestRate_IRSwap_FixedFloat_PlainVanilla: 
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_FixedFloat"]
	assign-output is_product:
        economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
        and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1
        and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
        and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
        and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> settlementProvision is absent
        and economicTerms -> payout -> optionPayout is absent
        and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> spreadSchedule -> step is absent
        and economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate -> rateSchedule -> step is absent
        and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> floatingRateMultiplierSchedule is absent
        and economicTerms -> payout -> interestRatePayout -> payoutQuantity -> quantitySchedule -> stepSchedule -> step is absent
        and economicTerms -> payout -> interestRatePayout -> stubPeriod is absent
        and economicTerms -> payout -> interestRatePayout -> calculationPeriodDates -> stubPeriodType is absent
	/*
	 * TODO - Cannot compare the below because in FpML the period associated with the reset frequency is of type PeriodExtendedEnum, which includes 'T'
	 * Need to adjust the implementation once a proper implementation approach has been firmed out
	 */
//	and economicTerms -> payout -> interestRatePayout -> resetDates -> resetFrequency -> period =
//		economicTerms -> payout -> interestRatePayout -> interestRate -> floatingRate -> indexTenor -> period
		and economicTerms -> payout -> interestRatePayout -> resetDates -> resetFrequency -> periodMultiplier =
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> assetIdentifier -> rateOption -> indexTenor -> periodMultiplier
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period <> PeriodExtendedEnum -> T
		and economicTerms -> payout -> interestRatePayout -> compoundingMethod is absent
	// TODO comment out data rules that should only apply to qualification (and not be applied as part of general validation)
//	and Vanilla_AnnualPaymentDifferentResetFrequency, Vanilla_SemiAnnualPayment_QuarterlyReset, Vanilla_QuarterlyPayment_MonthlyReset apply

/*
 * TODO Address the below data rule
 */
//data rule Vanilla_SamePaymentResetFrequency
//	when payout -> interestRatePayout -> resetDates exists
//	then payout -> interestRatePayout -> resetDates -> resetFrequency -> periodMultiplier = payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier

// TODO comment out data rules that should only apply to qualification (and not be applied as part of general validation)
//condition Vanilla_AnnualPaymentDifferentResetFrequency: 
//	when payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> Y
//	then payout -> interestRatePayout -> resetDates -> resetFrequency -> period = PeriodExtendedEnum -> M
//	and ( payout -> interestRatePayout -> resetDates -> resetFrequency -> periodMultiplier = 6
//		or payout -> interestRatePayout -> resetDates -> resetFrequency -> periodMultiplier = 3 )

// TODO comment out data rules that should only apply to qualification (and not be applied as part of general validation)
//condition Vanilla_SemiAnnualPayment_QuarterlyReset: 
//	when payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> M
//		and payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier = 6
//	then payout -> interestRatePayout -> resetDates -> resetFrequency -> period = PeriodExtendedEnum -> M
//		and payout -> interestRatePayout -> resetDates -> resetFrequency -> periodMultiplier = 3

// TODO comment out data rules that should only apply to qualification (and not be applied as part of general validation)
//condition Vanilla_QuarterlyPayment_MonthlyReset: 
//	when payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> M
//		and payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier = 6
//	then payout -> interestRatePayout -> resetDates -> resetFrequency -> period = PeriodExtendedEnum -> M
//		and payout -> interestRatePayout -> resetDates -> resetFrequency -> periodMultiplier = 3

func Qualify_InterestRate_IRSwap_FixedFloat:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
	[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_FixedFloat"]
	assign-output is_product:
	economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period <> PeriodExtendedEnum -> T
		and ( economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> spreadSchedule -> step exists
			or economicTerms -> payout -> interestRatePayout -> payoutQuantity -> quantitySchedule -> stepSchedule -> step exists
			or economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> floatingRateMultiplierSchedule exists
			or economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate -> rateSchedule -> step exists
			or economicTerms -> payout -> interestRatePayout -> resetDates -> resetFrequency -> periodMultiplier <>
			economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> assetIdentifier -> rateOption -> indexTenor -> periodMultiplier
			or economicTerms -> payout -> interestRatePayout -> compoundingMethod exists
			or economicTerms -> payout -> interestRatePayout -> stubPeriod exists
			or economicTerms -> payout -> interestRatePayout -> calculationPeriodDates -> stubPeriodType exists
			or economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> settlementProvision exists )
		and economicTerms -> payout -> interestRatePayout -> paymentDates exists

func Qualify_InterestRate_IRSwap_FixedFixed:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_FixedFixed"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 2
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate is absent
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent

func Qualify_InterestRate_CrossCurrency_Basis:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_CrossCurrency_Basis"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 2
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate is absent
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges exists
		and economicTerms -> payout -> optionPayout is absent

func Qualify_InterestRate_CrossCurrency_FixedFloat:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_CrossCurrency_FixedFloat"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges exists
		and economicTerms -> payout -> optionPayout is absent

func Qualify_InterestRate_CrossCurrency_FixedFixed:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_CrossCurrency_FixedFixed"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 2
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate is absent
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges exists
		and economicTerms -> payout -> optionPayout is absent

func Qualify_InterestRate_IRSwap_FixedFloat_ZeroCoupon:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_FixedFloat"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier = 1
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> T

/*
 * TODO Adjust the Xtext grammar to support enumeration styles
 */
func Qualify_InterestRate_IRSwap_FixedFloat_OIS:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_FixedFloat"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> assetIdentifier -> rateOption -> floatingRateIndex = FloatingRateIndexEnum -> AUD_AONIA_OIS_COMPOUND

func Qualify_InterestRate_IRSwap_Basis_OIS:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_Basis"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 2
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate is absent
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> assetIdentifier -> rateOption -> floatingRateIndex = FloatingRateIndexEnum -> AUD_AONIA_OIS_COMPOUND


func Qualify_InterestRate_InflationSwap_FixedFloat_YearOn_Year:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_Inflation"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier = 1
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> Y

func Qualify_InterestRate_InflationSwap_FixedFloat_ZeroCoupon:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_Inflation"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier = 1
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> T

func Qualify_InterestRate_InflationSwap_Basis_YearOn_Year:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_Inflation"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier = 1
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> Y

func Qualify_InterestRate_InflationSwap_Basis_ZeroCoupon:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_IRSwap_Inflation"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> inflationRate count = 1
		and economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate is absent
		and economicTerms -> payout -> interestRatePayout -> crossCurrencyTerms -> principalExchanges is absent
		and economicTerms -> payout -> optionPayout is absent
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> periodMultiplier = 1
		and economicTerms -> payout -> interestRatePayout -> paymentDates -> paymentFrequency -> period = PeriodExtendedEnum -> T

func Qualify_InterestRate_Option_Swaption:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_Option_Swaption"]
	assign-output is_product:
        economicTerms -> payout -> optionPayout exists
        and economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> contractualProduct -> economicTerms -> payout -> interestRatePayout count = 2

func Qualify_InterestRate_Option_DebtOption:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_DebtOption"]
	assign-output is_product:
        economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> security -> bond exists
        or economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> security -> convertibleBond exists

func Qualify_InterestRate_CapFloor:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_CapFloor"]
	assign-output is_product:
		economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> capRateSchedule exists
		or economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> floorRateSchedule exists

func Qualify_InterestRate_Fra:
	[qualification Product]
	inputs: eTerms EconomicTerms(1..1)
	output: result boolean(1..1)
		[synonym ISDA_Taxonomy_v1 value "InterestRate_Fra"]

	assign-output result:
		eTerms -> payout -> interestRatePayout count = 2
		and eTerms -> payout -> creditDefaultPayout is absent
		and eTerms -> payout -> cashflow is absent
		and EffectiveDateContainsPaymentDate(eTerms) = True

func Qualify_ForeignExchange:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "ForeignExchange_Forward"]
		[synonym ISDA_Taxonomy_v1 value "ForeignExchange_Spot"]
	assign-output is_product:
        economicTerms -> payout -> forwardPayout -> underlier -> underlyingProduct -> foreignExchange exists and
        economicTerms -> payout -> forwardPayout -> settlementTerms -> fxSettlementTerms is absent

func Qualify_ForeignExchange_NDF:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
		[synonym ISDA_Taxonomy_v1 value "ForeignExchange_NDF"]
	assign-output is_product:
		economicTerms -> payout -> forwardPayout -> settlementTerms -> fxSettlementTerms exists


func Qualify_ForeignExchangeVanillaOption: 	
    [qualification Product]	
    inputs: economicTerms EconomicTerms (1..1)	
    output: is_product boolean (1..1)	
	    [synonym ISDA_Taxonomy_v1 value "ForeignExchange:VanillaOption"]	
    assign-output is_product:   
        economicTerms -> payout -> optionPayout exists  
        and economicTerms -> payout -> optionPayout -> underlier -> underlyingProduct -> foreignExchange only exists 
        and economicTerms -> payout -> optionPayout -> feature is absent	

func Qualify_RepurchaseAgreement:
	[qualification Product]
	inputs: economicTerms EconomicTerms (1..1)
	output: is_product boolean (1..1)
	assign-output is_product:
		economicTerms -> payout -> securityPayout -> securityLeg count >= 1 and
		economicTerms -> payout -> interestRatePayout count = 1


/*****************
 * Synonym sources
 */
synonym source AcadiaSoft_AM_1_0
synonym source CME_ClearedConfirm_1_17
synonym source CME_SubmissionIRS_1_0
synonym source FpML_5_10
synonym source FIX_5_0_SP2
synonym source ISDA_Create_1_0
synonym source ISDA_Taxonomy_v1
synonym source ISO20022
synonym source Workflow_Event


import cdm.base.*
import cdm.synonyms.config.*

enum ActionEnum: 

	New 
		
		[synonym CME_SubmissionIRS_1_0 value "0"]
	Correct 
		
		[synonym CME_SubmissionIRS_1_0 value "2"]
	Cancel 
		
		[synonym CME_SubmissionIRS_1_0 value "1"]


enum AssetTransferTypeEnum: 

	FreeOfPayment 
		[synonym Workflow_Event value "FreeOfPayment"]


enum CashflowTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashflowTypeScheme_2_0"]
	AmendmentFee 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AmendmentFee"]
	AssignmentFee 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AssignmentFee"]
	BrokerageCommission 
		[synonym Workflow_Event value "brokerageCommission"]
	Coupon 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Coupon"]
	CreditEvent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CreditEvent"]
	DividendReturn 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DividendReturn"]
	ExerciseFee 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExerciseFee"]
	Fee 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Fee"]
		[synonym Workflow_Event value "fee"]
	IncreaseFee 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IncreaseFee"]
	Interest 
		[synonym Workflow_Event value "interest"]
	InterestReturn 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "InterestReturn"]
	NetInterest 
		[synonym Workflow_Event value "netInterest"]
	NovationFee 
		[synonym Workflow_Event value "novationFee"]
	PartialTerminationFee 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PartialTerminationFee"]
	Premium 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PREMIUM"]
		[synonym Workflow_Event value "premium"]
	PriceReturn 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PriceReturn"]
	PrincipalExchange 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PrincipleExchange"]
	TerminationFee 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TerminationFee"]
	UpfrontFee 
		[synonym CME_ClearedConfirm_1_17 value "UPFRONT_FEE"]


enum CommodityReferencePriceEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "commodityReferencePriceScheme_1_1"]
	ALUMINIUM_ALLOY_LME_15_MONTH displayName "ALUMINIUM ALLOY-LME 15 MONTH" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ALUMINIUM ALLOY-LME 15 MONTH"]
	COAL_CENTRAL_APPALACHIAN_NYMEX displayName "COAL-CENTRAL APPALACHIAN-NYMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COAL-CENTRAL APPALACHIAN-NYMEX"]
	COCOA_ICE displayName "COCOA-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COCOA-ICE"]
	COFFEE_ARABICA_ICE displayName "COFFEE ARABICA-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COFFEE ARABICA-ICE"]
	COFFEE_ROBUSTA_ICE displayName "COFFEE ROBUSTA-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COFFEE ROBUSTA-ICE"]
	COPPER_COMEX displayName "COPPER-COMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COPPER-COMEX"]
	CORN_CBOT displayName "CORN-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CORN-CBOT"]
	COTTON_NO__2_ICE displayName "COTTON NO. 2-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COTTON NO. 2-ICE"]
	ETHANOL_CBOT displayName "ETHANOL-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ETHANOL-CBOT"]
	FEEDER_CATTLE_CME displayName "FEEDER CATTLE-CME" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FEEDER CATTLE-CME"]
	FROZEN_CONCENTRATED_ORANGE_JUICE_NO__1_ICE displayName "FROZEN CONCENTRATED ORANGE JUICE NO. 1-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FROZEN CONCENTRATED ORANGE JUICE NO. 1-ICE"]
	GASOLINE_RBOB_NEW_YORK_ICE displayName "GASOLINE-RBOB-NEW YORK-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GASOLINE-RBOB-NEW YORK-ICE"]
	GASOLINE_RBOB_NEW_YORK_NYMEX displayName "GASOLINE-RBOB-NEW YORK-NYMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GASOLINE-RBOB-NEW YORK-NYMEX"]
	GOLD_COMEX displayName "GOLD-COMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GOLD-COMEX"]
	HEATING_OIL_NEW_YORK_NYMEX displayName "HEATING OIL-NEW YORK-NYMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HEATING OIL-NEW YORK-NYMEX"]
	LEAN_HOGS_CME displayName "LEAN HOGS-CME" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LEAN HOGS-CME"]
	LIVE_CATTLE_CME displayName "LIVE CATTLE-CME" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LIVE CATTLE-CME"]
	LUMBER_CME displayName "LUMBER-CME" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "LUMBER-CME"]
	MILK_CLASS_III_CME displayName "MILK-CLASS III-CME" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MILK-CLASS III-CME"]
	MILK_NONFAT_DRY_CME displayName "MILK-NONFAT-DRY-CME" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MILK-NONFAT-DRY-CME"]
	NATURAL_GAS_NYMEX displayName "NATURAL GAS-NYMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NATURAL GAS-NYMEX"]
	NATURAL_GAS_PEPL__TEXOK_MAINLINE__INSIDE_FERC displayName "NATURAL GAS-PEPL (TEXOK MAINLINE)-INSIDE FERC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NATURAL GAS-PEPL (TEXOK MAINLINE)-INSIDE FERC"]
	NATURAL_GAS_W__TEXAS__WAHA__INSIDE_FERC displayName "NATURAL GAS-W. TEXAS (WAHA)-INSIDE FERC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NATURAL GAS-W. TEXAS (WAHA)-INSIDE FERC"]
	OATS_CBOT displayName "OATS-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OATS-CBOT"]
	OIL_WTI_NYMEX displayName "OIL-WTI-NYMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OIL-WTI-NYMEX"]
	PALLADIUM_NYMEX displayName "PALLADIUM-NYMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PALLADIUM-NYMEX"]
	PLATINUM_NYMEX displayName "PLATINUM-NYMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLATINUM-NYMEX"]
	RICE_CBOT displayName "RICE-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RICE-CBOT"]
	SILVER_COMEX displayName "SILVER-COMEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SILVER-COMEX"]
	SOYBEANS_CBOT displayName "SOYBEANS-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SOYBEANS-CBOT"]
	SOYBEAN_MEAL_CBOT displayName "SOYBEAN MEAL-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SOYBEAN MEAL-CBOT"]
	SOYBEAN_OIL_CBOT displayName "SOYBEAN OIL-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SOYBEAN OIL-CBOT"]
	SUGAR___11__WORLD__ICE displayName "SUGAR # 11 (WORLD)-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SUGAR # 11 (WORLD)-ICE"]
	SUGAR___16__US__ICE displayName "SUGAR # 16 (US)-ICE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SUGAR # 16 (US)-ICE"]
	WHEAT_CBOT displayName "WHEAT-CBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WHEAT-CBOT"]
	WHEAT_HRW_KCBOT displayName "WHEAT HRW-KCBOT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WHEAT HRW-KCBOT"]
	WHEAT_RED_SPRING_MGE displayName "WHEAT RED SPRING-MGE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WHEAT RED SPRING-MGE"]


enum CreditLimitTypeEnum: 
	[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "creditLimitTypeScheme_1_0"]
	CS01 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "CS01"]
	DV01 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "DV01"]
	IM < "The type of credit line expressed in Initial Margin value." >
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "IM"]
	Notional 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "Notional"]
	NPV 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "NPV"]
	PV01 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "PV01"]


enum EventTimestampQualificationEnum: 

	clearingDateTime 
	clearingConfirmationDateTime 
	clearingSubmissionDateTime 
	eventCreationDateTime 
	eventExpirationDateTime 
	eventProcessingDateTime 
	eventSentDateTime 
	eventSubmittedDateTime 
	executionDateTime 
	transactionCreationDateTime 


enum IntentEnum: 

	Correction 
		[synonym Workflow_Event value "correction"]
	Increase 
		[synonym Workflow_Event value "increase"]
	PartialTermination 
		[synonym Workflow_Event value "partialTermination"]
	Renegotiation 
		[synonym Workflow_Event value "renegotiation"]
	Termination 
		[synonym Workflow_Event value "termination"]


enum LimitLevelEnum: 

	Account 
		[synonym Workflow_Event, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ACCT"]
	Customer 
		[synonym Workflow_Event, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "CUST"]
	House 
		[synonym Workflow_Event, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "HOUS"]


/*
 * TODO - Deprecate if we agree not to map the CME originatingEvent attribute
 */
enum OriginatingEventEnum: 
	// TODO Never referenced in CDM
	[synonym CME_ClearedConfirm_1_17 value "OriginatingEventEnum"]
	Allocation 
		[synonym CME_SubmissionIRS_1_0 value "1"]
	Amendment 
		[synonym CME_ClearedConfirm_1_17 value "TRADE_AMEND"]
	Compression 
		[synonym CME_ClearedConfirm_1_17 value "RESIDUAL_TRADE"]
	Exercise 
		[synonym CME_ClearedConfirm_1_17 value "EXERCISE"]
		[synonym Workflow_Event value "Exercise"]
	Clearing 
		[synonym CME_SubmissionIRS_1_0 value "2"]
	NewTrade 
		[synonym CME_ClearedConfirm_1_17 value "NEW_TRADE"]
		[synonym Workflow_Event value "NewTrade"]
		[synonym CME_SubmissionIRS_1_0 value "0"]
	Novation 
		[synonym CME_ClearedConfirm_1_17 value "ASSIGNMENT"]
	PartialExercise 
		[synonym CME_ClearedConfirm_1_17 value "PARTIAL_EXERCISE"]
	PartialNovation 
		[synonym CME_ClearedConfirm_1_17 value "NOVATION"]
	Transfer 
		[synonym CME_ClearedConfirm_1_17 value "TRANSFER"]


enum PaymentStatusEnum: 

	// TODO Never referenced in CDM
	Disputed 
		[synonym Workflow_Event value "disputed"]
	Instructed 
		[synonym Workflow_Event value "instructed"]
	Pending 
		[synonym Workflow_Event value "pending"]
	Settled 
		[synonym Workflow_Event value "settled"]


enum PaymentTypeEnum extends CashflowTypeEnum: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentTypeScheme"]
	NetCashflow


enum SettlementTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SettlementTypeEnum"]
	Cash 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Cash"]
	Physical 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Physical"]
	Election 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Election"]
	CashOrPhysical 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CashOrPhysical"]


enum TransferStatusEnum: 

	Disputed 
		[synonym Workflow_Event value "disputed"]
	Instructed 
		[synonym Workflow_Event value "instructed"]
	Pending 
		[synonym Workflow_Event value "pending"]
	Settled 
		[synonym Workflow_Event value "settled"]


enum TransferSettlementEnum: 

	DeliveryVersusDelivery 
		[synonym Workflow_Event value "DeliveryVersusDelivery"]
	DeliveryVersusPayment 
		[synonym Workflow_Event value "DeliveryVersusPayment"]
	/*
	 * TODO - Need to confirm whether the DTCC synonyms are properly positioned + whether NotCentralSettlement is a relevant entry.
	 */
	PaymentVersusPayment 
		[synonym Workflow_Event value "PaymentVersusPayment"]
		
	NotCentralSettlement 
		


enum WarehouseIdentityEnum:

	DTCC_TIW_Gold 
		


enum WorkflowStatusEnum:
	
	[synonym CME_ClearedConfirm_1_17 value "StatusEnum"]
	Accepted
		[synonym CME_ClearedConfirm_1_17, Workflow_Event value "Accepted"]
	Alleged
		
	Amended
		[synonym CME_ClearedConfirm_1_17 value "AMENDED"]
		[synonym Workflow_Event value "Amended"]
	Cancelled
		[synonym CME_SubmissionIRS_1_0 value "2"]
	Certain
		
	Cleared
		[synonym CME_ClearedConfirm_1_17 value "CLEARED"]
		[synonym Workflow_Event value "Cleared"]
	Pending
		[synonym CME_SubmissionIRS_1_0 value "101"]
	Rejected
		[synonym CME_ClearedConfirm_1_17, Workflow_Event value "Rejected"]
		[synonym CME_SubmissionIRS_1_0 value "1"]
	Submitted
		[synonym Workflow_Event value "Submitted"]
		
		[synonym CME_SubmissionIRS_1_0 value "0"]
	Terminated
		[synonym CME_ClearedConfirm_1_17 value "TERMINATED"]
		[synonym Workflow_Event value "Terminated"]
	Uncertain
		
	Unconfirmed
		
	Affirmed
		[synonym Workflow_Event value "Affirmed"]
	Confirmed
		[synonym Workflow_Event value "Confirmed"]



import cdm.base.datetime.*
import org.isda.cdm.*
import cdm.base.staticdata.asset.common.*
import cdm.base.*
import cdm.base.staticdata.asset.credit.*
import cdm.base.math.*
import cdm.base.staticdata.party.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.asset.rates.*
import cdm.synonyms.config.*
	 
synonym source DTCC_9_0 extends DTCC_BASE {
	ContractFormationPrimitive:
		+ after
			[value "OTC_Matching" path "Body" set when "Header->OTC_RM->Manifest->TradeMsg->TransType" = "Trade"]
}

synonym source DTCC_11_0 extends DTCC_BASE {
	ContractFormationPrimitive:
		+ after
			[value "OTC_RM" path "Header", "OTC_Matching" path "Body" set when "Header->OTC_RM->Manifest->TradeMsg->TransType" = "Trade"]	
}

synonym source DTCC_BASE extends FpML_5_10
{
	CalculationAgentModel:
		+ calculationAgentBusinessCenter
			[value "calculationAgentBusinessCenter" path "Body->OTC_Matching->Trade->FpML->trade"]

	Contract:
		- contractIdentifier
		+ contractIdentifier
			[value "Submitter"]
			[value "ContraTradeId"]
			[value "YourTradeId"]
			[value "tradeIdentifyingItems"]
			[value "USI"]
			[value "OriginatingUSI"]
			[value "UTI"]
		+ tradableProduct
			[hint "ProductType"]

	Execution:
		+ identifier
			[value "partyTradeIdentifier" path "Submitter"]

	Payout:
		+ equityPayout
			[value "ignore"]
		+ forwardPayout
			[value "ignore"]
		+ securityPayout
			[value "ignore"]

	Product:
		+ contractualProduct
			[hint "ProductType"]

	ProductIdentification:
		- productType
		+ productType
			[value "ProductType"]
		+ productId
			[value "instrumentId" path "payment->calculationDetails->calculationElements->underlier->index" meta "instrumentIdScheme"]

	PrimitiveEvent:
		+ split
			[value "ignore"]
		+ exercise
			[value "ignore"]
		+ quantityChange
			[value "ignore"]
		+ reset
			[value "ignore"]
		+ termsChange
			[value "ignore"]
		+ transfer
			[value "Payment" path "Body->OTC_Matching"]

	ObservationPrimitive:
		+ date
			[value "observationDate"]

	TransferPrimitive:
		+ identifier
			[value "tradeCashflowsId" path "FpML" meta "tradeCashflowsIdScheme"]
		+ settlementType
			[value "SettlementType" path "PaymentDetails"]
		+ cashTransfer
			[value "payment" path "FpML"]

	AssetIdentifier:
		+ productIdentifier
			// For PriceNotation always set productIdentifier
			// TODO: NAMESPACE changes. Removed the rosettaPath and moved the check one level up
			// [synonym FpML_5_10 value "equity" set when rosettaPath = PriceNotation -> assetIdentifier]
			[value "ignore"]

	Party:
		+ partyId
			[value "partyId" maps 2 meta "partyIdScheme"]

	AssignedIdentifier:
		+ identifier
			 [value "tradeId" path "partyTradeIdentifier" maps 2
			 set when "partyTradeIdentifier->tradeId->tradeIdScheme" = "EventProcessingId" and rosettaPath = WorkflowStep -> eventIdentifier -> assignedIdentifier -> identifier,
			 set when "partyTradeIdentifier->tradeId->tradeIdScheme" = "TradeRefNbr" and rosettaPath = Contract -> contractIdentifier -> assignedIdentifier -> identifier meta "tradeIdScheme"]
			[value "USITradeId" meta "tradeIdScheme"]
			[value "UTITradeId" meta "tradeIdScheme"]
			[value "identifier" path "payment" meta "paymentIdScheme"]

	Identifier:
		+ issuerReference
			[value "partyReference" path "partyTradeIdentifier" maps 2 meta "href"]
		+ issuer
			[value "USIIssuer" meta "issuerIdScheme"]
			[value "UTIIssuer" meta "issuerIdScheme"]

	InterestShortFall:
		+ rateSource
			[value "rateSource" meta "floatingRateIndexScheme"]

	CashTransferComponent:
		+ amount
			[value "paymentAmount"]
		+ cashflowType
			[value "cashflowType" path "calculationDetails->grossCashflow" meta "cashflowTypeScheme"]
		+ breakdown
			[value "breakdown"]

	ContractState:
		+ contract
			[value "FpML" path "Trade"]
			[value "TradeMsg" path "Manifest"]
			[value "ReportingJurisdiction" path "ReportingData->ReportingHeader"]

	CustomisedWorkflow:
		+ itemName
			[set to "comment" when path = "PartyWorkflowFields->comment"]
			[set to "superId" when path = "PartyWorkflowFields->superId"]
			[set to "deskId" when path = "PartyWorkflowFields->deskId"]
			[set to "eTradeId" when path = "PartyWorkflowFields->eTradeId"]
			[set to "designatedParty" when path = "PartyWorkflowFields->designatedParty"]
			[set to "brokerName" when path = "PartyWorkflowFields->brokerName"]
			[set to "branchLocation" when path = "PartyWorkflowFields->branchLocation"]
			[set to "midMarketPriceType" when path = "PartyWorkflowFields->midMarketPrice->midMarketPriceType"]
			[set to "amount" when path = "PartyWorkflowFields->midMarketPrice->amount"]
		+ itemValue
			[value "comment" path "PartyWorkflowFields"]
			[value "superId" path "PartyWorkflowFields"]
			[value "deskId" path "PartyWorkflowFields"]
			[value "eTradeId" path "PartyWorkflowFields"]
			[value "designatedParty" path "PartyWorkflowFields"]
			[value "brokerName" path "PartyWorkflowFields"]
			[value "branchLocation" path "PartyWorkflowFields"]
			[value "midMarketPriceType" path "PartyWorkflowFields->midMarketPrice"]
			[value "amount" path "PartyWorkflowFields->midMarketPrice"]

	WorkflowStep:
		+ messageInformation
			[value "FpML" path "Body->OTC_Matching->Trade"]
			[value "FpML" path "Body->OTC_Matching->Payment"]
			[value "RouteInfo" path "Header->OTC_RM->Delivery"]
			[value "Manifest" path "Header->OTC_RM"]
		+ timestamp
			[value "header" path "Body->OTC_Matching->Trade->FpML"]
			[value "Route" path "Header->OTC_RM->Delivery->RouteHist"]
			[value "header" path "Body->OTC_Matching->Payment->FpML"]
		+ eventIdentifier
			[value "Submitter" path "Header->OTC_RM->Manifest->TradeMsg"]
			[value "ContraTradeId" path "Header->OTC_RM->Manifest->TradeMsg"]
			[value "YourTradeId" path "Header->OTC_RM->Manifest->TradeMsg"]
			[value "tradeIdentifyingItems" path "Header->OTC_RM->Manifest->TradeMsg"]
		+ action
			[value "Activity" path "Header->OTC_RM->Manifest->TradeMsg"]
		+ party
			[value "party" path "Body->OTC_Matching->Trade->FpML" ]
			[value "party" path "Body->OTC_Matching->Payment->FpML" ]

	EventTimestamp:
		+ dateTime
			[value "creationTimestamp"]
			[value "expiryTimestamp"]
			[value "ReceiveTime"]
		+ qualification
			[set to EventTimestampQualificationEnum -> eventCreationDateTime when "creationTimestamp" exists]
			[set to EventTimestampQualificationEnum -> eventExpirationDateTime when "expiryTimestamp" exists]
			[set to EventTimestampQualificationEnum -> eventSubmittedDateTime when "ReceiveTime" exists]

	MessageInformation:
		+ messageId
			[value "messageId" path "header" meta "messageIdScheme"]
		+ sentBy
			[value "From"]
		+ sentTo
			[value "To"]

	PartyCustomisedWorkflow:
		+ partyReference
			[value "partyReference" meta "href"]

	Trade:
		+ contract
			[value "FpML" path "Trade"]
			[value "TradeMsg" path "Manifest"]
			[value "ReportingJurisdiction" path "ReportingData->ReportingHeader"]

	TradeWarehouseWorkflow:
		+ warehouseIdentity
			[value "WarehousePositionType" path "WarehouseState"]
		+ warehouseStatus
			[value "WarehouseStatus" path "WarehouseState"]
		+ partyCustomisedWorkflow
			[value "WorkflowData"]

	TransferBase:
		+ identifier
			[value "identifier" meta "paymentIdScheme"]
		+ transferCalculation
			[value "calculationDetails"]

	TransferCalculation:
		+ period
			[value "calculationPeriod" path "calculationElements"]
		
	enums

	ActionEnum:
		+ New
			[value "New"]
		+ Correct
			[value "Modify"]
		+ Cancel
			[value "Disable"]

	TransferSettlementEnum:
		+ PaymentVersusPayment
			[value "CentralSettlement"]
		+ NotCentralSettlement
			[value "NotCentralSettlement"]

	WarehouseIdentityEnum:
		+ DTCC_TIW_Gold
			[value "Gold"]

	WorkflowStatusEnum:
		+ Alleged
			[value "Alleged"]
		+ Certain
			[value "Certain"]
		+ Submitted
			[value "Submit"]
		+ Uncertain
			[value "Uncertain"]
		+ Unconfirmed
			[value "Unconfirmed"]
}



import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.asset.common.*
import cdm.synonyms.config.*

type ActualPrice:
	[synonym FpML_5_10 value "ActualPrice"]
	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "currency" meta "currencyScheme"]
	amount number (1..1)
		[synonym FpML_5_10 value "amount"]
	priceExpression PriceExpressionEnum (1..1) 
		[synonym FpML_5_10 value "priceExpression"]
	condition Currency: 
		if priceExpression = PriceExpressionEnum -> PercentageOfNotional
		then currency is absent

type CommoditySet:
	// TODO Never referenced in CDM
	commodity Commodity (1..1)
	quantity number (1..1)
	unit UnitEnum (1..1) 
		[synonym Workflow_Event value "unit"]
	timeUnit TimeUnitEnum (0..1)

type ConstituentWeight: 
	[synonym FpML_5_10 value "ConstituentWeight"]
	openUnits number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "openUnits"]
	basketPercentage number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "basketPercentage"]
	condition BasketPercentage: 
		if basketPercentage exists
		then basketPercentage >= 0.0 and basketPercentage <= 1.0

type DividendPayout: 
	[synonym FpML_5_10 value "DividendPayout"]
	dividendPayoutRatio number (1..1) 
		[synonym FpML_5_10 value "dividendPayoutRatio"]
	dividendPayoutRatioCash number (0..1) 
		[synonym FpML_5_10 value "dividendPayoutRatioCash"]
	dividendPayoutRatioNonCash number (0..1) 
		[synonym FpML_5_10 value "dividendPayoutRatioNonCash"]
	/*
	 * The FpML dividendPayoutConditions specified as a string has not be incorporated at this time, as such string approach is deemed not
	 * effective.  We should confirm whether it is effectively used and, if yes, how it is used.
	 * The FpML dividendPayment has also not been incorporated, as it seem strange to represent the next dividend payment as part of the contractual
	 * terms.  Here also, let's confirm usage.
	 */
	condition DividendPayoutRatio: 
		if dividendPayoutRatio exists
		then dividendPayoutRatio >= 0
			and dividendPayoutRatio <= 1

	condition DividendPayoutRatioCash: 
		if dividendPayoutRatioCash exists
		then dividendPayoutRatioCash >= 0
			and dividendPayoutRatio <= 1

	condition DividendPayoutRatioNonCash: 
		if dividendPayoutRatioNonCash exists
		then dividendPayoutRatioNonCash >= 0
			and dividendPayoutRatio <= 1


type Underlier: 
	[synonym FpML_5_10 value "Underlyer"]

	underlyingProduct Product (1..1) 


import cdm.base.*
import cdm.synonyms.config.*
 
type Quantity: 

	amount number (1..1) 
		[synonym FpML_5_10, Workflow_Event, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "amount"]
		[synonym FpML_5_10 value "openUnits"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" maps 2]
	unit UnitEnum (0..1) 
		[synonym Workflow_Event value "unit"]


type NonNegativeQuantitySchedule: 

	initialQuantity NonNegativeQuantity (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalStepSchedule" set when "notionalStepSchedule->step" exists]
	stepSchedule NonNegativeStepSchedule (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalStepSchedule"]
	

type NonNegativeQuantity extends Quantity: 

	condition NonNegativeQuantity_amount: 
		if NonNegativeQuantity exists then amount >= 0.0


type NonNegativeStepSchedule: 

	step NonNegativeStep (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "step"]


type NonNegativeStep: 
	[metadata key]

	stepDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stepDate"]
	stepValue number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stepValue"]

	condition StepValue: 
		if NonNegativeStep exists
		then stepValue >= 0.0

type Rounding: 
	[synonym FpML_5_10 value "Rounding"]

	roundingDirection RoundingDirectionEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "roundingDirection"]
	precision int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "precision"]


type Schedule: 

	initialValue number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" set when "step" exists]
	step Step (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "step"]


type Step: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Step" meta "id"]

	stepDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stepDate"]
	stepValue number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stepValue"]

type QuantityGroups:
	quantityGroups QuantityGroup(0..*)

type QuantityGroup:
	currency string(0..1)
	amount number(0..*)


  


import cdm.base.*
import cdm.synonyms.config.*

enum EntityTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityTypeScheme_1_0"]
	Asian 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Asian"]
	AustralianAndNewZealand	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AustralianAndNewZealand"]
	EuropeanEmergingMarkets	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanEmergingMarket"]
	Japanese	 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Japanese"]
	NorthAmericanHighYield	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NorthAmericanHighYield"]
	NorthAmericanInsurance	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NorthAmericanInsurance"]
	NorthAmericanInvestmentGrade	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NorthAmericanInvestmentGrade"]
	Singaporean	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Singaporean"]
	WesternEuropean	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WesternEuropean"]
	WesternEuropeanInsurance	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WesternEuropeanInsurance"]


enum PayerReceiverEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PayerReceiverEnum"]
	Payer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Payer"]
	Receiver 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Receiver"]

enum AccountTypeEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accountTypeScheme_1_1"]
	AggregateClient 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AggregateClient"]
	Client 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Client"]
	House 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "House"]

enum NaturalPersonRoleEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "personRoleScheme_1_2"]
	Broker 
		[synonym FpML_5_10 , CME_SubmissionIRS_1_0 , CME_ClearedConfirm_1_17 value "Broker"]
	Buyer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Buyer"]
	DecisionMaker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DecisionMaker"]
	ExecutionWithinFirm 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExecutionWithinFirm"]
	InvestmentDecisionMaker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "InvestmentDecisionMaker"]
	Seller 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Seller"]
	Trader 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Trader"]


enum PartyIdSourceEnum: 

// TODO Never referenced in CDM
	BIC 
	LEI 
		[synonym Workflow_Event value "LEI"]
	ARNU 
		[synonym ISO20022 value "ARNU"]
	CCPT 
		[synonym ISO20022 value "CCPT"]
	CUST 
		[synonym ISO20022 value "CUST"]
	DRLC 
		[synonym ISO20022 value "DRLC"]
	EMPL 
		[synonym ISO20022 value "EMPL"]
	NIDN 
		[synonym ISO20022 value "NIDN"]
	SOSE 
		[synonym ISO20022 value "SOSE"]
	TXID 
		[synonym ISO20022 value "TXID"]


enum PartyRoleEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyRoleScheme_3_8"]
	Accountant 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Accountant"]
	AllocationAgent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AllocationAgent"]
	ArrangingBroker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ArrangingBroker"]
	BarrierDeterminationAgent 
	Beneficiary 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Beneficiary"]
	BookingParty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BookingParty"]
	Buyer 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Buyer"]
	BuyerDecisionMaker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BuyerDecisionMaker"]
	Chargor 
	ClearingClient 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ClearingClient"]
	ClearingExceptionParty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ClearingExceptionParty"]
	ClearingFirm 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ClearingFirm"]
	ClearingOrganization 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ClearingOrganization"]
	Client 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Client"]
	ClientDecisionMaker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ClientDecisionMaker"]
	ConfirmationPlatform 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ConfirmationPlatform"]
	ContractualParty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ContractualParty"]
	CounterPartyAffiliate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CounterPartyAffiliate"]
	CounterPartyUltimateParent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CounterPartyUltimateParent"]
	Counterparty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Counterparty"]
	CreditSupportProvider 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CreditSupportProvider"]
	Custodian 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Custodian"]
	DataSubmitter 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DataSubmitter"]
		[synonym CME_ClearedConfirm_1_17 value "InputSource"]
	DeterminingParty 
	DisputingParty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DisputingParty"]
	DocumentRepository 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DocumentRepository"]
	ExecutingBroker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExecutingBroker"]
	ExecutingEntity 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExecutingEntity"]
	ExecutionAgent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExecutionAgent"]
	ExecutionFacility 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExecutionFacility"]
	Guarantor 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Guarantor"]
	HedgingParty 
	OrderTransmitter 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OrderTransmitter"]
	Pledgor 
	PrimeBroker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PrimeBroker"]
	PriorTradeRepository 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PriorTradeRepository"]
	PublicationVenue 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PublicationVenue"]
	ReportingParty 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ReportingParty"]
	ReportingPartyAffiliate 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ReportingPartyAffiliate"]
	ReportingPartyUltimateParent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ReportingPartyUltimateParent"]
	Seller 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Seller"]
	SellerDecisionMaker 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SellerDecisionMaker"]
	SecuredParty 
	SettlementAgent 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SettlementAgent"]
	TradeRepository 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TradeRepository"]
	TradeSource 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TradeSource"]
	TradingManager 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TradingManager"]
	TradingPartner 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TradingPartner"]

enum TelephoneTypeEnum: 
	[synonym FpML_5_10 value "TelephoneTypeEnum"]
	Work 
		[synonym FpML_5_10 value "Work"]
	Mobile 
		[synonym FpML_5_10 value "Mobile"]
	Fax 
		[synonym FpML_5_10 value "Fax"]
	Personal 
		[synonym FpML_5_10 value "Personal"]


 

import cdm.base.*
import cdm.base.datetime.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

/*
 * FpML ird validation rules perceived as needing extensions to the data rule syntax or calls to java functions:
 * http://www.fpml.org/spec/fpml-5-9-7-rec-2/html/confirmation/index.html
 * Total number of rules = 50, 35 implemented -> 70%
 * ird-2, ird-5, ird-36 -> x is is equal to an integer multiple of y
 * ird-3, ird-4 -> a date is equal to one of an array of dates
 * ird-10, ird-11 -> min operator among a set of dates + need further levels of evaluation
 * ird-12 -> calendar evaluation
 * ird-43 -> states that at least one attribute among 4 must exist, which is quite involved to state with current grammar (15 combinations)
 * ird-47 -> the rule suggest to have a dateRelativeTo which is equal to an Id associated with the type of option exercise, which contains a set of dates (and other attributes)
 * ird-50, ird-51, ird-52, ird-53, ird-54 -> vagueness as to how to ensure that the dates in the notionalStepSchedule, the fixedRateSchedule, etc. are unadjusted in the schedule implied by the calculationPeriodDates
 */
type BondReference: 
	[synonym FpML_5_10 value "BondReference"]

	bond ProductIdentifier (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bond"]
	conditionPrecedentBond boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "conditionPrecedentBond"]
	discrepancyClause boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discrepancyClause"]


type CalculationPeriodBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	adjustedStartDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedStartDate"]
	adjustedEndDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedEndDate"]


type CalculationPeriod extends CalculationPeriodBase: 
	[synonym FpML_5_10 value "CalculationPeriod"]

	unadjustedStartDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedStartDate"]
	unadjustedEndDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedEndDate"]
	calculationPeriodNumberOfDays int (0..1 ) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodNumberOfDays"]
	notionalAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalAmount"]
	fxLinkedNotionalAmount FxLinkedNotionalAmount (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxLinkedNotionalAmount"]
	floatingRateDefinition FloatingRateDefinition (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateDefinition"]
	fixedRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedRate"]
	dayCountYearFraction number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayCountYearFraction"]
	forecastAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "forecastAmount"]
	forecastRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "forecastRate"]

	condition NotionalChoice: 
		required choice notionalAmount, fxLinkedNotionalAmount

	condition RateChoice: 
		required choice floatingRateDefinition, fixedRate

	condition StartDateChoice: 
		required choice adjustedStartDate, unadjustedStartDate

	condition EndDateChoice: 
		required choice adjustedEndDate, unadjustedEndDate

type CalculationPeriodDates: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id" path "calculationPeriodDates"]
	[synonym FpML_5_10 meta "id" path "interestLegCalculationPeriodDates"]

	effectiveDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "effectiveDate" set when "effectiveDate->relativeDate" exists]
		// TODO - The above mapping logic doesn't handle the case of an equity swap payout with an effective date specified as an adjustable date, such as in the eqs-ex01-single-underlyer-execution-long-form.xml
		// This use case should be tackled as part of this Trello card https://trello.com/c/tGA9hPQi
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "effectiveDate" path "calculationPeriodDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeEffectiveDate" path "calculationPeriodDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "adjustedEffectiveDate"]
		[synonym FpML_5_10 value "effectiveDate" path "interestLegCalculationPeriodDates"]
		[synonym FpML_5_10 value "settlementDate" path "nearLeg"]
	terminationDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "terminationDate" path "calculationPeriodDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeTerminationDate" path "calculationPeriodDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "adjustedTerminationDate"]
		[synonym FpML_5_10 value "terminationDate" path "interestLegCalculationPeriodDates", "terminationDate"]
		[synonym FpML_5_10 value "settlementDate" path "farLeg"]
	calculationPeriodDatesAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodDatesAdjustments" path "calculationPeriodDates"]
		[synonym FpML_5_10 value "calculationPeriodDatesAdjustments" path "interestLegCalculationPeriodDates->interestLegPaymentDates->periodicDates"]
	firstPeriodStartDate AdjustableDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "firstPeriodStartDate" path "calculationPeriodDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodicPayment"]
		[synonym FpML_5_10 value "calculationStartDate" path "interestLegCalculationPeriodDates->interestLegPaymentDates->periodicDates"]
	firstRegularPeriodStartDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "firstRegularPeriodStartDate" path "calculationPeriodDates"]
	firstCompoundingPeriodEndDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "firstCompoundingPeriodEndDate" path "calculationPeriodDates"]
	lastRegularPeriodEndDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "lastRegularPeriodEndDate" path "calculationPeriodDates"]
	stubPeriodType StubPeriodTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stubPeriodType" path "calculationPeriodDates"]
	calculationPeriodFrequency CalculationPeriodFrequency (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodFrequency" path "calculationPeriodDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodicPayment"]
		[synonym FpML_5_10 value "calculationPeriodFrequency" path "interestLegCalculationPeriodDates->interestLegPaymentDates->periodicDates"]

	condition FpML_ird_16: 
		if firstRegularPeriodStartDate exists
		then terminationDate -> adjustableDate -> unadjustedDate > firstRegularPeriodStartDate

	condition FpML_ird_17: 
		if lastRegularPeriodEndDate exists
		then terminationDate -> adjustableDate -> unadjustedDate > lastRegularPeriodEndDate

	condition FpML_ird_18: 
		if firstRegularPeriodStartDate exists
			and lastRegularPeriodEndDate exists
		then lastRegularPeriodEndDate > firstRegularPeriodStartDate

	condition FpML_ird_20: 
		if lastRegularPeriodEndDate exists
		then lastRegularPeriodEndDate > effectiveDate -> adjustableDate -> unadjustedDate

	condition FpML_ird_21: 
		if firstPeriodStartDate exists
			and effectiveDate exists
		then firstPeriodStartDate -> unadjustedDate < effectiveDate -> adjustableDate -> unadjustedDate

	condition FpML_ird_22: 
		if firstPeriodStartDate exists
			and firstRegularPeriodStartDate exists
		then firstPeriodStartDate -> unadjustedDate < firstRegularPeriodStartDate

type CancelableProvision extends BuyerSeller: 
	[synonym FpML_5_10 value "CancelableProvision"]

	americanExercise AmericanExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "americanExercise"]
	bermudaExercise BermudaExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bermudaExercise"]
	europeanExercise EuropeanExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "europeanExercise"]
	exerciseNotice ExerciseNotice (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseNotice"]
	followUpConfirmation boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "followUpConfirmation"]
	cancelableProvisionAdjustedDates CancelableProvisionAdjustedDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cancelableProvisionAdjustedDates"]
	finalCalculationPeriodDateAdjustment FinalCalculationPeriodDateAdjustment (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "finalCalculationPeriodDateAdjustment"]
	initialFee SimplePayment (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialFee"]
	callingParty CallingPartyEnum (0..1)
		[synonym FpML_5_10 value "callingParty"]
	

	condition ExerciseChoice: 
		required choice americanExercise, bermudaExercise, europeanExercise

type CancelableProvisionAdjustedDates: 
	[synonym FpML_5_10 value "CancelableProvisionAdjustedDates"]

	cancellationEvent CancellationEvent (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cancellationEvent"]


type CancellationEvent: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	adjustedExerciseDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedExerciseDate"]
	adjustedEarlyTerminationDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedEarlyTerminationDate"]


type CashflowRepresentation: 
	[synonym FpML_5_10 value "Cashflows"]

	cashflowsMatchParameters boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashflowsMatchParameters"]
	principalExchange PrincipalExchange (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "principalExchange"]
	paymentCalculationPeriod PaymentCalculationPeriod (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentCalculationPeriod"]


type CashPriceMethod: 
	[synonym FpML_5_10 value "businessDateRange"]

	cashSettlementReferenceBanks CashSettlementReferenceBanks (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementReferenceBanks"]
	cashSettlementCurrency string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementCurrency" meta "currencyScheme"]
	quotationRateType QuotationRateTypeEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quotationRateType"]


type CashSettlementPaymentDate: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	adjustableDates AdjustableDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustableDates"]
	relativeDate RelativeDateOffset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDate"]
	businessDateRange BusinessDateRange (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDateRange"]

	condition DateChoice: 
		required choice adjustableDates, relativeDate, businessDateRange

type CrossCurrencyMethod: 
	[synonym FpML_5_10 value "CrossCurrencyMethod"]

	cashSettlementReferenceBanks CashSettlementReferenceBanks (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementReferenceBanks"]
	cashSettlementCurrency string (1..2) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementCurrency" meta "currencyScheme"]
	quotationRateType QuotationRateTypeEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quotationRateType"]


type DateRelativeToCalculationPeriodDates: 
	[synonym FpML_5_10 value "DateRelativeToCalculationPeriodDates"]

	calculationPeriodDatesReference CalculationPeriodDates (1..*) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodDatesReference" meta "href"]


type DateRelativeToPaymentDates: 
	[synonym FpML_5_10 value "DateRelativeToPaymentDates"]

	paymentDatesReference PaymentDates (1..*) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDatesReference" meta "href"]


type DiscountingMethod: 
	[synonym FpML_5_10 value "Discounting"]

	discountingType DiscountingTypeEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discountingType"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fraDiscounting" set when "fraDiscounting" <> "NONE"]
	discountRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discountRate"]
	discountRateDayCountFraction DayCountFractionEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discountRateDayCountFraction" meta "dayCountFractionScheme"]

	condition DiscountRate: 
		if discountRateDayCountFraction exists
		then discountRate exists

type EarlyTerminationEvent: 
	[metadata key]
	[synonym FpML_5_10 value "EarlyTerminationEvent"]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	adjustedExerciseDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedExerciseDate"]
	adjustedEarlyTerminationDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedEarlyTerminationDate"]
	adjustedCashSettlementValuationDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedCashSettlementValuationDate"]
	adjustedCashSettlementPaymentDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedCashSettlementPaymentDate"]
	adjustedExerciseFeePaymentDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedExerciseFeePaymentDate"]

	condition FpML_ird_39: 
		if EarlyTerminationEvent exists
		then adjustedExerciseDate <= adjustedEarlyTerminationDate

	condition FpML_ird_40: 
		if EarlyTerminationEvent exists
		then adjustedExerciseDate <= adjustedCashSettlementValuationDate

	condition FpML_ird_41: 
		if EarlyTerminationEvent exists
		then adjustedCashSettlementValuationDate <= adjustedCashSettlementPaymentDate

type EarlyTerminationProvision: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	mandatoryEarlyTermination MandatoryEarlyTermination (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mandatoryEarlyProvision"]
	mandatoryEarlyTerminationDateTenor Period (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mandatoryEarlyTerminationDateTenor"]
	optionalEarlyTermination OptionalEarlyTermination (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "optionalEarlyTermination"]
	optionalEarlyTerminationParameters ExercisePeriod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "optionalEarlyTerminationParameters"]
	condition MandatoryEarlyTermination: 
		if EarlyTerminationProvision exists
		then ( mandatoryEarlyTermination or optionalEarlyTermination) exists
			or ( mandatoryEarlyTermination and optionalEarlyTermination) exists

type ExerciseEvent: 
	[metadata key]
	// TODO Never referenced in CDM
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	adjustedExerciseDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedExerciseDate"]
	adjustedRelevantSwapEffectiveDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedRelevantSwapEffectiveDate"]
	adjustedCashSettlementValuationDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedCashSettlementValuationDate"]
	adjustedCashSettlementPaymentDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedCashSettlementPaymentDate"]
	adjustedExerciseFeePaymentDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedExerciseFeePaymentDate"]


type ExercisePeriod: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExercisePeriod" meta "id"]

	earliestExerciseDateTenor Period (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "earliestExerciseDateTenor"]
	exerciseFrequency Period (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseFrequency"]


type ExtendibleProvision extends BuyerSeller: 
	[synonym FpML_5_10 value "ExtendibleProvision"]

	americanExercise AmericanExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "americanExercise"]
	bermudaExercise BermudaExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bermudaExercise"]
	europeanExercise EuropeanExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "europeanExercise"]
	exerciseNotice ExerciseNotice (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseNotice"]
	followUpConfirmation boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "followUpConfirmation"]
	extendibleProvisionAdjustedDates ExtendibleProvisionAdjustedDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "extendibleProvisionAdjustedDates"]
	callingParty CallingPartyEnum (0..1)
		[synonym FpML_5_10 value "callingParty"]
		
	condition ExerciseChoice: 
		required choice americanExercise, bermudaExercise, europeanExercise

type ExtendibleProvisionAdjustedDates: 
	[synonym FpML_5_10 value "ExtendibleProvisionAdjustedDates"]

	extensionEvent ExtensionEvent (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "extensionEvent"]


type ExtensionEvent: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ExtensionEvent" meta "id"]

	adjustedExerciseDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedExerciseDate"]
	adjustedExtendedTerminationDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedExtendedTerminationDate"]

	condition FpML_ird_42: 
		if ExtensionEvent exists
		then adjustedExerciseDate < adjustedExtendedTerminationDate

type FallbackReferencePrice: 
	[synonym FpML_5_10 value "FallbackReferencePrice"]

	valuationPostponement ValuationPostponement (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "valuationPostponement"]
	fallBackSettlementRateOption SettlementRateOptionEnum (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fallBackSettlementRateOption" meta "settlementRateOptionScheme"]
	fallbackSurveyValuationPostponement boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 set to True]
	calculationAgentDetermination CalculationAgent (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgentDetermination"]
	condition MaximumDaysOfPostponement: 
		if valuationPostponement exists
		then valuationPostponement -> maximumDaysOfPostponement > 0

type FinalCalculationPeriodDateAdjustment: 
	[synonym FpML_5_10 value "FinalCalculationPeriodDateAdjustment"]

	relevantUnderlyingDateReference AdjustableOrRelativeDates (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relevantUnderlyingDateReference" meta "href"]
	swapStreamReference InterestRatePayout (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "swapStreamReference" meta "href"]
	businessDayConvention BusinessDayConventionEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDayConvention"]


type FloatingRateDefinition: 
	[synonym FpML_5_10 value "FloatingRateDefinition"]

	calculatedRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculatedRate"]
	rateObservation RateObservation (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateObservation"]
	floatingRateMultiplier number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateMultiplier"]
	spread number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "spread"]
	capRate Strike (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "capRate"]
	floorRate Strike (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floorRate"]

	condition FloatingRateMultiplier: 
		if floatingRateMultiplier exists
		then floatingRateMultiplier <> 1


type FxFixingDate extends Offset: 
	[synonym FpML_5_10 value "FxFixingDate"]

	businessDayConvention BusinessDayConventionEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDayConvention"]
	businessCenters BusinessCenters (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenters"]
	businessCentersReference BusinessCenters (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCentersReference" meta "href"]
	dateRelativeToPaymentDates DateRelativeToPaymentDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateRelativeToPaymentDates"]
	dateRelativeToCalculationPeriodDates DateRelativeToCalculationPeriodDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateRelativeToCalculationPeriodDates"]

	condition BusinessCentersChoice: 
		optional choice businessCenters, businessCentersReference

	condition DateRelativeChoice: 
		required choice dateRelativeToPaymentDates, dateRelativeToCalculationPeriodDates


type FxLinkedNotionalAmount: 
	[synonym FpML_5_10 value "FxLinkedNotionalAmount"]

	resetDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resetDate"]
	adjustedFxSpotFixingDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedFxSpotFixingDate"]
	observedFxSpotRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "observedFxSpotRate"]
	notionalAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalAmount"]


type FxLinkedNotionalSchedule: 
	[synonym FpML_5_10 value "FxLinkedNotionalSchedule" path "fxLinkedNotionalSchedule"]

	initialValue number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue"]
	varyingNotionalCurrency string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "varyingNotionalCurrency" meta "currencyScheme"]
	varyingNotionalFixingDates RelativeDateOffset (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "varyingNotionalFixingDates"]
	fxSpotRateSource FxSpotRateSource (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxSpotRateSource"]
	varyingNotionalInterimExchangePaymentDates RelativeDateOffset (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "varyingNotionalInterimExchangePaymentDates"]


type InflationRateSpecification extends FloatingRateSpecification: 
	[synonym FpML_5_10 value "InflationRateCalculation"]
	[synonym ISO20022 value "InfltnIndx"]

	inflationLag Offset (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "inflationLag"]
	indexSource string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexSource" meta "rateSourcePageScheme"]
	mainPublication string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mainPublication" meta "mainPublicationScheme"]
	interpolationMethod InterpolationMethodEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "interpolationMethod" meta "interpolationMethodScheme"]
	initialIndexLevel number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialIndexLevel"]
	fallbackBondApplicable boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fallbackBondApplicable"]

	condition RateOptionAssetIdentifier: 
		assetIdentifier -> rateOption only exists


type FixedInterestRate: 

	rate number (1..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" maps 2]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedRate"]


type FloatingInterestRate: 

	initialRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialRate" maps 2]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialRate" path "floatingRate" maps 2]
	spread number (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" path "spreadSchedule" maps 2]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" path "floatingRate->spreadSchedule" maps 2]
	capRate number (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" path "capRateSchedule" maps 2]
	floorRate number (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" path "floorRateSchedule" maps 2]
	multiplier number (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialValue" path "floatingRateMultiplierSchedule" maps 2]

	condition AtLeastOneOf:
		( initialRate or spread or capRate or floorRate ) exists

	condition FloatingRateMultiplierSchedule: 
		if multiplier exists
		then multiplier <> 1.0


type MandatoryEarlyTermination: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MandatoryEarlyTermination" meta "id"]

	mandatoryEarlyTerminationDate AdjustableDate (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mandatoryEarlyTerminationDate"]
	calculationAgent CalculationAgent (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgent"]
	cashSettlement OptionCashSettlement (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlement"]
	mandatoryEarlyTerminationAdjustedDates MandatoryEarlyTerminationAdjustedDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mandatoryEarlyTerminationAdjustedDates"]

	condition FpML_ird_27: 
		if cashSettlement exists
		then cashSettlement -> cashSettlementPaymentDate is absent

type MandatoryEarlyTerminationAdjustedDates: 
	[synonym FpML_5_10 value "MandatoryEarlyTerminationAdjustedDates"]

	adjustedEarlyTerminationDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedEarlyTerminationDate"]
	adjustedCashSettlementValuationDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedCashSettlementValuationDate"]
	adjustedCashSettlementPaymentDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedCashSettlementPaymentDate"]

	condition FpML_ird_44: 
		if MandatoryEarlyTerminationAdjustedDates exists
		then adjustedEarlyTerminationDate <= adjustedCashSettlementValuationDate
			and adjustedCashSettlementValuationDate <= adjustedCashSettlementPaymentDate

type NonDeliverableSettlement: 
	[synonym FpML_5_10 value "NonDeliverableSettlement"]

	referenceCurrency string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceCurrency" meta "currencyScheme"]
	fxFixingDate FxFixingDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxFixingDate"]
	fxFixingSchedule AdjustableDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxFixingSchedule"]
	settlementRateOption SettlementRateOptionEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementRateOption" meta "settlementRateOptionScheme"]
	priceSourceDisruption PriceSourceDisruption (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "priceSourceDisruption"]

	condition FixingDateSchedule: 
		required choice fxFixingDate, fxFixingSchedule

type OptionalEarlyTermination: 
	[synonym FpML_5_10 value "OptionalEarlyTermination"]

	singlePartyOption BuyerSeller (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "singlePartyOption"]
	americanExercise AmericanExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "americanExercise"]
	bermudaExercise BermudaExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bermudaExercise"]
	europeanExercise EuropeanExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "europeanExercise"]
	exerciseNotice ExerciseNotice (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseNotice"]
	followUpConfirmation boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "followUpConfirmation"]
	calculationAgent CalculationAgent (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgent"]
	cashSettlement OptionCashSettlement (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlement"]
	optionalEarlyTerminationAdjustedDates OptionalEarlyTerminationAdjustedDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "optionalEarlyTerminationAdjustedDates"]

	condition ExerciseChoice: 
		required choice americanExercise, bermudaExercise, europeanExercise

type OptionalEarlyTerminationAdjustedDates: 
	[synonym FpML_5_10 value "OptionalEarlyTerminationAdjustedDates"]

	earlyTerminationEvent EarlyTerminationEvent (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "earlyTerminationEvent"]


type OptionCashSettlement: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CashSettlement" meta "id"]

	cashSettlementValuationTime BusinessCenterTime (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementValuationTime"]
	cashSettlementValuationDate RelativeDateOffset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementValuationDate"]
	cashSettlementPaymentDate CashSettlementPaymentDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementPaymentDate"]
	cashPriceMethod CashPriceMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashPriceMethod"]
	cashPriceAlternateMethod CashPriceMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashPriceAlternateMethod"]
	parYieldCurveAdjustedMethod YieldCurveMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "parYieldCurveAdjustedMethod"]
	zeroCouponYieldAdjustedMethod YieldCurveMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "zeroCouponYieldAdjustedMethod"]
	parYieldCurveUnadjustedMethod YieldCurveMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "parYieldCurveUnadjustedMethod"]
	crossCurrencyMethod CrossCurrencyMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "crossCurrencyMethod"]
	collateralizedCashPriceMethod YieldCurveMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "collateralizedCashPriceMethod"]

	condition MethodChoice: 
		optional choice cashPriceMethod, cashPriceAlternateMethod, parYieldCurveAdjustedMethod, zeroCouponYieldAdjustedMethod
	, parYieldCurveUnadjustedMethod, crossCurrencyMethod, collateralizedCashPriceMethod

type PaymentCalculationPeriod: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PaymentCalculationPeriod" meta "id"]

	unadjustedPaymentDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedPaymentDate"]
	adjustedPaymentDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedPaymentDate"]
	calculationPeriod CalculationPeriod (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriod"]
	fixedPaymentAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedPaymentAmount"]
	discountFactor number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discountFactor"]
	forecastPaymentAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "forecastPaymentAmount"]
	presentValueAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "presentValueAmount"]
	condition CalculationPeriodNumberOfDays: 
		if calculationPeriod -> calculationPeriodNumberOfDays exists
		then calculationPeriod -> calculationPeriodNumberOfDays >= 0

	condition Choice: 
		required choice calculationPeriod, fixedPaymentAmount

	condition FpML_ird_34: 
		if PaymentCalculationPeriod exists
		then unadjustedPaymentDate exists
			or adjustedPaymentDate exists

type PriceSourceDisruption: 
	[synonym FpML_5_10 value "PriceSourceDisruption"]

	fallbackReferencePrice FallbackReferencePrice (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fallbackReferencePrice"]


type PrincipalExchange: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PrincipalExchange" meta "id"]

	unadjustedPrincipalExchangeDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedPrincipalExchangeDate"]
	adjustedPrincipalExchangeDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedPrincipalExchangeDate"]
	principalExchangeAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "principalExchangeAmount"]
	discountFactor number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discountFactor"]
	presentValuePrincipalExchangeAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "presentValuePrincipalExchangeAmount"]


type ResetDates: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ResetDates" meta "id" path "resetDates"]

	calculationPeriodDatesReference CalculationPeriodDates (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodDatesReference" path "resetDates" meta "href"]
		[synonym FpML_5_10 value "calculationPeriodDatesReference" path "interestLegCalculationPeriodDates->interestLegResetDates" meta "href"]
	resetRelativeTo ResetRelativeToEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resetRelativeTo" path "resetDates"]
		[synonym FpML_5_10 value "resetRelativeTo" path "interestLegCalculationPeriodDates->interestLegResetDates"]
	initialFixingDate InitialFixingDate (0..1) 
	fixingDates RelativeDateOffset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixingDates" path "resetDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixingDateOffset"]
	finalFixingDate AdjustableDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "finalFixingDate" path "periodicPayment->floatingAmountCalculation"]
	rateCutOffDaysOffset Offset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resetCutOffDaysOffset" path "resetDates"]
	resetFrequency ResetFrequency (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resetFrequency" path "resetDates", "resetFrequency" path "interestLegCalculationPeriodDates->interestLegResetDates"]
	resetDatesAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resetDatesAdjustments" path "resetDates"]

	condition RateCutOffDaysOffset: 
		if rateCutOffDaysOffset exists
		then rateCutOffDaysOffset -> periodMultiplier < 0

	condition WeeklyPeriod: 
		if resetFrequency -> period = PeriodExtendedEnum -> W
		then resetFrequency -> weeklyRollConvention exists

	condition NonWeeklyPeriod: 
		if resetFrequency -> period <> PeriodExtendedEnum -> W
		then resetFrequency -> weeklyRollConvention is absent

type SettlementProvision: 
	[synonym FpML_5_10 value "SettlementProvision"]

	settlementCurrency string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementCurrency" meta "currencyScheme"]
	nonDeliverableSettlement NonDeliverableSettlement (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "nonDeliverableSettlement"]


type StubCalculationPeriodAmount: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10 value "StubCalculationPeriodAmount"]

	calculationPeriodDatesReference CalculationPeriodDates (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodDatesReference" meta "href"]
	initialStub StubValue (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialStub"]
	finalStub StubValue (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "finalStub"]


type ValuationPostponement: 
	[synonym FpML_5_10 value "ValuationPostponement"]

	maximumDaysOfPostponement int (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "maximumDaysOfPostponement"]


type YieldCurveMethod: 
	[synonym FpML_5_10 value "YieldCurveMethod"]

	settlementRateSource SettlementRateSource (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementRateSource"]
	quotationRateType QuotationRateTypeEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quotationRateType"]



func Abs:
	inputs: x number (1..1)
	output: result number (1..1)

 		
// TODO: turn these functions into language level operators i.e. 'sum', 'abs', '<'
func Sum:
	inputs: x number (0..*)
	output: sum number (1..1)
		
//  FIXME create and use new Map built-i n type. See https://github.com/REGnosys/rosetta-dsl/issues/129
func ListsCompare:
	inputs:
		compareOp CompareOp(1..1)
		left number (1..*)
		right number(0..*)
		rightNumber number(0..1)
	output: result boolean (1..1)
	
func Max:
	inputs:
		a number (1..1)
		b number (1..1)
	output:
		max number (1..1)
	
	assign-output max:
		if a > b 
		then a 
		else b
		
func RoundToNearest:
	inputs:
		value number (1..1)
		nearest number (1..1)
		roundingMode RoundingModeEnum (1..1)

	output:
		roundedValue number (1..1)

	condition:
		nearest > 0

enum RoundingModeEnum:
	Down
	Up
	// TODO: add other rounding modes


			  

import cdm.base.*
import cdm.synonyms.config.*

enum ObligationCategoryEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ObligationCategoryEnum"]
	Payment 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Payment"]
	BorrowedMoney 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BorrowedMoney"]
	ReferenceObligationsOnly 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ReferenceObligationsOnly"]
	Bond 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Bond"]
	Loan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Loan"]
	BondOrLoan 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BondOrLoan"]

 

import cdm.base.*
import cdm.base.datetime.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type AdditionalDisruptionEvents: 
	[synonym FpML_5_10 value "AdditionalDisruptionEvents"]

	changeInLaw boolean (0..1) 
		[synonym FpML_5_10 value "changeInLaw"]
	failureToDeliver boolean (0..1) 
		[synonym FpML_5_10 value "failureToDeliver"]
	insolvencyFiling boolean (0..1) 
		[synonym FpML_5_10 value "insolvencyFiling"]
	hedgingDisruption boolean (0..1) 
		[synonym FpML_5_10 value "hedgingDisruption"]
	increasedCostOfHedging boolean (0..1) 
		[synonym FpML_5_10 value "increasedCostOfHedging"]
	foreignOwnershipEvent boolean (0..1) 
		[synonym FpML_5_10 value "foreignOwnershipEvent"]
	lossOfStockBorrow boolean (0..1) 
		[synonym FpML_5_10 value "lossOfStockBorrow"]
	maximumStockLoanRate number (0..1) 
		[synonym FpML_5_10 value "maximumStockLoanRate"]
	increasedCostOfStockBorrow boolean (0..1) 
		[synonym FpML_5_10 value "increasedCostOfStockBorrow"]
	initialStockLoanRate number (0..1) 
		[synonym FpML_5_10 value "initialStockLoanRate"]
	determiningPartyReference Party (0..1) 
		[metadata reference]
		[synonym FpML_5_10 value "determiningPartyReference" meta "href"]

	condition MaximumStockLoanRate: 
		if maximumStockLoanRate exists
		then maximumStockLoanRate >= 0
			and maximumStockLoanRate <= 1

	condition InitialStockLoanRate: 
		if initialStockLoanRate exists
		then AdditionalDisruptionEvents ->initialStockLoanRate >= 0
			and initialStockLoanRate <= 1

type DeterminationMethod: 

	// TODO Never referenced in CDM
	determinationMethod DeterminationMethodEnum (0..1) 
		[synonym FpML_5_10 value "determinationMethod"]


type DividendCurrency: 

	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "currency" meta "currencyScheme"]
	determinationMethod DeterminationMethodEnum (0..1) 
		[synonym FpML_5_10 value "determinationMethod"]
	currencyReference string (0..1) 
		[metadata reference]
		[synonym FpML_5_10 value "currencyReference" meta "href"]
	condition: one-of

type DividendDateReference: 

	dateReference DividendDateReferenceEnum (1..1) 
		[synonym FpML_5_10 value "dateReference"]
	paymentDateOffset Offset (0..1) 
		[synonym FpML_5_10 value "paymentDateOffset"]

	condition PaymentDateOffset: 
		if paymentDateOffset exists
		then dateReference = DividendDateReferenceEnum -> SharePayment

type DividendPaymentDate: 
	[synonym FpML_5_10 value "DividendPaymentDate"]

	dividendDateReference DividendDateReference (0..1)
		[synonym FpML_5_10 value "dividendDateReference"]
	adjustableDate AdjustableDate (0..1)
		[synonym FpML_5_10 value "adjustableDate"]
	condition: one-of

type DividendReturnTerms: 
	[synonym FpML_5_10 value "DividendConditions"]

	dividendPayout DividendPayout (0..1) 
		[synonym FpML_5_10 value "dividendPayout"]
	dividendReinvestment boolean (0..1) 
		[synonym FpML_5_10 value "dividendReinvestment"]
	dividendEntitlement DividendEntitlementEnum (0..1) 
		[synonym FpML_5_10 value "dividendEntitlement"]
	dividendAmountType DividendAmountTypeEnum (0..1) 
		[synonym FpML_5_10 value "dividendAmount"]
	dividendPaymentDate DividendPaymentDate (0..1) 
		[synonym FpML_5_10 value "dividendPaymentDate"]
	dividendPeriod DividendPeriodEnum (0..1) 
		[synonym FpML_5_10 value "dividendPeriod"]
	dividendPeriodEffectiveDate date (0..1) 
		[metadata reference]
		[synonym FpML_5_10 value "dividendPeriodEffectiveDate" meta "href"]
	dividendPeriodEndDate date (0..1) 
		[metadata reference]
		[synonym FpML_5_10 value "dividendPeriodEndDate" meta "href"]
	extraordinaryDividendsParty Party (0..1) 
		[metadata reference]
		[synonym FpML_5_10 value "extraOrdinaryDividends" meta "href"]
	excessDividendAmount DividendAmountTypeEnum (0..1) 
		[synonym FpML_5_10 value "excessDividendAmount"]
	dividendCurrency DividendCurrency (0..1) 

	/*
	 * More FpML provisions to be confirmed & specified
	 */
	condition DividendPeriod: 
		if dividendPeriod exists
		then dividendPeriodEffectiveDate is absent
			and dividendPeriodEndDate is absent

type EquityCorporateEvents: 
	[synonym FpML_5_10 value "EquityCorporateEvents"]

	shareForShare ShareExtraordinaryEventEnum (1..1) 
		[synonym FpML_5_10 value "shareForShare"]
	shareForOther ShareExtraordinaryEventEnum (1..1) 
		[synonym FpML_5_10 value "shareForOther"]
	shareForCombined ShareExtraordinaryEventEnum (1..1) 
		[synonym FpML_5_10 value "shareForCombined"]


type EquityValuation extends CashPrice: 
	[synonym FpML_5_10 value "EquityValuation"]

	determinationMethod DeterminationMethodEnum (1..1) 
		[synonym FpML_5_10 value "determinationMethod"]
	valuationDates AdjustableOrRelativeDates (0..1) 
		[synonym FpML_5_10 value "valuationDates" path "valuationRules"]
	valuationDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10 value "valuationDate" path "valuationRules"]
	valuationTime BusinessCenterTime (0..1) 
		[synonym FpML_5_10 value "valuationTime" path "valuationRules"]
	valuationTimeType TimeTypeEnum (0..1) 
		[synonym FpML_5_10 value "valuationTimeType" path "valuationRules"]

/*
 * The FpML construct has a a number of other attributes: dividend valuation dates, fall-back provision, ...
 * Also, FpML extends Price while the current CDM approach is just to share the determinationMethod.  To be confirmed as a function of the use cases.
 */
type ExtraordinaryEvents: 
	[synonym FpML_5_10 value "ExtraordinaryEvents"]

	mergerEvents EquityCorporateEvents (0..1) 
		[synonym FpML_5_10 value "mergerEvents"]
	tenderOfferEvents EquityCorporateEvents (0..1) 
		[synonym FpML_5_10 value "tenderOfferEvents"]
	compositionOfCombinedConsideration boolean (0..1) 
		[synonym FpML_5_10 value "compositionOfCombinedConsideration"]
	indexAdjustmentEvents IndexAdjustmentEvents (0..1) 
		[synonym FpML_5_10 value "indexAdjustmentEvents"]
	additionalDisruptionEvents AdditionalDisruptionEvents (0..1) 
		[synonym FpML_5_10 value "additionalDisruptionEvents"]
	failureToDeliver boolean (0..1) 
		[synonym FpML_5_10 value "failureToDeliver"]
	representations Representations (0..1)
		[synonym FpML_5_10 value "representations"]
	nationalizationOrInsolvency NationalizationOrInsolvencyOrDelistingEventEnum (0..1) 
		[synonym FpML_5_10 value "nationalisationOrInsolvency"]
	delisting NationalizationOrInsolvencyOrDelistingEventEnum (0..1) 
		[synonym FpML_5_10 value "delisting"]
	condition Choice: 
		required choice additionalDisruptionEvents, failureToDeliver

type IndexAdjustmentEvents: 
	[synonym FpML_5_10 value "IndexAdjustmentEvents"]

	indexModification IndexEventConsequenceEnum (1..1) 
		[synonym FpML_5_10 value "indexModification"]
	indexCancellation IndexEventConsequenceEnum (1..1) 
		[synonym FpML_5_10 value "indexCancellation"]
	indexDisruption IndexEventConsequenceEnum (1..1) 
		[synonym FpML_5_10 value "indexDisruption"]


// TODO - Look for further synergies with the SecurityValuation class
type CashPrice: 

	grossPrice ActualPrice (0..1) 
		[synonym FpML_5_10 value "grossPrice"]
	cleanNetPrice ActualPrice (0..1) 
		[synonym FpML_5_10 value "cleanNetPrice"]
	netPrice ActualPrice (0..1) 
		[synonym FpML_5_10 value "netPrice"]
	accruedInterest number (0..1) 
		[synonym FpML_5_10 value "accruedInterestPrice"]
	cashflowAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentAmount"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmount"]
	/*cashflowType CashflowTypeEnum (0..1) 
		// [synonym FpML_5_10, CME_ClearedConfirm_1_17 value "paymentType", "paymentType" path "premium"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17
			set to CashflowTypeEnum -> Fee when "feeLeg" exists,
			set to CashflowTypeEnum -> Premium when "premium" exists]*/
	/*
	 * FpML construct also includes other elements, such as the fxConversion
	 */
	condition NetPrice: 
		if CashPrice exists
		then netPrice exists or cleanNetPrice exists or cashflowAmount exists

type PriceReturnTerms:
	[synonym FpML_5_10 value "ReturnLegValuationPrice"]

	valuationPriceInterim EquityValuation (0..1) 
		[synonym FpML_5_10 value "valuationPriceInterim" path "rateOfReturn"]
	valuationPriceFinal EquityValuation (1..1) 
		[synonym FpML_5_10 value "valuationPriceFinal" path "rateOfReturn"]

// In a subsequent phase of work, a single price should be stored and "reset" after each period. Lineage should then be used to resolve the period start and end prices for the Equity Cash Settlement Amount calculation	
type Representations:
	[synonym FpML_5_10 value "Representations"]

	nonReliance boolean (1..1) 
		[synonym FpML_5_10 value "nonReliance"]
	agreementsRegardingHedging boolean (1..1) 
		[synonym FpML_5_10 value "agreementsRegardingHedging"]
	indexDisclaimer boolean (1..1) 
		[synonym FpML_5_10 value "indexDisclaimer"]
	additionalAcknowledgements boolean (0..1) 
		[synonym FpML_5_10 value "additionalAcknowledgements"]



import cdm.base.*

func PartyRoleForParty:
 	inputs:
 		party Party (1..1)
 		role PartyRoleEnum (1..1)

  	output:
 		partyRole PartyRole (1..1)

  	assign-output partyRole -> partyReference:
 		party

  	assign-output partyRole -> role:
 		role

func PartyByRole: 
	inputs:
		roles PartyRole(1..*)
		role PartyRoleEnum(1..1)
	output:
		party Party (1..1)

 

import cdm.base.math.*
import cdm.base.datetime.*

/***************************************************************
 * Aliases (other than those embedded in the calculation syntax)
 */
func ForwardFX:
	inputs:
		forwardPayout ForwardPayout(1..1)
	output: result ForeignExchange (1..1)
	assign-output result: forwardPayout -> underlier -> underlyingProduct -> foreignExchange

func EffectiveDateContainsPaymentDate:
	inputs:
		economicTerms EconomicTerms(1..1)
	output:
		result boolean(1..1)

	alias paymentDate: PaymentDate(economicTerms)

	alias effectiveDates: [
			economicTerms -> effectiveDate -> adjustableDate -> adjustedDate,
			economicTerms -> effectiveDate -> adjustableDate -> unadjustedDate,
			economicTerms -> effectiveDate -> relativeDate -> adjustedDate,
			economicTerms -> payout -> interestRatePayout only-element -> calculationPeriodDates -> effectiveDate -> adjustableDate -> adjustedDate,
			economicTerms -> payout -> interestRatePayout only-element -> calculationPeriodDates -> effectiveDate -> adjustableDate -> unadjustedDate,
			economicTerms -> payout -> interestRatePayout only-element-> calculationPeriodDates -> effectiveDate -> relativeDate -> adjustedDate,
			economicTerms -> payout -> equityPayout only-element -> calculationPeriodDates -> effectiveDate -> adjustableDate -> adjustedDate,
			economicTerms -> payout -> equityPayout only-element-> calculationPeriodDates -> effectiveDate -> adjustableDate -> unadjustedDate,
			economicTerms -> payout -> equityPayout only-element-> calculationPeriodDates -> effectiveDate -> relativeDate -> adjustedDate
	]
	assign-output result:
		effectiveDates exists and effectiveDates contains paymentDate

// TODO - Providing the ability to embed aliases would provide the ability to ensure consistency between this alias and the effectiveDate one, while also simplify the syntax
// See Trello card https://trello.com/c/89Lv8rAn
func NovatedContractEffectiveDate:
	inputs:
		businessEvent BusinessEvent(1..1)
	output:
		result DateGroup(1..1)

	alias eTerms: businessEvent -> primitives -> contractFormation -> after -> contract -> tradableProduct -> product -> contractualProduct -> economicTerms
	alias effectiveDate: eTerms only-element -> effectiveDate
	alias interestRatePayoutDate: eTerms only-element-> payout -> interestRatePayout -> calculationPeriodDates -> effectiveDate
	alias equityPayoutDate: eTerms only-element-> payout -> equityPayout -> calculationPeriodDates -> effectiveDate

	assign-output result -> dates: [
			effectiveDate -> adjustableDate -> adjustedDate,
			effectiveDate -> adjustableDate -> unadjustedDate,
			effectiveDate -> relativeDate -> adjustedDate,
			interestRatePayoutDate -> adjustableDate -> adjustedDate,
			interestRatePayoutDate -> adjustableDate -> unadjustedDate,
			interestRatePayoutDate -> relativeDate -> adjustedDate,
			equityPayoutDate -> adjustableDate -> adjustedDate,
			equityPayoutDate -> adjustableDate -> unadjustedDate,
			equityPayoutDate -> relativeDate -> adjustedDate
	]

func PaymentDate: // Scope limited to interestPayout until such time that we position it to the economicTerms level
	inputs: economicTerms EconomicTerms(1..1)
	output: result date(0..1)
	assign-output result: economicTerms -> payout -> interestRatePayout only-element -> paymentDate -> adjustedDate


//alias quantityAfterQuantityChange 
//
//
//alias quantityBeforeQuantityChange 
//	( WorkflowEvent -> businessEvent -> primitives -> quantityChange -> before -> contract -> contractualQuantity -> quantityNotation group by assetIdentifier -> currency ) -> quantity -> amount

func QuantityChange: 
	inputs:
		contract Contract(1..*)
	output:
		quantityChange QuantityGroups(1..1)

	// TODO - Support group by structures.
	assign-output quantityChange -> quantityGroups -> amount: [
		( contract -> tradableProduct -> quantityNotation group by assetIdentifier -> currency ) -> quantity -> amount
	]

func QuantityIncreased:
	inputs:
		quantityChangePrimitive QuantityChangePrimitive(1..*)
	output: result boolean(1..1)

	alias beforeQuantity:
		QuantityChange(quantityChangePrimitive -> before -> contract)
	alias afterQuantity:
		QuantityChange(quantityChangePrimitive -> after -> contract)

	assign-output result:
		ListsCompare(CompareOp -> Greater, afterQuantity -> quantityGroups -> amount, beforeQuantity -> quantityGroups -> amount, empty)

	// TODO - Support operators for groupings.
	//	assign-output result:
	//		afterQuantity > beforeQuantity

func QuantityDecreased:
	inputs:
		quantityChangePrimitive QuantityChangePrimitive(1..*)
	output: result boolean(1..1)

	alias beforeQuantity:
		QuantityChange(quantityChangePrimitive -> before -> contract)
	alias afterQuantity:
		QuantityChange(quantityChangePrimitive -> after -> contract)

	assign-output result:
		ListsCompare(CompareOp -> Greater, beforeQuantity -> quantityGroups -> amount, afterQuantity -> quantityGroups -> amount, empty) = True
		and ListsCompare(CompareOp -> Greater, afterQuantity -> quantityGroups -> amount, empty, 0.0) = True

	// TODO - Support operators for groupings.
	//	assign-output result:
	//		afterQuantity < beforeQuantity and afterQuantity > 0

func QuantityDecreasedToZero:
	inputs:
		quantityChangePrimitive QuantityChangePrimitive(1..*)
	output: result boolean(1..1)

	alias beforeQuantity:
		QuantityChange(quantityChangePrimitive -> before -> contract)
	alias afterQuantity:
		QuantityChange(quantityChangePrimitive -> after -> contract)

	assign-output result:
		ListsCompare(CompareOp -> Greater, beforeQuantity -> quantityGroups -> amount, empty, 0.0) = True
		and ListsCompare(CompareOp -> Equal, afterQuantity -> quantityGroups -> amount, empty, 0.0) = True

	// TODO - Support operators for groupings.
	//	assign-output result:
	//		beforeQuantity > 0 and afterQuantity = 0


func NoQuantityChange:
	inputs:
		quantityChangePrimitive QuantityChangePrimitive(1..*)
	output:
		result boolean(1..1)

	alias beforeQuantity:
		QuantityChange(quantityChangePrimitive -> before -> contract)
	alias afterQuantity:
		QuantityChange(quantityChangePrimitive -> after -> contract)

	assign-output result:
		ListsCompare(CompareOp -> Equal, beforeQuantity -> quantityGroups -> amount, beforeQuantity -> quantityGroups -> amount, empty) = True

	// TODO - Support operators for groupings.
	//	assign-output result:
	//		beforeQuantity = afterQuantity

func TerminationDate: // Scope limited to interestPayout until such time that we position it to the economicTerms level
	inputs: economicTerms EconomicTerms(1..1)
	output: result DateGroup(1..1)
	alias interestRateTerminationDate: economicTerms -> payout -> interestRatePayout only-element -> calculationPeriodDates -> terminationDate
	alias equityPayoutTerminationDate: economicTerms -> payout -> equityPayout only-element -> calculationPeriodDates -> terminationDate

	assign-output result -> dates:
		[
			economicTerms -> terminationDate -> adjustableDate -> adjustedDate,
			economicTerms -> terminationDate -> adjustableDate -> unadjustedDate,
			economicTerms -> terminationDate -> relativeDate -> adjustedDate,
			interestRateTerminationDate -> adjustableDate -> adjustedDate,
			interestRateTerminationDate -> adjustableDate -> unadjustedDate,
			interestRateTerminationDate -> relativeDate -> adjustedDate,
			equityPayoutTerminationDate -> adjustableDate -> adjustedDate,
			equityPayoutTerminationDate -> adjustableDate -> unadjustedDate,
			equityPayoutTerminationDate -> relativeDate -> adjustedDate
		]



import cdm.base.*
import cdm.base.datetime.*
import cdm.base.staticdata.asset.rates.* 
import cdm.synonyms.config.*

type BondOptionStrike: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10 value "BondOptionStrike"]
	referenceSwapCurve ReferenceSwapCurve (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceSwapCurve"]
	price OptionStrike (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "price"]
	condition: one-of

type MakeWholeAmount extends SwapCurveValuation: 
	[synonym FpML_5_10 value "MakeWholeAmount"]
	interpolationMethod InterpolationMethodEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "interpolationMethod"]
	earlyCallDate date (1..1) 
		[metadata id]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "earlyCallDate" meta "id"]

type ReferenceSwapCurve: 
	[synonym FpML_5_10 value "ReferenceSwapCurve"]
	swapUnwindValue SwapCurveValuation (1..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "swapUnwindValue"]
	makeWholeAmount MakeWholeAmount (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "makeWholeAmount"]

type SwapCurveValuation: 
	[synonym FpML_5_10 value "SwapCurveValuation"]
	floatingRateIndex FloatingRateIndexEnum (1..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateIndex"]
	indexTenor Period (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexTenor"]
	spread number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "spread"]
	side QuotationSideEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "side"]


import cdm.base.*
import cdm.synonyms.config.*

enum AveragingMethodEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AveragingMethodEnum"]
	Unweighted 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Unweighted"]
	Weighted 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Weighted"]		
		
enum RoundingDirectionEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RoundingDirectionEnum"]
	Up 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Up"]
	Down 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Down"]
	Nearest 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Nearest"]


enum UnitEnum: 

	MWh 
		[synonym Workflow_Event value "MWh"]
	MMBTU 
		[synonym Workflow_Event value "MMBTU"]
	BBL 
		[synonym Workflow_Event value "BBL"]
	GAL 
		[synonym Workflow_Event value "GAL"]
	BSH 
		[synonym Workflow_Event value "BSH"]


enum QuantifierEnum: 
	[synonym FpML_5_10 value "QuantifierEnum"]
	All 
		[synonym FpML_5_10 value "All"]
	Any 
		[synonym FpML_5_10 value "Any"]


enum CompareOp:
	Greater
	Equal		
 

import cdm.base.math.*
import cdm.base.staticdata.asset.common.*


func PriceQuantityTriangulation:
	inputs:
		priceNotation PriceNotation (0..*)
		quantityNotation QuantityNotation (0..*)

	output:
		success boolean (1..1)

	assign-output success:
		if priceNotation -> price -> cashPrice exists
		then CashPriceQuantityNoOfUnitsTriangulation( priceNotation, quantityNotation )
		else if priceNotation -> price -> exchangeRate exists
		then ExchangeRateQuantityTriangulation( priceNotation, quantityNotation )
		else True


func CashPriceQuantityNoOfUnitsTriangulation: 
	inputs:
		priceNotation PriceNotation (0..*)
		quantityNotation QuantityNotation (0..*)

	output:
		success boolean (1..1)

	alias notional:
		CurrencyAmount( quantityNotation, empty )

	alias noOfUnits:
		NoOfUnits( quantityNotation )

	alias cashPrices:
		priceNotation -> price -> cashPrice -> netPrice -> amount

	alias cashPrice:
		cashPrices only-element

	assign-output success:
		if ( cashPrice and noOfUnits and notional ) exists
		then cashPrice * noOfUnits = notional


func ExchangeRateQuantityTriangulation:
	inputs:
		priceNotation PriceNotation (0..*)
		quantityNotation QuantityNotation (0..*)

	output:
		success boolean (1..1)

	alias exchangeRates:
		priceNotation -> price -> exchangeRate

	alias exchangeRate:
		exchangeRates only-element

	alias rate:
		if exchangeRate -> rate exists
		then exchangeRate -> rate
		else exchangeRate -> spotRate

	alias quotedCurrency:
		exchangeRate -> quotedCurrencyPair

	alias quantity1:
		CurrencyAmount( quantityNotation, quotedCurrency -> currency1 )

	alias quantity2:
		CurrencyAmount( quantityNotation, quotedCurrency -> currency2 )

	assign-output success:
		if ( quantity1 and quantity2 and rate ) exists
		then
			if quotedCurrency -> quoteBasis = QuoteBasisEnum -> Currency1PerCurrency2
			then quantity1 / quantity2 = rate
			else if quotedCurrency -> quoteBasis = QuoteBasisEnum -> Currency2PerCurrency1
			then quantity2 / quantity1 = rate


func NoOfUnits: 
	inputs:
		quantityNotations QuantityNotation (0..*)

	output:
		noOfUnits number (1..1)


func CurrencyAmount: 
	inputs:
		quantityNotations QuantityNotation (0..*)
		currency string (0..1)

	output:
		currencyAmount number (1..1)


func ResolveContractualProduct: 
	inputs:
		contractualProduct ContractualProduct (1..1) 
		quantityNotations QuantityNotation (1..*) 
		
	output:
		resolvedContractualProduct ContractualProduct (1..1) 


func ResolvePayoutQuantity: 
	inputs:
		resolvableQuantity ResolvablePayoutQuantity (1..1) 
		quantityNotations QuantityNotation (1..*) 
		contractualProduct ContractualProduct (1..1) 
	
	output:
		resolvedQuantity NonNegativeQuantity (1..1) 


func ResolveQuantity: 
	inputs:
		resolvableQuantity ResolvablePayoutQuantity (1..1) 
		date date (1..1)
	output:
		quantity Quantity (1..1) 


func ResolvePrice: 
	// TODO Never referenced in CDM
	inputs:
		equityValuation EquityValuation (1..1)
		date date (1..1)

	output:
		price number  (1..1)

func ExtractContractState: 
	inputs: event BusinessEvent (1..1)
	output: contractState ContractState (1..1)
	alias primitive: event -> primitives  only-element
	assign-output contractState:
		if primitive -> contractFormation exists then primitive -> contractFormation -> after
		else if primitive -> reset exists then primitive -> reset -> after


// TODO: turn these functions into language level operators i.e. '+'
func Plus:
	inputs:
		q1 QuantityNotation (1..1)
		q2 QuantityNotation (1..1)
	output:
		result QuantityNotation (1..1)

// TODO: turn these functions into language level operators i.e. '='
func Equals:
	// TODO Never referenced in CDM
	inputs:
		quantity QuantityNotation (1..*)
		scalar number (1..1)
	output:
		result boolean (1..1)

// TODO: turn these functions into language level operators i.e. '>'
func GreaterThan:
	inputs:
		quantity QuantityNotation (1..*)
		scalar number (1..1)
	output:
		result boolean (1..1)

// TODO: turn these functions into language level operators i.e. '>='
func GreaterThanEquals:
	// TODO Never referenced in CDM
	inputs:
		quantity QuantityNotation (1..*)
		scalar number (1..1)
	output:
		result boolean (1..1)


func ExtractQuantityByAsset:
	inputs:
		quantities QuantityNotation (1..*)
		asset AssetIdentifier (1..1)
	output:
		quantity QuantityNotation (1..1)


func ExtractQuantityByCurrency:
	inputs:
		quantities QuantityNotation (1..*)
		currency string (1..1)
	output:
		quantity QuantityNotation (1..1)



import cdm.base.datetime.*
import cdm.base.math.*
import cdm.base.staticdata.asset.rates.*

func FixedAmount: 
	[calculation]
	inputs:
		interestRatePayout InterestRatePayout (1..1)
		fixedRate FixedInterestRate (1..1)
		quantity NonNegativeQuantity (1..1)
		date date (1..1)

	output:
		fixedAmount number (1..1)

	alias calculationAmount:
		quantity -> amount

	alias fixedRateAmount:
		fixedRate -> rate

	alias dayCountFraction:
		DayCountFraction(interestRatePayout, interestRatePayout -> dayCountFraction, date)

	assign-output fixedAmount:
		calculationAmount * fixedRateAmount * dayCountFraction


func FloatingAmount: 
	// TODO - The below calculation needs to be refined for the case of negative interest rate and compounding
	// TODO - The ISDA 2006 doesn't make reference to the FpML floatingRateMultiplierSchedule.
	// Discussed resolution path with Jonathan & Harry is for Jonathan to ask the Rates Committee if the rate multiplier is actually used.
	[calculation]
	inputs:
		interestRatePayout InterestRatePayout (1..1)
		rate FloatingInterestRate (1..1)
		quantity NonNegativeQuantity (1..1)
		date date (1..1)
	output: floatingAmount number (1..1)

	alias calculationAmount: quantity -> amount
	alias floatingRate: ResolveRateIndex( interestRatePayout -> rateSpecification -> floatingRate -> assetIdentifier -> rateOption -> floatingRateIndex )
	alias spreadRate: rate -> spread
	alias dayCountFraction: DayCountFraction(interestRatePayout, interestRatePayout -> dayCountFraction, date)

	assign-output floatingAmount: calculationAmount * (floatingRate + spreadRate) * dayCountFraction

func DayCountFraction: 
	[calculation]
	inputs:
		interestRatePayout InterestRatePayout (1..1)
		dayCountFractionEnum DayCountFractionEnum (1..1)
		date date (1..1)
	output:
		result number (1..1)


func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> _1_1): 
	[calculation]
	assign-output result: 1.0


func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> ACT_ACT_ISDA): 
	[calculation]
	alias calculationPeriod: CalculationPeriod(interestRatePayout -> calculationPeriodDates, date)
	alias daysInLeapYearPeriod: 
		calculationPeriod -> daysInLeapYearPeriod
	alias daysInNonLeapPeriod: 
		(calculationPeriod -> daysInPeriod) - (calculationPeriod -> daysInLeapYearPeriod)
	assign-output result:
		(daysInNonLeapPeriod / 365) + (daysInLeapYearPeriod / 366)


func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> ACT_ACT_ICMA): 
	[calculation]
	alias calculationPeriod: CalculationPeriod(interestRatePayout -> calculationPeriodDates, date)
	alias daysInPeriod: 
		calculationPeriod -> daysInPeriod
	alias periodsInYear: 
		PeriodsInYear(interestRatePayout -> calculationPeriodDates -> calculationPeriodFrequency)
	assign-output result:
		// TODO support the long initial and final stubs
		daysInPeriod / (daysInPeriod * periodsInYear)

func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> ACT_365_FIXED): 
	[calculation]
	alias daysInPeriod: 
		CalculationPeriod(interestRatePayout -> calculationPeriodDates, date) -> daysInPeriod
	assign-output result:
		daysInPeriod / 365

func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> ACT_360): 
	[calculation]
	alias daysInPeriod: 
		CalculationPeriod(interestRatePayout -> calculationPeriodDates, date ) -> daysInPeriod
	assign-output result:
		daysInPeriod / 360

func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> _30_360): 
	[calculation]
	alias calculationPeriod:
		CalculationPeriod(interestRatePayout -> calculationPeriodDates, date)

	alias startYear: 
		calculationPeriod -> startDate -> year

	alias endYear: 
		calculationPeriod -> endDate -> year

	alias startMonth: 
		calculationPeriod -> startDate -> month

	alias endMonth: 
		calculationPeriod -> endDate -> month

	alias endDay: 
		if calculationPeriod -> startDate -> day > 29 then Min(calculationPeriod -> endDate -> day, 30) else calculationPeriod -> endDate -> day

	alias startDay: 
		Min(calculationPeriod -> startDate -> day, 30)
	assign-output result:
		(360 * (endYear - startYear) + 30 * (endMonth - startMonth) + (endDay - startDay)) / 360


func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> _30E_360): 
	[calculation]
	alias calculationPeriod:
		CalculationPeriod(interestRatePayout -> calculationPeriodDates, date)

	alias startYear: 
		calculationPeriod -> startDate -> year

	alias endYear: 
		calculationPeriod -> endDate -> year

	alias startMonth: 
		calculationPeriod -> startDate -> month

	alias endMonth: 
		calculationPeriod -> endDate -> month

	alias endDay: 
		Min(calculationPeriod -> endDate -> day, 30)

	alias startDay: 
		Min(calculationPeriod -> startDate -> day, 30)
	assign-output result:
		(360 * (endYear - startYear) + 30 * (endMonth - startMonth) + (endDay - startDay)) / 360

func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> _30E_360_ISDA): 
	[calculation]

	alias calculationPeriod:
		CalculationPeriod(interestRatePayout -> calculationPeriodDates, date)

	alias interestRatePayoutTerminationDate:
		ResolveAdjustableDate (interestRatePayout -> calculationPeriodDates -> terminationDate)

	alias startDateIsInLeapYear:
		IsLeapYear(calculationPeriod -> startDate -> year)

	alias endDateIsInLeapYear:
		IsLeapYear(calculationPeriod -> endDate -> year)

	alias startYear: 
		calculationPeriod -> startDate -> year

	alias endYear: 
		calculationPeriod -> endDate -> year

	alias startMonth: 
		calculationPeriod -> startDate -> month

	alias endMonth: 
		calculationPeriod -> endDate -> month

	alias startDay:
		if startDateIsInLeapYear = False and calculationPeriod -> startDate -> month = 2 and calculationPeriod -> startDate -> day = 28
			or startDateIsInLeapYear = True and calculationPeriod -> startDate -> month = 2 and calculationPeriod -> startDate -> day = 29
			or calculationPeriod -> startDate -> day = 31
		then 30 else calculationPeriod -> endDate -> day

	alias endDay:
		if endDateIsInLeapYear = False and calculationPeriod -> endDate -> month = 2 and calculationPeriod -> endDate -> day = 28
			or endDateIsInLeapYear = True and calculationPeriod -> endDate -> month = 2 and calculationPeriod -> endDate -> day = 29
			or calculationPeriod -> endDate -> day = 31
			or calculationPeriod -> endDate = interestRatePayoutTerminationDate
		then 30 else calculationPeriod -> endDate -> day
	assign-output result:
		(360 * (endYear - startYear) + 30 * (endMonth - startMonth) + (endDay - startDay)) / 360

func DayCountFraction(dayCountFractionEnum: DayCountFractionEnum -> ACT_365L): 
	[calculation]
	alias calculationPeriod:
		CalculationPeriod(interestRatePayout -> calculationPeriodDates, date)

	alias endDateIsInLeapYear:
		IsLeapYear(calculationPeriod -> endDate -> year)

	alias daysInPeriod: 
		calculationPeriod -> daysInPeriod

	alias daysInYear: 
		if (endDateIsInLeapYear = True) then 366 else 365

	assign-output result:
		daysInPeriod / daysInYear


func ResolveRateIndex: 
	inputs: index FloatingRateIndexEnum (1..1)
	output: rate number (1..1)


func PeriodsInYear:
	inputs: frequency CalculationPeriodFrequency (1..1)
	output: numberOfPeriods int (1..1)


func CalculationPeriod: 
	inputs:
		calculationPeriodDates CalculationPeriodDates (1..1)
		date date (1..1)
	output: result CalculationPeriodData (1..1)


type CalculationPeriodData:
	startDate date (1..1)
	endDate date (1..1)
	daysInPeriod int (1..1)
	daysInLeapYearPeriod int (1..1)
	isFirstPeriod boolean (1..1)
	isLastPeriod boolean (1..1)


import cdm.base.*
import cdm.synonyms.config.*

type Document:
	// TODO Never referenced in CDM
	finInstrmRptgTxRpt FinInstrmRptgTxRpt (1..1)
		[synonym ISO20022 value "FinInstrmRptgTxRpt"]


type FinInstrmRptgTxRpt:
	tx Tx (1..1)
		[synonym ISO20022 value "Tx"]


type Tx:
	newTx New (1..1)
		[synonym ISO20022 value "New"]
	tradDt string (1..1)
		[synonym ISO20022 value "TradDt"]
	tradgCpcty string (1..1)
		[synonym ISO20022 value "TradgCpcty"]
	qty Qty (1..1)
		[synonym ISO20022 value "Qty"]
	pric Pric (1..1)
		[synonym ISO20022 value "Pric"]
	tradVn string (1..1)
		[synonym ISO20022 value "TradVn"]
	ctryOfBrnch string (1..1)
		[synonym ISO20022 value "CtryOfBrnch"]


type New:
	txId string (1..1)
		[synonym ISO20022 value "TxId"]
	exctgPty string (1..1)
		[synonym ISO20022 value "ExctgPty"]
	invstmtPtyInd string (1..1)
		[synonym ISO20022 value "InvstmtPtyInd"]
	submitgPty string (1..1)
		[synonym ISO20022 value "SubmitgPty"]
	buyr Buyr (1..1)
		[synonym ISO20022 value "Buyr"]
	sellr Sellr (1..1)
		[synonym ISO20022 value "Sellr"]
	ordrTrnsmssn OrdrTrnsmssn (1..1)
		[synonym ISO20022 value "OrdrTrnsmssn"]
	tx Tx (1..1)
		[synonym ISO20022 value "Tx"]
	finInstrm FinInstrm (1..1)
		[synonym ISO20022 value "FinInstrm"]
	invstmtDcsnPrsn InvstmtDcsnPrsn (1..1)
		[synonym ISO20022 value "InvstmtDcsnPrsn"]
	exctgPrsn ExctgPrsn (1..1)
		[synonym ISO20022 value "ExctgPrsn"]
	addtlAttrbts AddtlAttrbts (1..1)
		[synonym ISO20022 value "AddtlAttrbts"]


type Sellr:
	acctOwnr AcctOwnr (1..1)
		[synonym ISO20022 value "AcctOwnr"]


type Sngl:
	isin string (1..1)
		[synonym ISO20022 value "ISIN"]
	indx Indx (1..1)
		[synonym ISO20022 value "Indx"]


type OrdrTrnsmssn:
	trnsmssnInd string (1..1)
		[synonym ISO20022 value "TrnsmssnInd"]


type DerivInstrmAttrbts:
	xpryDt string (1..1)
		[synonym ISO20022 value "XpryDt"]
	pricMltplr string (1..1)
		[synonym ISO20022 value "PricMltplr"]
	undrlygInstrm UndrlygInstrm (1..1)
		[synonym ISO20022 value "UndrlygInstrm"]
	dlvryTp string (1..1)
		[synonym ISO20022 value "DlvryTp"]


type UndrlygInstrm:
	swp Swp (1..1)
		[synonym ISO20022 value "Swp"]


type AcctOwnr:
	id Id (1..1)
		[synonym ISO20022 value "Id"]


type InvstmtDcsnPrsn:
	prsn Prsn (1..1)
		[synonym ISO20022 value "Prsn"]


type Buyr:
	acctOwnr AcctOwnr (1..1)
		[synonym ISO20022 value "AcctOwnr"]


type Qty:
	unit string (1..1)
		[synonym ISO20022 value "Unit"]


type FinInstrm:
	othr Othr (1..1)
		[synonym ISO20022 value "Othr"]


type Pric:
	pric Pric (1..1)
		[synonym ISO20022 value "Pric"]
	bsisPts string (1..1)
		[synonym ISO20022 value "BsisPts"]


type Prsn:
	ctryOfBrnch string (1..1)
		[synonym ISO20022 value "CtryOfBrnch"]

	othr Othr (1..1)
		[synonym ISO20022 value "Othr"]


type FinInstrmGnlAttrbts:
	fullNm string (1..1)
		[synonym ISO20022 value "FullNm"]
	clssfctnTp string (1..1)
		[synonym ISO20022 value "ClssfctnTp"]
	ntnlCcy string (1..1)
		[synonym ISO20022 value "NtnlCcy"]


type Nm:
	refRate RefRate (1..1)
		[synonym ISO20022 value "RefRate"]
	term Term (1..1)
		[synonym ISO20022 value "Term"]


type SwpOut:
	sngl Sngl (1..1)
		[synonym ISO20022 value "Sngl"]


type Othr:
	finInstrmGnlAttrbts FinInstrmGnlAttrbts (1..1)
		[synonym ISO20022 value "FinInstrmGnlAttrbts"]
	derivInstrmAttrbts DerivInstrmAttrbts (1..1)
		[synonym ISO20022 value "DerivInstrmAttrbts"]
	id string (1..1)
		[synonym ISO20022 value "Id"]
	schmeNm SchmeNm (1..1)
		[synonym ISO20022 value "SchmeNm"]


type ExctgPrsn:
	prsn Prsn (1..1)
		[synonym ISO20022 value "Prsn"]


type Term:
	unit string (1..1)
		[synonym ISO20022 value "Unit"]
	val string (1..1)
		[synonym ISO20022 value "Val"]


type Swp:
	swpIn SwpIn (1..1)
		[synonym ISO20022 value "SwpIn"]
	swpOut SwpOut (1..1)
		[synonym ISO20022 value "SwpOut"]


type SchmeNm:
	prtry string (1..1)
		[synonym ISO20022 value "Prtry"]


type RefRate:
	indx string (1..1)
		[synonym ISO20022 value "Indx"]
	nm string (1..1)
		[synonym ISO20022 value "Nm"]


type AddtlAttrbts:
	rskRdcgTx string (1..1)
		[synonym ISO20022 value "RskRdcgTx"]
	sctiesFincgTxInd string (1..1)
		[synonym ISO20022 value "SctiesFincgTxInd"]


type SwpIn:
	sngl Sngl (1..1)
		[synonym ISO20022 value "Sngl"]


type Indx:
	nm Nm (1..1)
		[synonym ISO20022 value "Nm"]


type Id:
	lei string (1..1)
		[synonym ISO20022 value "LEI"]



import cdm.base.*
import cdm.base.datetime.*
import cdm.synonyms.config.*

type ForwardPayout: 

	underlier Underlier (1..1) 
	settlementTerms OptionSettlement (1..1) 
	condition SettlementDate: 
		if ForwardFX() exists
		then ( settlementTerms -> valueDate exists
			and ForwardFX() -> exchangedCurrency1 -> cashflowDate is absent and ForwardFX() -> exchangedCurrency2 -> cashflowDate is absent)
			or ( settlementTerms -> valueDate is absent
			and ForwardFX() -> exchangedCurrency1 -> cashflowDate exists and ForwardFX() -> exchangedCurrency2 -> cashflowDate exists and
			ForwardFX() -> exchangedCurrency1 -> cashflowDate = ForwardFX() -> exchangedCurrency2 -> cashflowDate) 
	condition FxSettlement: 
		if ForwardFX() exists 
		then ( settlementTerms -> cashSettlementTerms is absent
			and settlementTerms -> physicalSettlementTerms is absent)

// NOW SUPERSEDED By THE USE OF GENERIC 'PRODUCT' UNDERLIER, WHICH ALREADY HAS A 'ONE OF' RULE:
// choice rule ForwardPayout_choice 
// 	for ForwardPayout required choice between 
// 	settlementTerms and underlier
type ForeignExchange: 
	[synonym FpML_5_10 value "FxSingleLeg"]
	exchangedCurrency1 Cashflow (1..1) 
		[synonym FpML_5_10 value "exchangedCurrency1"]
	exchangedCurrency2 Cashflow (1..1) 
		[synonym FpML_5_10 value "exchangedCurrency2"]
	tenorPeriod Period (0..1) 
		[synonym FpML_5_10 value "tenorPeriod"]
	exchangeRate ExchangeRate (0..1) 
		[synonym FpML_5_10 value "ignore"]
		

type ExchangeRate: 
	[synonym FpML_5_10 value "ExchangeRate"]
	quotedCurrencyPair QuotedCurrencyPair (1..1) 
		[synonym FpML_5_10 value "quotedCurrencyPair"]
	rate number (1..1) 
		[synonym FpML_5_10 value "rate"]
	spotRate number (0..1) 
		[synonym FpML_5_10 value "spotRate"]
	forwardPoints number (0..1) 
		[synonym FpML_5_10 value "forwardPoints"]
	pointValue number (0..1) 
		[synonym FpML_5_10 value "pointValue"]
	crossRate CrossRate (0..*) 
		[synonym FpML_5_10 value "crossRate"]
	condition PositiveRate: 
		if rate exists
		then rate > 0
	condition PositiveSpotRate: 
		if spotRate exists
		then spotRate > 0
	condition ForwardPoints:
		if pointValue exists
		then forwardPoints exists
	condition SpotRate:
		if forwardPoints exists
		then spotRate exists

// TODO: Duplicates large part of ExchangeRate, consider removing redundancy
type CrossRate extends QuotedCurrencyPair: 
	[synonym FpML_5_10 value "CrossRate"]
	rate number (1..1) 
		[synonym FpML_5_10 value "rate"]
	spotRate number (0..1) 
		[synonym FpML_5_10 value "spotRate"]
	forwardPoints number (0..1) 
		[synonym FpML_5_10 value "forwardPoints"]

	condition CrossRate:
		if forwardPoints exists
		then spotRate exists

type FxCashSettlement: 
	[synonym FpML_5_10 value "FxCashSettlement"]

	settlementCurrency string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "settlementCurrency"]
	referenceCurrency string (0..1)
		[metadata scheme]
		[synonym FpML_5_10 value "referenceCurrency"]
	fixing FxFixing (0..*) 
		[synonym FpML_5_10 value "fixing"]
	rateSourceFixing FxRateSourceFixing (0..*) 
		[synonym FpML_5_10 value "rateSourceFixing"]

	condition FixingChoice:
		optional choice fixing, rateSourceFixing

type FxFixing: 
	[synonym FpML_5_10 value "FxFixing"]

	quotedCurrencyPair QuotedCurrencyPair (1..1) 
		[synonym FpML_5_10 value "quotedCurrencyPair"]
	fixingDate date (0..1) 
		[synonym FpML_5_10 value "fixingDate"]
	fxSpotRateSource FxSpotRateSource (0..1) 
		[synonym FpML_5_10 value "fxSpotRateSource"]

type FxRateSourceFixing: 
	[synonym FpML_5_10 value "FxRateSourceFixing"]

	settlementRateSource FxSettlementRateSource (1..1)
		[synonym FpML_5_10 value "settlementRateSource"]
	fixingDate AdjustableDate (1..1) 
		[synonym FpML_5_10 value "fixingDate"]


type FxSettlementRateSource: 
	[synonym FpML_5_10 value "FxSettlementRateSource"]

	settlementRateOption string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "settlementRateOption"]
	nonstandardSettlementRate FxInformationSource (0..1) 

	condition Choice:
		required choice settlementRateOption, nonstandardSettlementRate

type FxInformationSource extends InformationSource: 
	[synonym FpML_5_10 value "FxInformationSource"]

	fixingTime BusinessCenterTime (0..1) 



import cdm.base.*
import cdm.base.datetime.*
import cdm.base.math.*
import cdm.base.staticdata.asset.rates.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type AmericanExercise: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AmericanExercise" meta "id"]

	commencementDate AdjustableOrRelativeDate (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "commencementDate"]
	expirationDate AdjustableOrRelativeDate (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "expirationDate"]
	relevantUnderlyingDate AdjustableOrRelativeDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relevantUnderlyingDate"]
	earliestExerciseTime BusinessCenterTime (1..1 ) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "earliestExerciseTime"]
	latestExerciseTime BusinessCenterTime (0..1 ) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "latestExerciseTime"]
	expirationTime BusinessCenterTime (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "expirationTime"]
	multipleExercise MultipleExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "multipleExercise"]
	exerciseFeeSchedule ExerciseFeeSchedule (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseFeeSchedule"]


type AmountSchedule extends Schedule: 
	[synonym FpML_5_10 value "AmountSchedule"]

	currency string (1..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" meta "currencyScheme"]


type AutomaticExercise: 
	[synonym FpML_5_10 value "AutomaticExercise"]

	thresholdRate number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "thresholdRate"]


type BermudaExercise: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BermudaExercise" meta "id"]

	bermudaExerciseDates AdjustableOrRelativeDates (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bermudaExerciseDates"]
	relevantUnderlyingDate AdjustableOrRelativeDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relevantUnderlyingDate"]
	earliestExerciseTime BusinessCenterTime (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "earliestExerciseTime"]
	latestExerciseTime BusinessCenterTime (0..1 ) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "latestExerciseTime"]
	expirationTime BusinessCenterTime (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "expirationTime"]
	multipleExercise MultipleExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "multipleExercise"]
	exerciseFeeSchedule ExerciseFeeSchedule (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseFeeSchedule"]


type BrokerConfirmation: 
	[synonym FpML_5_10 value "BrokerConfirmation"]

	brokerConfirmationType BrokerConfirmationTypeEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "brokerConfirmationType" meta "brokerConfirmationTypeScheme"]


type CalculationAgent: 
	[synonym FpML_5_10 value "CalculationAgent"]

	calculationAgentPartyReference Party (0..*) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgentPartyReference" meta "href"]
	calculationAgentParty CalculationAgentPartyEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgentParty"]
	calculationAgentBusinessCenter BusinessCenterEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgentBusinessCenter" meta "businessCenterScheme"]

	condition Choice: 
		optional choice calculationAgentPartyReference, calculationAgentParty

type CalculationPeriodFrequency extends Frequency: 
	[synonym FpML_5_10 value "CalculationPeriodFrequency"]

	rollConvention RollConventionEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rollConvention"]

	condition FpML_ird_57: 
		if period = PeriodExtendedEnum -> M or period = PeriodExtendedEnum -> Y
		then rollConvention <> RollConventionEnum -> NONE
			or rollConvention <> RollConventionEnum -> SFE
			or rollConvention <> RollConventionEnum -> MON
			or rollConvention <> RollConventionEnum -> TUE
			or rollConvention <> RollConventionEnum -> WED
			or rollConvention <> RollConventionEnum -> THU
			or rollConvention <> RollConventionEnum -> FRI
			or rollConvention <> RollConventionEnum -> SAT
			or rollConvention <> RollConventionEnum -> SUN

	condition FpML_ird_58: 
		if period = PeriodExtendedEnum -> W
		then rollConvention = RollConventionEnum -> NONE
			or rollConvention = RollConventionEnum -> SFE
			or rollConvention = RollConventionEnum -> MON
			or rollConvention = RollConventionEnum -> TUE
			or rollConvention = RollConventionEnum -> WED
			or rollConvention = RollConventionEnum -> THU
			or rollConvention = RollConventionEnum -> FRI
			or rollConvention = RollConventionEnum -> SAT
			or rollConvention = RollConventionEnum -> SUN

	condition FpML_ird_60: 
		if period = PeriodExtendedEnum -> T
		then rollConvention = RollConventionEnum -> NONE


type CashSettlementReferenceBanks: 
	[synonym FpML_5_10 value "CashSettlementReferenceBanks"]

	referenceBank ReferenceBank (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceBank"]


type Collateral: 
	[synonym FpML_5_10 value "Collateral"]

	independentAmount IndependentAmount (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "independentAmount"]


type ContractualMatrix:
	[synonym FpML_5_10 value "ContractualMatrix"]

	matrixType MatrixTypeEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "matrixType" meta "matrixTypeScheme"]
	publicationDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "publicationDate"]
	matrixTerm MatrixTermEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "matrixTerm" meta "matrixTermScheme"]


type ContractualTermsSupplement: 
	[synonym FpML_5_10 value "ContractualTermsSupplement"]

	contractualTermsSupplementType ContractualSupplementEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "type" meta "contractualSupplementScheme"]
	publicationDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "publicationDate"]


type CreditSupportAgreement: 
	[synonym FpML_5_10 value "CreditSupportAgreement"]

	creditSupportAgreementType CreditSupportAgreementTypeEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "type" meta "creditSupportAgreementTypeScheme"]
	date date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "date"]
	identifierValue string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "identifier"]


type RelatedAgreement: 

	legalAgreement LegalAgreement (0..1) 
		//[metadata reference] // TODO fix bug related to setting null references in func assign-output 
		[synonym Workflow_Event value "legalAgreement"]
		[synonym ISDA_Create_1_0 value "collateral_transfer_agreement" path "answers->partyA"]
		[synonym ISDA_Create_1_0 value "date_of_collateral_transfer_agreement" path "answers->partyA"]
		[synonym ISDA_Create_1_0 value "date_of_isda_master_agreement" path "answers->partyA"]
		[synonym ISDA_Create_1_0 value "date_of_euroclear_security_agreement" path "answers->partyA"]
		[synonym ISDA_Create_1_0 value "isda_master_agreement_form" path "answers->partyA"]
		[synonym FpML_5_10 value "ignore"] // TODO remove when migrating from documentationIdentification to legalAgreement (and update cardinality to 1..1)
	documentationIdentification DocumentationIdentification (0..1) 
		[synonym ISDA_Create_1_0 value "ignore"]


type DocumentationIdentification: 
	[synonym FpML_5_10 value "Documentation"]
	//TODO - type will be deprecated when all information has been mapped to LegalAgreementBase and synonyms moved.

	masterAgreement MasterAgreement (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterAgreement"]
	masterConfirmation MasterConfirmation (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterConfirmation"]
	brokerConfirmation BrokerConfirmation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "brokerConfirmation"]
	contractualDefinitions ContractualDefinitionsEnum (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "contractualDefinitions" meta "contractualDefinitionsScheme"]
	contractualTermsSupplement ContractualTermsSupplement (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "contractualTermsSupplement"]
	contractualMatrix ContractualMatrix (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "contractualMatrix"]
	creditSupportAgreement CreditSupportAgreement (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditSupportAgreement"]
	otherAgreement OtherAgreement (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "otherAgreement"]
	attachment Resource (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "attachment"]

	condition ConfirmationChoice: 
		optional choice masterConfirmation, brokerConfirmation

type EuropeanExercise: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EuropeanExercise" meta "id"]

	expirationDate AdjustableOrRelativeDate (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "expirationDate"]
	relevantUnderlyingDate AdjustableOrRelativeDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relevantUnderlyingDate"]
	earliestExerciseTime BusinessCenterTime (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "earliestExerciseTime"]
	expirationTime BusinessCenterTime (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "expirationTime"]
	partialExercise PartialExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partialExercise"]
	exerciseFee ExerciseFee (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseFee"]


/*
 * In the below notional has been changed to be of type NotionalSchedule
 */
type ExerciseFee extends BuyerSeller: 
	[synonym FpML_5_10 value "ExerciseFee"]
	notionalReference Money (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalReference" meta "href"]
	feeAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "feeAmount"]
	feeRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "feeRate"]
	feePaymentDate RelativeDateOffset (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "feePaymentDate"]

	condition Choice: 
		required choice feeAmount, feeRate

/*
 * In the below notional has been changed to be of type NotionalSchedule
 */
type ExerciseFeeSchedule extends PayerReceiver: 
	[synonym FpML_5_10 value "ExerciseFeeSchedule"]

	notionalReference Money (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalReference" meta "href"]
	feeAmountSchedule AmountSchedule (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "feeAmountSchedule"]
	feeRateSchedule Schedule (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "feeRateSchedule"]
	feePaymentDate RelativeDateOffset (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "feePaymentDate"]

	condition Choice: 
		required choice feeAmountSchedule, feeRateSchedule

type ExerciseNotice: 
	[synonym FpML_5_10 value "ExerciseNotice"]

	partyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyReference" meta "href"]
	exerciseNoticePartyReference Party (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseNoticePartyReference" meta "href"]
	businessCenter BusinessCenterEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenter" meta "businessCenterScheme"]


type ExerciseProcedure: 
	[synonym FpML_5_10 value "ExerciseProcedure"]

	manualExercise ManualExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "manualExercise"]
	automaticExercise AutomaticExercise (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "automaticExercise"]
	followUpConfirmation boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "followUpConfirmation"]
	limitedRightToConfirm boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "limitedRightToConfirm"]
	splitTicket boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "splitTicket"]

	condition Choice: 
		required choice manualExercise, automaticExercise

type FloatingRateOption: 

	floatingRateIndex FloatingRateIndexEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateIndex"  maps 2 meta "floatingRateIndexScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateIndex" path "floatingRate" meta "floatingRateIndexScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateIndex"]
		[synonym FpML_5_10 value "floatingRateIndex"]
	indexTenor Period (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexTenor", "indexTenor" path "floatingRate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexTenor"]
		[synonym FpML_5_10 value "indexTenor"]

type FloatingRate extends RateSpecificationBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FloatingRate" meta "id"]
	
	floatingRateMultiplierSchedule Schedule (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateMultiplierSchedule"]
	spreadSchedule SpreadSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "spreadSchedule"]
	rateTreatment RateTreatmentEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateTreatment"]
	capRateSchedule StrikeSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "capRateSchedule"]
	floorRateSchedule StrikeSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floorRateSchedule"]
	

type FloatingRateSpecification extends FloatingRate: 
	[synonym FpML_5_10 value "FloatingRateCalculation"]
	
	initialRate number (0..1) 
		[deprecated]
	finalRateRounding Rounding (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "finalRateRounding", "finalRateRounding" path "floatingRate"]
	averagingMethod AveragingMethodEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingMethod", "averagingMethod" path "floatingRate"]
	negativeInterestRateTreatment NegativeInterestRateTreatmentEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "negativeInterestRateTreatment", "negativeInterestRateTreatment" path "floatingRate"]

	condition RateOptionAssetIdentifier: 
		assetIdentifier -> rateOption only exists

type FutureValueAmount: 
	[synonym FpML_5_10 value "FutureValueAmount"]

	currency string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" maps 2 meta "currencyScheme"]
	calculationPeriodNumberOfDays int (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodNumberOfDays"]
	valueDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "valueDate"]

	condition PositiveCalculationPeriodNumberOfDays: 
		if FutureValueAmount exists
		then calculationPeriodNumberOfDays >= 0

type FxRate: 
	[synonym FpML_5_10 value "FxRate"]

	quotedCurrencyPair QuotedCurrencyPair (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quotedCurrencyPair"]
	rate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rate"]


type FxSpotRateSource: 
	[synonym FpML_5_10 value "FxSpotRateSource"]

	primaryRateSource InformationSource (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "primaryRateSource"]
	secondaryRateSource InformationSource (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "secondaryRateSource"]
	fixingTime BusinessCenterTime (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixingTime"]


type IndependentAmount extends PayerReceiver: 
	[synonym FpML_5_10 value "IndependentAmount"]

	paymentDetail PaymentDetail (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDetail"]


type InformationSource: 
	[synonym FpML_5_10 value "InformationSource"]

	sourceProvider InformationProviderEnum (1..1)  
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateSource" meta "informationProviderScheme"]
		[synonym FIX_5_0_SP2 value "RateSource" tag 1446]
	sourcePage string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateSourcePage" meta "rateSourcePageScheme"]
	sourcePageHeading string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateSourcePageHeading"]


type InitialFixingDate: 

	relativeDateOffset RelativeDateOffset (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialFixingDate" path "resetDates"]
	initialFixingDate date (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialFixingDate" path "periodicPayment->floatingAmountCalculation"]
	condition: one-of

type IssuerTradeId: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10 value "IssuerTradeId"]

	issuer string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "issuer" meta "issuerIdScheme"]
	identifier string (0..1) 
		[metadata scheme]
		[metadata id]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "tradeId" meta "id", "tradeIdScheme"]


type LastRegularPaymentDate: 

	lastRegularPaymentDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "lastRegularPaymentDate"]
	finalPaymentDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDateFinal"]
	condition: one-of

type ManualExercise: 
	[synonym FpML_5_10 value "ManualExercise"]

	exerciseNotice ExerciseNotice (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseNotice"]
	fallbackExercise boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fallbackExercise"]


type MasterAgreement: 
	[synonym FpML_5_10 value "MasterAgreement"]

	masterAgreementId string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterAgreementId" meta "masterAgreementIdScheme"]
	masterAgreementType MasterAgreementTypeEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterAgreementType" meta "masterAgreementTypeScheme"]
	masterAgreementVersion string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterAgreementVersion" meta "masterAgreementVersionScheme"]
	masterAgreementDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterAgreementDate"]
        [synonym ISDA_Create_1_0 value "master_agreement_date" path "date_of_isda_master_agreement" maps 2] // TODO: remove "maps 2" once migration complete

type MasterConfirmation: 
	[synonym FpML_5_10 value "MasterConfirmation"]

	masterConfirmationType MasterConfirmationTypeEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterConfirmationType" meta "masterConfirmationTypeScheme"]
	masterConfirmationDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterConfirmationDate"]
	masterConfirmationAnnexDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterConfirmationAnnexDate"]
	masterConfirmationAnnexType MasterConfirmationAnnexTypeEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "masterConfirmationAnnexType" meta "masterConfirmationAnnexTypeScheme"]

type Money: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Money" meta "id"]
	currency string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" maps 2 meta "currencyScheme"]
	amount number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "amount" maps 2]

type MultipleExercise extends PartialExercise: 
	[synonym FpML_5_10 value "MultipleExercise"]

	maximumNotionalAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "maximumNotionalAmount"]
	maximumNumberOfOptions number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "maximumNumberOfOptions"]
	condition: one-of

	condition MaximumNumberOfOptions: 
		if maximumNumberOfOptions exists
		then maximumNotionalAmount >= 0.0
	condition MinimumNumberOfOptions: 
		if minimumNumberOfOptions exists
		then minimumNumberOfOptions >= 0

type OptionPhysicalSettlement:
	[synonym FpML_5_10 value "SwaptionPhysicalSettlement"]

	clearedPhysicalSettlement boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "clearedPhysicalSettlement"]
	predeterminedClearingOrganizationPartyReference Party (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "predeterminedClearingOrganizationPartyReference" meta "href"]

type OtherAgreement: 
	[synonym FpML_5_10 value "OtherAgreement"]

	identifier string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "identifier" meta "agreementIdScheme"]
	otherAgreementType string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "type" meta "agreementTypeScheme"]
	version string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "version" meta "agreementVersionScheme"]
	date date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "date"]
		[synonym ISDA_Create_1_0 value "collateral_transfer_agreement_date" path "collateral_transfer_agreement"]

type PartialExercise: 
	[synonym FpML_5_10 value "PartialExercise"]

	notionaReference Money (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalReference" meta "href"]
	integralMultipleAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "integralMultipleAmount"]
	minimumNotionalAmount number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "minimumNotionalAmount"]
	minimumNumberOfOptions int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "minimumNumberOfOptions"]
	condition MinimumChoice: 
		required choice minimumNotionalAmount, minimumNumberOfOptions

type PaymentDates: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PaymentDates" meta "id"]
	[synonym FpML_5_10 value "PaymentDates" meta "id" path "interestLegCalculationPeriodDates"]

	dateRelativeTo date (0..1) 
		[metadata reference]
		[synonym FpML_5_10 value "dateRelativeTo" path "paymentDatesInterim->relativeDates" meta "href"]
		[synonym FpML_5_10 value "dateRelativeTo" path "relativeDates" meta "href"]
	paymentFrequency Frequency (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentFrequency"]
	firstPaymentDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "firstPaymentDate"]
	lastPaymentDate LastRegularPaymentDate (0..1) 
	payRelativeTo PayRelativeToEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "payRelativeTo"]
	paymentDaysOffset Offset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDaysOffset"]
		[synonym FpML_5_10 value "relativeDates" path "paymentDatesInterim", "relativeDates"]
	paymentDatesAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDatesAdjustments"]
		[synonym FpML_5_10 value "relativeDates" path "paymentDatesInterim"]

	condition FpML_ird_35_cd_31: 
		if firstPaymentDate exists
			and lastPaymentDate -> lastRegularPaymentDate exists
		then firstPaymentDate < lastPaymentDate -> lastRegularPaymentDate

	condition NonZeroPeriodMultiplier: 
		if paymentDaysOffset exists
		then paymentDaysOffset -> periodMultiplier <> 0

	condition DateRelativeTo: 
		if dateRelativeTo exists
		then ( paymentDaysOffset
			and paymentDatesAdjustments) exists

type PaymentDetail:
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PaymentDetail" meta "id"]

	paymentDate AdjustableOrRelativeDate (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDate"]
	paymentRule PaymentRule (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentRule"]
	paymentAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentAmount"]


type PaymentDiscounting: 

	discountFactor number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discountFactor"]
	presentValueAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "presentValueAmount"]


type PaymentRule: 
	[synonym FpML_5_10 value "PaymentRule"]

	percentageRule PercentageRule (0..1) 

type PremiumExpression: 

	premiumType PremiumTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "premiumType"]
	/*
	 * Is the premiumType usage intended to be limited to forward start options?  
	 * See some further comments/questions associated with the PremiumTypeEnum
	 */
	pricePerOption Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "pricePerOption"]
	percentageOfNotional number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "percentageOfNotional"]


// TODO - #1 Look for further synergies with the option strike
type Price: 

	cashPrice CashPrice (0..1) 
		[synonym FpML_5_10 value "initialPrice" path "rateOfReturn", "underlyer"]
		[synonym FpML_5_10 hint "paymentAmount"]
		[synonym FpML_5_10 hint "fixedAmount"]
	exchangeRate ExchangeRate (0..1) 
		[synonym FpML_5_10 value "exchangeRate"]
	fixedInterestRate FixedInterestRate (0..1) 
		// For IR Swaps
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedRateSchedule" path "calculationPeriodAmount->calculation"]
		// For CDS
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmountCalculation"]
		// For Repo
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedRateSchedule"]
		// For FRA:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "fixedRate"]
	floatingInterestRate FloatingInterestRate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation" path "calculationPeriodAmount->calculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation" path "interestCalculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingAmountCalculation"]

	condition: one-of


type PrincipalExchanges: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PrincipalExchanges" meta "id"]

	initialExchange boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialExchange"]
	finalExchange boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "finalExchange"]
	intermediateExchange boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "intermediateExchange"]


type QuotedCurrencyPair: 
	[synonym FpML_5_10 value "QuotedCurrencyPair"]
	currency1 string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency1" meta "currencyScheme"]
	currency2 string (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency2" meta "currencyScheme"]
		[metadata scheme]
	quoteBasis QuoteBasisEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quoteBasis"]

type RateObservation: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RateObservation" meta "id"]

	resetDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resetDate"]
	adjustedFixingDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedFixingDate"]
	observedRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "observedRate"]
	treatedRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "treatedRate"]
	observationWeight int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "observationWeight"]
	rateReference RateObservation (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateReference" meta "href"]
	forecastRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "forecastRate"]
	treatedForecastRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "treatedForecastRate"]

	condition PositiveObservationWeight: 
		if observationWeight exists
		then observationWeight >= 0

type ResetFrequency extends Frequency: 
	[synonym FpML_5_10 value "ResetFrequency"]

	weeklyRollConvention WeeklyRollConventionEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "weeklyRollConvention"]

	condition FpML_ird_49: 
		if weeklyRollConvention exists
		then period = PeriodExtendedEnum -> W


type Resource: 
	[synonym FpML_5_10 value "Resource"]

	resourceId string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resourceId" meta "resourceIdScheme"]
	resourceType ResourceTypeEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "resourceType" meta "resourceTypeScheme"]
	language string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "language" meta "languageScheme"]
	sizeInBytes number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "sizeInBytes"]
	length ResourceLength (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "length"]
	mimeType string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mimeType" meta "mimeTypeScheme"]
	name string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "name"]
	comments string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "comments"]
	string string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "string"]
	url string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "url"]

	condition Choice: 
		optional choice string, url


type ResourceLength: 
	[synonym FpML_5_10 value "ResourceLength"]

	lengthUnit LengthUnitEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "lengthUnit"]
	lengthValue number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "lengthValue"]

type SettlementBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]
	settlementCurrency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementCurrency" meta "currencyScheme"]

type SettlementTerms extends SettlementBase: 
	settlementType SettlementTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementType"]
	settlementDate AdjustableOrRelativeDate (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementDate"]
	valueDate date (0..1) 
		[synonym FpML_5_10 value "valueDate"]
	settlementAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementAmount"]
	transferSettlementType TransferSettlementEnum (0..1) 

	condition Choice: 
		optional choice settlementAmount, settlementCurrency

	condition DateChoice: 
		optional choice settlementDate, valueDate

type SettlementRateSource: 
	[synonym FpML_5_10 value "SettlementRateSource"]

	informationSource InformationSource (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "informationSource"]
	cashSettlementReferenceBanks CashSettlementReferenceBanks (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementReferenceBanks"]
	condition: one-of

type SimplePayment extends PayerReceiver: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SimplePayment" meta "id"]

	paymentAmount Money (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentAmount"]
	paymentDate AdjustableOrRelativeDate (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDate"]

	condition NonNegativePaymentAmount: 
		if paymentAmount exists
		then paymentAmount -> amount > 0.0

type SpreadSchedule extends Schedule: 
	[synonym FpML_5_10 value "SpreadSchedule"]

	spreadScheduleType SpreadScheduleTypeEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SpreadScheduleType" meta "spreadScheduleTypeScheme"]


type Strike: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Strike" meta "id"]

	strikeRate number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "strikeRate"]
		[synonym FIX_5_0_SP2 value "StrikePrice" tag 202]
	buyer PayerReceiverEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "buyer"]
	seller PayerReceiverEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "seller"]


type StrikeSchedule extends Schedule: 
	[synonym FpML_5_10 value "StrikeSchedule"]

	buyer PayerReceiverEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "buyer"]
	seller PayerReceiverEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "seller"]


type StubFloatingRate: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "StubFloatingRate" meta "id"]

	floatingRateIndex FloatingRateIndexEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateIndex"]
	indexTenor Period (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexTenor"]
	floatingRateMultiplierSchedule Schedule (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateMultiplierSchedule"]
	spreadSchedule SpreadSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "spreadSchedule"]
	rateTreatment RateTreatmentEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateTreatment"]
	capRateSchedule StrikeSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "capRateSchedule"]
	floorRateSchedule StrikeSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floorRateSchedule"]


type StubValue: 
	[synonym FpML_5_10 value "StubValue"]

	floatingRate StubFloatingRate (0..2) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRate"]
	stubRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stubRate"]
	stubAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stubAmount"]
	condition: one-of


type TradeDate: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id" path "tradeDate"]

	date date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "tradeDate"]
		[synonym CME_SubmissionIRS_1_0 value "tradeDate" path "Instrmt->SecXML->FpML->trade->tradeHeader" meta "id"]


import cdm.base.*
import cdm.synonyms.config.*

enum CallingPartyEnum: 
	[synonym FpML_5_10 value "CallingPartyEnum"]
	
	InitialBuyer 
		[synonym FpML_5_10 value "InitialBuyer"]
	InitialSeller 
		[synonym FpML_5_10 value "InitialSeller"]
	Either 
		[synonym FpML_5_10 value "Either"]
	AsDefinedInMasterAgreement 
		[synonym FpML_5_10 value "AsDefinedInMasterAgreement"]


enum ClosedStateEnum: 

	Allocated 
		[synonym Workflow_Event value "allocated"]
	Cancelled 
		[synonym Workflow_Event value "cancelled"]
	Exercised 
		[synonym Workflow_Event value "exercised"]
	Expired 
	Matured 
	Novated 
		[synonym Workflow_Event value "novated"]
	Terminated 
		[synonym Workflow_Event value "terminated"]


enum PackageTypeEnum: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "packageTypeScheme_1_0"]
	Butterfly 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Butterfly"]
	CalendarRoll 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CalendarRoll"]
	CalendarSpread 
		[synonym FpML_5_10 , CME_SubmissionIRS_1_0 , CME_ClearedConfirm_1_17 value "CalendarSpread"]
	Custom 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Custom"]
	IndexRoll 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IndexRoll"]
	OneCancelsOthers 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "OneCancelsOthers"]
	SwapSpread 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SwapSpread"]
	Switch 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Switch"]


enum MarginTypeEnum: 

	Cash 
		[synonym FpML_5_10 value "Cash"]
	Instrument 
		[synonym FpML_5_10 value "Instrument"]


enum RepoDurationEnum: 

	Overnight 
		[synonym FpML_5_10 value "Overnight"]
	Term 
		[synonym FpML_5_10 value "Term"]


import cdm.base.*
import cdm.synonyms.config.*

enum FloatingRateIndexEnum: 
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateIndexScheme_2_24"]
	AED_EBOR_Reuters displayName "AED-EBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AED-EBOR-Reuters"]
	AUD_AONIA_OIS_COMPOUND displayName "AUD-AONIA-OIS-COMPOUND"
	style
	OIS 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-AONIA-OIS-COMPOUND"]
	AUD_AONIA_OIS_COMPOUND_SwapMarker displayName "AUD-AONIA-OIS-COMPOUND-SwapMarker" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-AONIA-OIS-COMPOUND-SwapMarker"]
	AUD_BBR_AUBBSW displayName "AUD-BBR-AUBBSW" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-BBR-AUBBSW"]
	AUD_BBR_BBSW displayName "AUD-BBR-BBSW" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-BBR-BBSW"]
	AUD_BBR_BBSW_Bloomberg displayName "AUD-BBR-BBSW-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-BBR-BBSW-Bloomberg"]
	AUD_BBR_BBSY__BID_ displayName "AUD-BBR-BBSY (BID)" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-BBR-BBSY (BID)"]
	AUD_BBR_ISDC displayName "AUD-BBR-ISDC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-BBR-ISDC"]
	AUD_LIBOR_BBA displayName "AUD-LIBOR-BBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-LIBOR-BBA"]
	AUD_LIBOR_BBA_Bloomberg displayName "AUD-LIBOR-BBA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-LIBOR-BBA-Bloomberg"]
	AUD_LIBOR_Reference_Banks displayName "AUD-LIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-LIBOR-Reference Banks"]
	AUD_Quarterly_Swap_Rate_ICAP displayName "AUD-Quarterly Swap Rate-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-Quarterly Swap Rate-ICAP"]
	AUD_Quarterly_Swap_Rate_ICAP_Reference_Banks displayName "AUD-Quarterly Swap Rate-ICAP-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-Quarterly Swap Rate-ICAP-Reference Banks"]
	AUD_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "AUD-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	AUD_Semi_Annual_Swap_Rate_BGCANTOR_Reference_Banks displayName "AUD-Semi-Annual Swap Rate-BGCANTOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-Semi-Annual Swap Rate-BGCANTOR-Reference Banks"]
	AUD_Semi_Annual_Swap_Rate_ICAP_Reference_Banks displayName "AUD-Semi-Annual Swap Rate-ICAP-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-Semi-Annual Swap Rate-ICAP-Reference Banks"]
	AUD_Semi_annual_Swap_Rate_ICAP displayName "AUD-Semi-annual Swap Rate-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-Semi-annual Swap Rate-ICAP"]
	AUD_Swap_Rate_Reuters displayName "AUD-Swap Rate-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AUD-Swap Rate-Reuters"]
	BRL_CDI displayName "BRL-CDI" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BRL-CDI"]
	CAD_BA_CDOR displayName "CAD-BA-CDOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-BA-CDOR"]
	CAD_BA_CDOR_Bloomberg displayName "CAD-BA-CDOR-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-BA-CDOR-Bloomberg"]
	CAD_BA_ISDD displayName "CAD-BA-ISDD" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-BA-ISDD"]
	CAD_BA_Reference_Banks displayName "CAD-BA-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-BA-Reference Banks"]
	CAD_BA_Reuters displayName "CAD-BA-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-BA-Reuters"]
	CAD_BA_Telerate displayName "CAD-BA-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-BA-Telerate"]
	CAD_CORRA_OIS_COMPOUND displayName "CAD-CORRA-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-CORRA-OIS-COMPOUND"]
	CAD_ISDA_Swap_Rate displayName "CAD-ISDA-Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-ISDA-Swap Rate"]
	CAD_LIBOR_BBA displayName "CAD-LIBOR-BBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-LIBOR-BBA"]
	CAD_LIBOR_BBA_Bloomberg displayName "CAD-LIBOR-BBA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-LIBOR-BBA-Bloomberg"]
	CAD_LIBOR_BBA_SwapMarker displayName "CAD-LIBOR-BBA-SwapMarker" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-LIBOR-BBA-SwapMarker"]
	CAD_LIBOR_Reference_Banks displayName "CAD-LIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-LIBOR-Reference Banks"]
	CAD_REPO_CORRA displayName "CAD-REPO-CORRA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-REPO-CORRA"]
	CAD_TBILL_ISDD displayName "CAD-TBILL-ISDD" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-TBILL-ISDD"]
	CAD_TBILL_Reference_Banks displayName "CAD-TBILL-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-TBILL-Reference Banks"]
	CAD_TBILL_Reuters displayName "CAD-TBILL-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-TBILL-Reuters"]
	CAD_TBILL_Telerate displayName "CAD-TBILL-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CAD-TBILL-Telerate"]
	CHF_3M_LIBOR_SWAP_CME_vs_LCH_ICAP displayName "CHF-3M LIBOR SWAP-CME vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-3M LIBOR SWAP-CME vs LCH-ICAP"]
	CHF_3M_LIBOR_SWAP_CME_vs_LCH_ICAP_Bloomberg displayName "CHF-3M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-3M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg"]
	CHF_3M_LIBOR_SWAP_EUREX_vs_LCH_ICAP displayName "CHF-3M LIBOR SWAP-EUREX vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-3M LIBOR SWAP-EUREX vs LCH-ICAP"]
	CHF_3M_LIBOR_SWAP_EUREX_vs_LCH_ICAP_Bloomberg displayName "CHF-3M LIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-3M LIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg"]
	CHF_6M_LIBORSWAP_CME_vs_LCH_ICAP_Bloomberg displayName "CHF-6M LIBORSWAP-CME vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-6M LIBORSWAP-CME vs LCH-ICAP-Bloomberg"]
	CHF_6M_LIBOR_SWAP_CME_vs_LCH_ICAP displayName "CHF-6M LIBOR SWAP-CME vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-6M LIBOR SWAP-CME vs LCH-ICAP"]
	CHF_6M_LIBOR_SWAP_EUREX_vs_LCH_ICAP displayName "CHF-6M LIBOR SWAP-EUREX vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-6M LIBOR SWAP-EUREX vs LCH-ICAP"]
	CHF_6M_LIBOR_SWAP_EUREX_vs_LCH_ICAP_Bloomberg displayName "CHF-6M LIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-6M LIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg"]
	CHF_Annual_Swap_Rate displayName "CHF-Annual Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-Annual Swap Rate"]
	CHF_Annual_Swap_Rate_11_00_ICAP displayName "CHF-Annual Swap Rate-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-Annual Swap Rate-11:00-ICAP"]
	CHF_Annual_Swap_Rate_Reference_Banks displayName "CHF-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-Annual Swap Rate-Reference Banks"]
	CHF_Basis_Swap_3m_vs_6m_LIBOR_11_00_ICAP displayName "CHF-Basis Swap-3m vs 6m-LIBOR-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-Basis Swap-3m vs 6m-LIBOR-11:00-ICAP"]
	CHF_ISDAFIX_Swap_Rate displayName "CHF-ISDAFIX-Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-ISDAFIX-Swap Rate"]
	CHF_LIBOR_BBA displayName "CHF-LIBOR-BBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-LIBOR-BBA"]
	CHF_LIBOR_BBA_Bloomberg displayName "CHF-LIBOR-BBA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-LIBOR-BBA-Bloomberg"]
	CHF_LIBOR_ISDA displayName "CHF-LIBOR-ISDA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-LIBOR-ISDA"]
	CHF_LIBOR_Reference_Banks displayName "CHF-LIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-LIBOR-Reference Banks"]
	CHF_OIS_11_00_ICAP displayName "CHF-OIS-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-OIS-11:00-ICAP"]
	CHF_SARON_OIS_COMPOUND displayName "CHF-SARON-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-SARON-OIS-COMPOUND"]
	CHF_TOIS_OIS_COMPOUND displayName "CHF-TOIS-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF-TOIS-OIS-COMPOUND"]
	CHF_USD_Basis_Swaps_11_00_ICAP displayName "CHF USD-Basis Swaps-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CHF USD-Basis Swaps-11:00-ICAP"]
	CLP_TNA displayName "CLP-TNA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CLP-TNA"]
	CL_CLICP_Bloomberg displayName "CL-CLICP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CL-CLICP-Bloomberg"]
	CNH_HIBOR_Reference_Banks displayName "CNH-HIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNH-HIBOR-Reference Banks"]
	CNH_HIBOR_TMA displayName "CNH-HIBOR-TMA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNH-HIBOR-TMA"]
	CNY_7_Repo_Compounding_Date displayName "CNY 7-Repo Compounding Date" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY 7-Repo Compounding Date"]
	CNY_CNREPOFIX_CFXS_Reuters displayName "CNY-CNREPOFIX=CFXS-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-CNREPOFIX=CFXS-Reuters"]
	CNY_PBOCB_Reuters displayName "CNY-PBOCB-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-PBOCB-Reuters"]
	CNY_Quarterly_7_day_Repo_Non_Deliverable_Swap_Rate_TRADITION displayName "CNY-Quarterly 7 day Repo Non Deliverable Swap Rate-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-Quarterly 7 day Repo Non Deliverable Swap Rate-TRADITION"]
	CNY_Quarterly_7_day_Repo_Non_Deliverable_Swap_Rate_TRADITION_Reference_Banks displayName "CNY-Quarterly 7 day Repo Non Deliverable Swap Rate-TRADITION-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-Quarterly 7 day Repo Non Deliverable Swap Rate-TRADITION-Reference Banks"]
	CNY_SHIBOR_Reuters displayName "CNY-SHIBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-SHIBOR-Reuters"]
	CNY_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "CNY-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	CNY_Semi_Annual_Swap_Rate_Reference_Banks displayName "CNY-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-Semi-Annual Swap Rate-Reference Banks"]
	CNY_Shibor_OIS_Compounding displayName "CNY-Shibor-OIS-Compounding" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CNY-Shibor-OIS-Compounding"]
	COP_IBR_OIS_COMPOUND displayName "COP-IBR-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "COP-IBR-OIS-COMPOUND"]
	CZK_Annual_Swap_Rate_11_00_BGCANTOR displayName "CZK-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CZK-Annual Swap Rate-11:00-BGCANTOR"]
	CZK_Annual_Swap_Rate_Reference_Banks displayName "CZK-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CZK-Annual Swap Rate-Reference Banks"]
	CZK_PRIBOR_PRBO displayName "CZK-PRIBOR-PRBO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CZK-PRIBOR-PRBO"]
	CZK_PRIBOR_Reference_Banks displayName "CZK-PRIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CZK-PRIBOR-Reference Banks"]
	DKK_CIBOR2_Bloomberg displayName "DKK-CIBOR2-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKK-CIBOR2-Bloomberg"]
	DKK_CIBOR2_DKNA13 displayName "DKK-CIBOR2-DKNA13" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKK-CIBOR2-DKNA13"]
	DKK_CIBOR_DKNA13 displayName "DKK-CIBOR-DKNA13" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKK-CIBOR-DKNA13"]
	DKK_CIBOR_DKNA13_Bloomberg displayName "DKK-CIBOR-DKNA13-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKK-CIBOR-DKNA13-Bloomberg"]
	DKK_CIBOR_Reference_Banks displayName "DKK-CIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKK-CIBOR-Reference Banks"]
	DKK_CITA_DKNA14_COMPOUND displayName "DKK-CITA-DKNA14-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKK-CITA-DKNA14-COMPOUND"]
	DKK_DKKOIS_OIS_COMPOUND displayName "DKK-DKKOIS-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "DKK-DKKOIS-OIS-COMPOUND"]
	EUR_3M_EURIBOR_SWAP_CME_vs_LCH_ICAP displayName "EUR-3M EURIBOR SWAP-CME vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-3M EURIBOR SWAP-CME vs LCH-ICAP"]
	EUR_3M_EURIBOR_SWAP_CME_vs_LCH_ICAP_Bloomberg displayName "EUR-3M EURIBOR SWAP-CME vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-3M EURIBOR SWAP-CME vs LCH-ICAP-Bloomberg"]
	EUR_3M_EURIBOR_SWAP_EUREX_vs_LCH_ICAP displayName "EUR-3M EURIBOR SWAP-EUREX vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-3M EURIBOR SWAP-EUREX vs LCH-ICAP"]
	EUR_3M_EURIBOR_SWAP_EUREX_vs_LCH_ICAP_Bloomberg displayName "EUR-3M EURIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-3M EURIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg"]
	EUR_6M_EURIBOR_SWAP_CME_vs_LCH_ICAP displayName "EUR-6M EURIBOR SWAP-CME vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-6M EURIBOR SWAP-CME vs LCH-ICAP"]
	EUR_6M_EURIBOR_SWAP_CME_vs_LCH_ICAP_Bloomberg displayName "EUR-6M EURIBOR SWAP-CME vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-6M EURIBOR SWAP-CME vs LCH-ICAP-Bloomberg"]
	EUR_6M_EURIBOR_SWAP_EUREX_vs_LCH_ICAP displayName "EUR-6M EURIBOR SWAP-EUREX vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-6M EURIBOR SWAP-EUREX vs LCH-ICAP"]
	EUR_6M_EURIBOR_SWAP_EUREX_vs_LCH_ICAP_Bloomberg displayName "EUR-6M EURIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-6M EURIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg"]
	EUR_Annual_Swap_Rate_10_00 displayName "EUR-Annual Swap Rate-10:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-10:00"]
	EUR_Annual_Swap_Rate_10_00_BGCANTOR displayName "EUR-Annual Swap Rate-10:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-10:00-BGCANTOR"]
	EUR_Annual_Swap_Rate_10_00_Bloomberg displayName "EUR-Annual Swap Rate-10:00-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-10:00-Bloomberg"]
	EUR_Annual_Swap_Rate_10_00_ICAP displayName "EUR-Annual Swap Rate-10:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-10:00-ICAP"]
	EUR_Annual_Swap_Rate_10_00_SwapMarker displayName "EUR-Annual Swap Rate-10:00-SwapMarker" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-10:00-SwapMarker"]
	EUR_Annual_Swap_Rate_10_00_TRADITION displayName "EUR-Annual Swap Rate-10:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-10:00-TRADITION"]
	EUR_Annual_Swap_Rate_11_00 displayName "EUR-Annual Swap Rate-11:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-11:00"]
	EUR_Annual_Swap_Rate_11_00_Bloomberg displayName "EUR-Annual Swap Rate-11:00-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-11:00-Bloomberg"]
	EUR_Annual_Swap_Rate_11_00_ICAP displayName "EUR-Annual Swap Rate-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-11:00-ICAP"]
	EUR_Annual_Swap_Rate_11_00_SwapMarker displayName "EUR-Annual Swap Rate-11:00-SwapMarker" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-11:00-SwapMarker"]
	EUR_Annual_Swap_Rate_3_Month displayName "EUR-Annual Swap Rate-3 Month" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-3 Month"]
	EUR_Annual_Swap_Rate_3_Month_SwapMarker displayName "EUR-Annual Swap Rate-3 Month-SwapMarker" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-3 Month-SwapMarker"]
	EUR_Annual_Swap_Rate_4_15_TRADITION displayName "EUR-Annual Swap Rate-4:15-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-4:15-TRADITION"]
	EUR_Annual_Swap_Rate_Reference_Banks displayName "EUR-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-Annual Swap Rate-Reference Banks"]
	EUR_Basis_Swap_EONIA_vs_3m_EUR_IBOR_Swap_Rates_A_360_10_00_ICAP displayName "EUR Basis Swap-EONIA vs 3m EUR+IBOR Swap Rates-A/360-10:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR Basis Swap-EONIA vs 3m EUR+IBOR Swap Rates-A/360-10:00-ICAP"]
	EUR_EONIA_AVERAGE displayName "EUR-EONIA-AVERAGE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-AVERAGE"]
	EUR_EONIA_OIS_10_00_BGCANTOR displayName "EUR-EONIA-OIS-10:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-OIS-10:00-BGCANTOR"]
	EUR_EONIA_OIS_10_00_ICAP displayName "EUR-EONIA-OIS-10:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-OIS-10:00-ICAP"]
	EUR_EONIA_OIS_10_00_TRADITION displayName "EUR-EONIA-OIS-10:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-OIS-10:00-TRADITION"]
	EUR_EONIA_OIS_11_00_ICAP displayName "EUR-EONIA-OIS-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-OIS-11:00-ICAP"]
	EUR_EONIA_OIS_4_15_TRADITION displayName "EUR-EONIA-OIS-4:15-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-OIS-4:15-TRADITION"]
	EUR_EONIA_OIS_COMPOUND displayName "EUR-EONIA-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-OIS-COMPOUND"]
	EUR_EONIA_OIS_COMPOUND_Bloomberg displayName "EUR-EONIA-OIS-COMPOUND-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-OIS-COMPOUND-Bloomberg"]
	EUR_EONIA_Swap_Index displayName "EUR-EONIA-Swap-Index" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EONIA-Swap-Index"]
	EUR_EURIBOR_Act_365 displayName "EUR-EURIBOR-Act/365" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EURIBOR-Act/365"]
	EUR_EURIBOR_Act_365_Bloomberg displayName "EUR-EURIBOR-Act/365-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EURIBOR-Act/365-Bloomberg"]
	EUR_EURIBOR_Annual_Bond_Swap_vs_1m_11_00_ICAP displayName "EUR EURIBOR-Annual Bond Swap vs 1m-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR EURIBOR-Annual Bond Swap vs 1m-11:00-ICAP"]
	EUR_EURIBOR_Basis_Swap_1m_vs_3m_Euribor_11_00_ICAP displayName "EUR EURIBOR-Basis Swap-1m vs 3m-Euribor-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR EURIBOR-Basis Swap-1m vs 3m-Euribor-11:00-ICAP"]
	EUR_EURIBOR_Basis_Swap_3m_vs_6m_11_00_ICAP displayName "EUR EURIBOR-Basis Swap-3m vs 6m-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR EURIBOR-Basis Swap-3m vs 6m-11:00-ICAP"]
	EUR_EURIBOR_Reference_Banks displayName "EUR-EURIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EURIBOR-Reference Banks"]
	EUR_EURIBOR_Reuters displayName "EUR-EURIBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EURIBOR-Reuters"]
	EUR_EURIBOR_Telerate displayName "EUR-EURIBOR-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EURIBOR-Telerate"]
	EUR_EURONIA_OIS_COMPOUND displayName "EUR-EURONIA-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-EURONIA-OIS-COMPOUND"]
	EUR_ISDA_EURIBOR_Swap_Rate_11_00 displayName "EUR-ISDA-EURIBOR Swap Rate-11:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-ISDA-EURIBOR Swap Rate-11:00"]
	EUR_ISDA_EURIBOR_Swap_Rate_12_00 displayName "EUR-ISDA-EURIBOR Swap Rate-12:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-ISDA-EURIBOR Swap Rate-12:00"]
	EUR_ISDA_LIBOR_Swap_Rate_10_00 displayName "EUR-ISDA-LIBOR Swap Rate-10:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-ISDA-LIBOR Swap Rate-10:00"]
	EUR_ISDA_LIBOR_Swap_Rate_11_00 displayName "EUR-ISDA-LIBOR Swap Rate-11:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-ISDA-LIBOR Swap Rate-11:00"]
	EUR_LIBOR_BBA displayName "EUR-LIBOR-BBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-LIBOR-BBA"]
	EUR_LIBOR_BBA_Bloomberg displayName "EUR-LIBOR-BBA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-LIBOR-BBA-Bloomberg"]
	EUR_LIBOR_Reference_Banks displayName "EUR-LIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-LIBOR-Reference Banks"]
	EUR_TAM_CDC displayName "EUR-TAM-CDC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TAM-CDC"]
	EUR_TEC10_CNO displayName "EUR-TEC10-CNO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TEC10-CNO"]
	EUR_TEC10_CNO_SwapMarker displayName "EUR-TEC10-CNO-SwapMarker" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TEC10-CNO-SwapMarker"]
	EUR_TEC10_Reference_Banks displayName "EUR-TEC10-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TEC10-Reference Banks"]
	EUR_TEC5_CNO displayName "EUR-TEC5-CNO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TEC5-CNO"]
	EUR_TEC5_CNO_SwapMarker displayName "EUR-TEC5-CNO-SwapMarker" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TEC5-CNO-SwapMarker"]
	EUR_TEC5_Reference_Banks displayName "EUR-TEC5-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TEC5-Reference Banks"]
	EUR_TMM_CDC_COMPOUND displayName "EUR-TMM-CDC-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR-TMM-CDC-COMPOUND"]
	EUR_USD_Basis_Swaps_11_00_ICAP displayName "EUR USD-Basis Swaps-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "EUR USD-Basis Swaps-11:00-ICAP"]
	GBP_6M_LIBOR_SWAP_CME_vs_LCH_ICAP displayName "GBP-6M LIBOR SWAP-CME vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-6M LIBOR SWAP-CME vs LCH-ICAP"]
	GBP_6M_LIBOR_SWAP_CME_vs_LCH_ICAP_Bloomberg displayName "GBP-6M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-6M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg"]
	GBP_6M_LIBOR_SWAP_EUREX_vs_LCH_ICAP displayName "GBP-6M LIBOR SWAP-EUREX vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-6M LIBOR SWAP-EUREX vs LCH-ICAP"]
	GBP_6M_LIBOR_SWAP_EUREX_vs_LCH_ICAP_Bloomberg displayName "GBP-6M LIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-6M LIBOR SWAP-EUREX vs LCH-ICAP-Bloomberg"]
	GBP_ISDA_Swap_Rate displayName "GBP-ISDA-Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-ISDA-Swap Rate"]
	GBP_LIBOR_BBA displayName "GBP-LIBOR-BBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-LIBOR-BBA"]
	GBP_LIBOR_BBA_Bloomberg displayName "GBP-LIBOR-BBA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-LIBOR-BBA-Bloomberg"]
	GBP_LIBOR_ISDA displayName "GBP-LIBOR-ISDA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-LIBOR-ISDA"]
	GBP_LIBOR_Reference_Banks displayName "GBP-LIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-LIBOR-Reference Banks"]
	GBP_SONIA_COMPOUND displayName "GBP-SONIA-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-SONIA-COMPOUND"]
	GBP_SONIA_OIS_11_00_ICAP displayName "GBP-SONIA-OIS-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-SONIA-OIS-11:00-ICAP"]
	GBP_SONIA_OIS_11_00_TRADITION displayName "GBP-SONIA-OIS-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-SONIA-OIS-11:00-TRADITION"]
	GBP_SONIA_OIS_4_15_TRADITION displayName "GBP-SONIA-OIS-4:15-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-SONIA-OIS-4:15-TRADITION"]
	GBP_Semi_Annual_Swap_Rate displayName "GBP-Semi-Annual Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-Semi-Annual Swap Rate"]
	GBP_Semi_Annual_Swap_Rate_11_00_ICAP displayName "GBP-Semi-Annual Swap Rate-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-Semi-Annual Swap Rate-11:00-ICAP"]
	GBP_Semi_Annual_Swap_Rate_11_00_TRADITION displayName "GBP-Semi Annual Swap Rate-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-Semi Annual Swap Rate-11:00-TRADITION"]
	GBP_Semi_Annual_Swap_Rate_4_15_TRADITION displayName "GBP-Semi Annual Swap Rate-4:15-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-Semi Annual Swap Rate-4:15-TRADITION"]
	GBP_Semi_Annual_Swap_Rate_Reference_Banks displayName "GBP-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-Semi-Annual Swap Rate-Reference Banks"]
	GBP_Semi_Annual_Swap_Rate_SwapMarker26 displayName "GBP-Semi-Annual Swap Rate-SwapMarker26" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-Semi-Annual Swap Rate-SwapMarker26"]
	GBP_USD_Basis_Swaps_11_00_ICAP displayName "GBP USD-Basis Swaps-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP USD-Basis Swaps-11:00-ICAP"]
	GBP_WMBA_RONIA_COMPOUND displayName "GBP-WMBA-RONIA-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-WMBA-RONIA-COMPOUND"]
	GBP_WMBA_SONIA_COMPOUND displayName "GBP-WMBA-SONIA-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GBP-WMBA-SONIA-COMPOUND"]
	GRD_ATHIBOR_ATHIBOR displayName "GRD-ATHIBOR-ATHIBOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GRD-ATHIBOR-ATHIBOR"]
	GRD_ATHIBOR_Reference_Banks displayName "GRD-ATHIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GRD-ATHIBOR-Reference Banks"]
	GRD_ATHIBOR_Telerate displayName "GRD-ATHIBOR-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GRD-ATHIBOR-Telerate"]
	GRD_ATHIMID_Reference_Banks displayName "GRD-ATHIMID-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GRD-ATHIMID-Reference Banks"]
	GRD_ATHIMID_Reuters displayName "GRD-ATHIMID-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "GRD-ATHIMID-Reuters"]
	HKD_HIBOR_HIBOR_ displayName "HKD-HIBOR-HIBOR=" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-HIBOR-HIBOR="]
	HKD_HIBOR_HIBOR_Bloomberg displayName "HKD-HIBOR-HIBOR-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-HIBOR-HIBOR-Bloomberg"]
	HKD_HIBOR_HKAB displayName "HKD-HIBOR-HKAB" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-HIBOR-HKAB"]
	HKD_HIBOR_HKAB_Bloomberg displayName "HKD-HIBOR-HKAB-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-HIBOR-HKAB-Bloomberg"]
	HKD_HIBOR_ISDC displayName "HKD-HIBOR-ISDC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-HIBOR-ISDC"]
	HKD_HIBOR_Reference_Banks displayName "HKD-HIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-HIBOR-Reference Banks"]
	HKD_HONIX_OIS_COMPOUND displayName "HKD-HONIX-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-HONIX-OIS-COMPOUND"]
	HKD_ISDA_Swap_Rate_11_00 displayName "HKD-ISDA-Swap Rate-11:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-ISDA-Swap Rate-11:00"]
	HKD_ISDA_Swap_Rate_4_00 displayName "HKD-ISDA-Swap Rate-4:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-ISDA-Swap Rate-4:00"]
	HKD_Quarterly_Annual_Swap_Rate_11_00_BGCANTOR displayName "HKD-Quarterly-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-Quarterly-Annual Swap Rate-11:00-BGCANTOR"]
	HKD_Quarterly_Annual_Swap_Rate_11_00_TRADITION displayName "HKD-Quarterly-Annual Swap Rate-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-Quarterly-Annual Swap Rate-11:00-TRADITION"]
	HKD_Quarterly_Annual_Swap_Rate_4_00_BGCANTOR displayName "HKD-Quarterly-Annual Swap Rate-4:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-Quarterly-Annual Swap Rate-4:00-BGCANTOR"]
	HKD_Quarterly_Annual_Swap_Rate_Reference_Banks displayName "HKD-Quarterly-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-Quarterly-Annual Swap Rate-Reference Banks"]
	HKD_Quarterly_Quarterly_Swap_Rate_11_00_ICAP displayName "HKD-Quarterly-Quarterly Swap Rate-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-Quarterly-Quarterly Swap Rate-11:00-ICAP"]
	HKD_Quarterly_Quarterly_Swap_Rate_4_00_ICAP displayName "HKD-Quarterly-Quarterly Swap Rate-4:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-Quarterly-Quarterly Swap Rate-4:00-ICAP"]
	HKD_Quarterly_Quarterly_Swap_Rate_Reference_Banks displayName "HKD-Quarterly-Quarterly Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HKD-Quarterly-Quarterly Swap Rate-Reference Banks"]
	HUF_BUBOR_Reference_Banks displayName "HUF-BUBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HUF-BUBOR-Reference Banks"]
	HUF_BUBOR_Reuters displayName "HUF-BUBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "HUF-BUBOR-Reuters"]
	IDR_IDMA_Bloomberg displayName "IDR-IDMA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-IDMA-Bloomberg"]
	IDR_IDRFIX displayName "IDR-IDRFIX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-IDRFIX"]
	IDR_JIBOR_Reuters displayName "IDR-JIBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-JIBOR-Reuters"]
	IDR_SBI_Reuters displayName "IDR-SBI-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-SBI-Reuters"]
	IDR_SOR_Reference_Banks displayName "IDR-SOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-SOR-Reference Banks"]
	IDR_SOR_Reuters displayName "IDR-SOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-SOR-Reuters"]
	IDR_SOR_Telerate displayName "IDR-SOR-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-SOR-Telerate"]
	IDR_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "IDR-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	IDR_Semi_Annual_Swap_Rate_Reference_Banks displayName "IDR-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IDR-Semi-Annual Swap Rate-Reference Banks"]
	ILS_TELBOR01_Reuters displayName "ILS-TELBOR01-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ILS-TELBOR01-Reuters"]
	ILS_TELBOR_Reference_Banks displayName "ILS-TELBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ILS-TELBOR-Reference Banks"]
	INR_BMK displayName "INR-BMK" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-BMK"]
	INR_CMT displayName "INR-CMT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-CMT"]
	INR_FBIL_MIBOR_OIS_COMPOUND displayName "INR-FBIL-MIBOR-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-FBIL-MIBOR-OIS-COMPOUND"]
	INR_INBMK_REUTERS displayName "INR-INBMK-REUTERS" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-INBMK-REUTERS"]
	INR_MIBOR_OIS_COMPOUND displayName "INR-MIBOR-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-MIBOR-OIS-COMPOUND"]
	INR_MIFOR displayName "INR-MIFOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-MIFOR"]
	INR_MIOIS displayName "INR-MIOIS" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-MIOIS"]
	INR_MITOR_OIS_COMPOUND displayName "INR-MITOR-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-MITOR-OIS-COMPOUND"]
	INR_Reference_Banks displayName "INR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-Reference Banks"]
	INR_Semi_Annual_Swap_Rate_11_30_BGCANTOR displayName "INR-Semi-Annual Swap Rate-11:30-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-Semi-Annual Swap Rate-11:30-BGCANTOR"]
	INR_Semi_Annual_Swap_Rate_Non_deliverable_16_00_Tullett_Prebon displayName "INR-Semi Annual Swap Rate-Non-deliverable-16:00-Tullett Prebon" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-Semi Annual Swap Rate-Non-deliverable-16:00-Tullett Prebon"]
	INR_Semi_Annual_Swap_Rate_Reference_Banks displayName "INR-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "INR-Semi-Annual Swap Rate-Reference Banks"]
	ISK_REIBOR_Reference_Banks displayName "ISK-REIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISK-REIBOR-Reference Banks"]
	ISK_REIBOR_Reuters displayName "ISK-REIBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ISK-REIBOR-Reuters"]
	JPY_Annual_Swap_Rate_11_00_TRADITION displayName "JPY-Annual Swap Rate-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-Annual Swap Rate-11:00-TRADITION"]
	JPY_Annual_Swap_Rate_3_00_TRADITION displayName "JPY-Annual Swap Rate-3:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-Annual Swap Rate-3:00-TRADITION"]
	JPY_BBSF_Bloomberg_10_00 displayName "JPY-BBSF-Bloomberg-10:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-BBSF-Bloomberg-10:00"]
	JPY_BBSF_Bloomberg_15_00 displayName "JPY-BBSF-Bloomberg-15:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-BBSF-Bloomberg-15:00"]
	JPY_ISDA_Swap_Rate_10_00 displayName "JPY-ISDA-Swap Rate-10:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-ISDA-Swap Rate-10:00"]
	JPY_ISDA_Swap_Rate_15_00 displayName "JPY-ISDA-Swap Rate-15:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-ISDA-Swap Rate-15:00"]
	JPY_LIBOR_BBA displayName "JPY-LIBOR-BBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-LIBOR-BBA"]
	JPY_LIBOR_BBA_Bloomberg displayName "JPY-LIBOR-BBA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-LIBOR-BBA-Bloomberg"]
	JPY_LIBOR_FRASETT displayName "JPY-LIBOR-FRASETT" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-LIBOR-FRASETT"]
	JPY_LIBOR_ISDA displayName "JPY-LIBOR-ISDA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-LIBOR-ISDA"]
	JPY_LIBOR_Reference_Banks displayName "JPY-LIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-LIBOR-Reference Banks"]
	JPY_LTPR_MHCB displayName "JPY-LTPR-MHCB" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-LTPR-MHCB"]
	JPY_LTPR_TBC displayName "JPY-LTPR-TBC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-LTPR-TBC"]
	JPY_MUTANCALL_TONAR displayName "JPY-MUTANCALL-TONAR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-MUTANCALL-TONAR"]
	JPY_OIS_11_00_ICAP displayName "JPY-OIS-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-OIS-11:00-ICAP"]
	JPY_OIS_11_00_TRADITION displayName "JPY-OIS-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-OIS-11:00-TRADITION"]
	JPY_OIS_3_00_TRADITION displayName "JPY-OIS-3:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-OIS-3:00-TRADITION"]
	JPY_Quoting_Banks_LIBOR displayName "JPY-Quoting Banks-LIBOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-Quoting Banks-LIBOR"]
	JPY_STPR_Quoting_Banks displayName "JPY-STPR-Quoting Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-STPR-Quoting Banks"]
	JPY_TIBOR_17096 displayName "JPY-TIBOR-17096" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-17096"]
	JPY_TIBOR_17097 displayName "JPY-TIBOR-17097" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-17097"]
	JPY_TIBOR_DTIBOR01 displayName "JPY-TIBOR-DTIBOR01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-DTIBOR01"]
	JPY_TIBOR_TIBM displayName "JPY-TIBOR-TIBM" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-TIBM"]
	JPY_TIBOR_TIBM_Reference_Banks displayName "JPY-TIBOR-TIBM-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-TIBM-Reference Banks"]
	JPY_TIBOR_TIBM__10_Banks_ displayName "JPY-TIBOR-TIBM (10 Banks)" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-TIBM (10 Banks)"]
	JPY_TIBOR_TIBM__5_Banks_ displayName "JPY-TIBOR-TIBM (5 Banks)" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-TIBM (5 Banks)"]
	JPY_TIBOR_TIBM__All_Banks_ displayName "JPY-TIBOR-TIBM (All Banks)" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-TIBM (All Banks)"]
	JPY_TIBOR_TIBM__All_Banks__Bloomberg displayName "JPY-TIBOR-TIBM (All Banks)-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-TIBM (All Banks)-Bloomberg"]
	JPY_TIBOR_ZTIBOR displayName "JPY-TIBOR-ZTIBOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TIBOR-ZTIBOR"]
	JPY_TONA_OIS_COMPOUND displayName "JPY-TONA-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TONA-OIS-COMPOUND"]
	JPY_TSR_Reference_Banks displayName "JPY-TSR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TSR-Reference Banks"]
	JPY_TSR_Reuters_10_00 displayName "JPY-TSR-Reuters-10:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TSR-Reuters-10:00"]
	JPY_TSR_Reuters_15_00 displayName "JPY-TSR-Reuters-15:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TSR-Reuters-15:00"]
	JPY_TSR_Telerate_10_00 displayName "JPY-TSR-Telerate-10:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TSR-Telerate-10:00"]
	JPY_TSR_Telerate_15_00 displayName "JPY-TSR-Telerate-15:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY-TSR-Telerate-15:00"]
	JPY_USD_Basis_Swaps_11_00_ICAP displayName "JPY USD-Basis Swaps-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "JPY USD-Basis Swaps-11:00-ICAP"]
	KRW_Bond_3222 displayName "KRW-Bond-3222" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW-Bond-3222"]
	KRW_CD_3220 displayName "KRW-CD-3220" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW-CD-3220"]
	KRW_CD_KSDA_Bloomberg displayName "KRW-CD-KSDA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW-CD-KSDA-Bloomberg"]
	KRW_Quarterly_Annual_Swap_Rate_3_30_ICAP displayName "KRW-Quarterly Annual Swap Rate-3:30-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "KRW-Quarterly Annual Swap Rate-3:30-ICAP"]
	MXN_TIIE_Banxico displayName "MXN-TIIE-Banxico" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXN-TIIE-Banxico"]
	MXN_TIIE_Banxico_Bloomberg displayName "MXN-TIIE-Banxico-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXN-TIIE-Banxico-Bloomberg"]
	MXN_TIIE_Banxico_Reference_Banks displayName "MXN-TIIE-Banxico-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MXN-TIIE-Banxico-Reference Banks"]
	MYR_KLIBOR_BNM displayName "MYR-KLIBOR-BNM" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR-KLIBOR-BNM"]
	MYR_KLIBOR_Reference_Banks displayName "MYR-KLIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR-KLIBOR-Reference Banks"]
	MYR_Quarterly_Swap_Rate_11_00_TRADITION displayName "MYR-Quarterly Swap Rate-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR-Quarterly Swap Rate-11:00-TRADITION"]
	MYR_Quarterly_Swap_Rate_TRADITION_Reference_Banks displayName "MYR-Quarterly Swap Rate-TRADITION-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "MYR-Quarterly Swap Rate-TRADITION-Reference Banks"]
	NOK_NIBOR_NIBR displayName "NOK-NIBOR-NIBR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NOK-NIBOR-NIBR"]
	NOK_NIBOR_NIBR_Reference_Banks displayName "NOK-NIBOR-NIBR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NOK-NIBOR-NIBR-Reference Banks"]
	NOK_NIBOR_OIBOR displayName "NOK-NIBOR-OIBOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NOK-NIBOR-OIBOR"]
	NOK_NIBOR_Reference_Banks displayName "NOK-NIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NOK-NIBOR-Reference Banks"]
	NZD_BBR_BID displayName "NZD-BBR-BID" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-BBR-BID"]
	NZD_BBR_FRA displayName "NZD-BBR-FRA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-BBR-FRA"]
	NZD_BBR_ISDC displayName "NZD-BBR-ISDC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-BBR-ISDC"]
	NZD_BBR_Reference_Banks displayName "NZD-BBR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-BBR-Reference Banks"]
	NZD_BBR_Telerate displayName "NZD-BBR-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-BBR-Telerate"]
	NZD_NZIONA_OIS_COMPOUND displayName "NZD-NZIONA-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-NZIONA-OIS-COMPOUND"]
	NZD_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "NZD-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	NZD_Semi_Annual_Swap_Rate_BGCANTOR_Reference_Banks displayName "NZD-Semi-Annual Swap Rate-BGCANTOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-Semi-Annual Swap Rate-BGCANTOR-Reference Banks"]
	NZD_Swap_Rate_ICAP displayName "NZD-Swap Rate-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-Swap Rate-ICAP"]
	NZD_Swap_Rate_ICAP_Reference_Banks displayName "NZD-Swap Rate-ICAP-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "NZD-Swap Rate-ICAP-Reference Banks"]
	PHP_PHIREF_BAP displayName "PHP-PHIREF-BAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP-PHIREF-BAP"]
	PHP_PHIREF_Bloomberg displayName "PHP-PHIREF-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP-PHIREF-Bloomberg"]
	PHP_PHIREF_Reference_Banks displayName "PHP-PHIREF-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP-PHIREF-Reference Banks"]
	PHP_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "PHP-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	PHP_Semi_Annual_Swap_Rate_Reference_Banks displayName "PHP-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PHP-Semi-Annual Swap Rate-Reference Banks"]
	PLN_POLONIA_OIS_COMPOUND displayName "PLN-POLONIA-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLN-POLONIA-OIS-COMPOUND"]
	PLN_WIBOR_Reference_Banks displayName "PLN-WIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLN-WIBOR-Reference Banks"]
	PLN_WIBOR_WIBO displayName "PLN-WIBOR-WIBO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLN-WIBOR-WIBO"]
	PLZ_WIBOR_Reference_Banks displayName "PLZ-WIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLZ-WIBOR-Reference Banks"]
	PLZ_WIBOR_WIBO displayName "PLZ-WIBOR-WIBO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "PLZ-WIBOR-WIBO"]
	REPOFUNDS_RATE_FRANCE_OIS_COMPOUND displayName "REPOFUNDS RATE-FRANCE-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "REPOFUNDS RATE-FRANCE-OIS-COMPOUND"]
	REPOFUNDS_RATE_GERMANY_OIS_COMPOUND displayName "REPOFUNDS RATE-GERMANY-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "REPOFUNDS RATE-GERMANY-OIS-COMPOUND"]
	REPOFUNDS_RATE_ITALY_OIS_COMPOUND displayName "REPOFUNDS RATE-ITALY-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "REPOFUNDS RATE-ITALY-OIS-COMPOUND"]
	RON_Annual_Swap_Rate_11_00_BGCANTOR displayName "RON-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RON-Annual Swap Rate-11:00-BGCANTOR"]
	RON_Annual_Swap_Rate_Reference_Banks displayName "RON-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RON-Annual Swap Rate-Reference Banks"]
	RON_RBOR_Reuters displayName "RON-RBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RON-RBOR-Reuters"]
	RUB_Annual_Swap_Rate_11_00_BGCANTOR displayName "RUB-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-Annual Swap Rate-11:00-BGCANTOR"]
	RUB_Annual_Swap_Rate_12_45_TRADITION displayName "RUB-Annual Swap Rate-12:45-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-Annual Swap Rate-12:45-TRADITION"]
	RUB_Annual_Swap_Rate_4_15_TRADITION displayName "RUB-Annual Swap Rate-4:15-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-Annual Swap Rate-4:15-TRADITION"]
	RUB_Annual_Swap_Rate_Reference_Banks displayName "RUB-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-Annual Swap Rate-Reference Banks"]
	RUB_Annual_Swap_Rate_TRADITION_Reference_Banks displayName "RUB-Annual Swap Rate-TRADITION-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-Annual Swap Rate-TRADITION-Reference Banks"]
	RUB_MOSPRIME_NFEA displayName "RUB-MOSPRIME-NFEA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-MOSPRIME-NFEA"]
	RUB_MOSPRIME_Reference_Banks displayName "RUB-MOSPRIME-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-MOSPRIME-Reference Banks"]
	RUB_RUONIA_OIS_COMPOUND displayName "RUB-RUONIA-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "RUB-RUONIA-OIS-COMPOUND"]
	SAR_SRIOR_Reference_Banks displayName "SAR-SRIOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SAR-SRIOR-Reference Banks"]
	SAR_SRIOR_SUAA displayName "SAR-SRIOR-SUAA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SAR-SRIOR-SUAA"]
	SEK_Annual_Swap_Rate displayName "SEK-Annual Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SEK-Annual Swap Rate"]
	SEK_Annual_Swap_Rate_SESWFI displayName "SEK-Annual Swap Rate-SESWFI" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SEK-Annual Swap Rate-SESWFI"]
	SEK_SIOR_OIS_COMPOUND displayName "SEK-SIOR-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SEK-SIOR-OIS-COMPOUND"]
	SEK_STIBOR_Bloomberg displayName "SEK-STIBOR-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SEK-STIBOR-Bloomberg"]
	SEK_STIBOR_Reference_Banks displayName "SEK-STIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SEK-STIBOR-Reference Banks"]
	SEK_STIBOR_SIDE displayName "SEK-STIBOR-SIDE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SEK-STIBOR-SIDE"]
	SGD_SIBOR_Reference_Banks displayName "SGD-SIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SIBOR-Reference Banks"]
	SGD_SIBOR_Reuters displayName "SGD-SIBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SIBOR-Reuters"]
	SGD_SIBOR_Telerate displayName "SGD-SIBOR-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SIBOR-Telerate"]
	SGD_SONAR_OIS_COMPOUND displayName "SGD-SONAR-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SONAR-OIS-COMPOUND"]
	SGD_SONAR_OIS_VWAP_COMPOUND displayName "SGD-SONAR-OIS-VWAP-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SONAR-OIS-VWAP-COMPOUND"]
	SGD_SOR_Reference_Banks displayName "SGD-SOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SOR-Reference Banks"]
	SGD_SOR_Reuters displayName "SGD-SOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SOR-Reuters"]
	SGD_SOR_Telerate displayName "SGD-SOR-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SOR-Telerate"]
	SGD_SOR_VWAP displayName "SGD-SOR-VWAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SOR-VWAP"]
	SGD_SOR_VWAP_Reference_Banks displayName "SGD-SOR-VWAP-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-SOR-VWAP-Reference Banks"]
	SGD_Semi_Annual_Currency_Basis_Swap_Rate_11_00_Tullett_Prebon displayName "SGD-Semi-Annual Currency Basis Swap Rate-11:00-Tullett Prebon" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Currency Basis Swap Rate-11:00-Tullett Prebon"]
	SGD_Semi_Annual_Currency_Basis_Swap_Rate_16_00_Tullett_Prebon displayName "SGD-Semi-Annual Currency Basis Swap Rate-16:00-Tullett Prebon" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Currency Basis Swap Rate-16:00-Tullett Prebon"]
	SGD_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "SGD-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	SGD_Semi_Annual_Swap_Rate_11_00_TRADITION displayName "SGD-Semi-Annual Swap Rate-11.00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-11.00-TRADITION"]
	SGD_Semi_Annual_Swap_Rate_11_00_Tullett_Prebon displayName "SGD-Semi-Annual Swap Rate-11:00-Tullett Prebon" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-11:00-Tullett Prebon"]
	SGD_Semi_Annual_Swap_Rate_16_00_Tullett_Prebon displayName "SGD-Semi-Annual Swap Rate-16:00-Tullett Prebon" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-16:00-Tullett Prebon"]
	SGD_Semi_Annual_Swap_Rate_ICAP displayName "SGD-Semi-Annual Swap Rate-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-ICAP"]
	SGD_Semi_Annual_Swap_Rate_ICAP_Reference_Banks displayName "SGD-Semi-Annual Swap Rate-ICAP-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-ICAP-Reference Banks"]
	SGD_Semi_Annual_Swap_Rate_Reference_Banks displayName "SGD-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-Reference Banks"]
	SGD_Semi_Annual_Swap_Rate_TRADITION_Reference_Banks displayName "SGD-Semi-Annual Swap Rate-TRADITION-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SGD-Semi-Annual Swap Rate-TRADITION-Reference Banks"]
	SKK_BRIBOR_BRBO displayName "SKK-BRIBOR-BRBO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SKK-BRIBOR-BRBO"]
	SKK_BRIBOR_Bloomberg displayName "SKK-BRIBOR-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SKK-BRIBOR-Bloomberg"]
	SKK_BRIBOR_NBSK07 displayName "SKK-BRIBOR-NBSK07" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SKK-BRIBOR-NBSK07"]
	SKK_BRIBOR_Reference_Banks displayName "SKK-BRIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "SKK-BRIBOR-Reference Banks"]
	THB_SOR_Reference_Banks displayName "THB-SOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB-SOR-Reference Banks"]
	THB_SOR_Reuters displayName "THB-SOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB-SOR-Reuters"]
	THB_SOR_Telerate displayName "THB-SOR-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB-SOR-Telerate"]
	THB_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "THB-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	THB_Semi_Annual_Swap_Rate_Reference_Banks displayName "THB-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB-Semi-Annual Swap Rate-Reference Banks"]
	THB_THBFIX_Reference_Banks displayName "THB-THBFIX-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB-THBFIX-Reference Banks"]
	THB_THBFIX_Reuters displayName "THB-THBFIX-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "THB-THBFIX-Reuters"]
	TRY_Annual_Swap_Rate_11_00_TRADITION displayName "TRY Annual Swap Rate-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRY Annual Swap Rate-11:00-TRADITION"]
	TRY_Annual_Swap_Rate_11_15_BGCANTOR displayName "TRY-Annual Swap Rate-11:15-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRY-Annual Swap Rate-11:15-BGCANTOR"]
	TRY_Annual_Swap_Rate_Reference_Banks displayName "TRY-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRY-Annual Swap Rate-Reference Banks"]
	TRY_Semi_Annual_Swap_Rate_TRADITION_Reference_Banks displayName "TRY-Semi-Annual Swap Rate-TRADITION-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRY-Semi-Annual Swap Rate-TRADITION-Reference Banks"]
	TRY_TRYIBOR_Reference_Banks displayName "TRY-TRYIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRY-TRYIBOR-Reference Banks"]
	TRY_TRYIBOR_Reuters displayName "TRY-TRYIBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TRY-TRYIBOR-Reuters"]
	TWD_Quarterly_Annual_Swap_Rate_11_00_BGCANTOR displayName "TWD-Quarterly-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-Quarterly-Annual Swap Rate-11:00-BGCANTOR"]
	TWD_Quarterly_Annual_Swap_Rate_Reference_Banks displayName "TWD-Quarterly-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-Quarterly-Annual Swap Rate-Reference Banks"]
	TWD_Reference_Dealers displayName "TWD-Reference Dealers" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-Reference Dealers"]
	TWD_Reuters_6165 displayName "TWD-Reuters-6165" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-Reuters-6165"]
	TWD_TAIBIR01 displayName "TWD-TAIBIR01" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-TAIBIR01"]
	TWD_TAIBIR02 displayName "TWD-TAIBIR02" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-TAIBIR02"]
	TWD_TAIBOR_Bloomberg displayName "TWD-TAIBOR-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-TAIBOR-Bloomberg"]
	TWD_TAIBOR_Reuters displayName "TWD-TAIBOR-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-TAIBOR-Reuters"]
	TWD_TWCPBA displayName "TWD-TWCPBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-TWCPBA"]
	TWD_Telerate_6165 displayName "TWD-Telerate-6165" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "TWD-Telerate-6165"]
	UK_RPIX displayName "UK-RPIX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "UK-RPIX"]
	USA_CPI_U displayName "USA-CPI-U" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USA-CPI-U"]
	USD_3M_LIBOR_SWAP_CME_vs_LCH_ICAP displayName "USD-3M LIBOR SWAP-CME vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-3M LIBOR SWAP-CME vs LCH-ICAP"]
	USD_3M_LIBOR_SWAP_CME_vs_LCH_ICAP_Bloomberg displayName "USD-3M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-3M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg"]
	USD_6M_LIBOR_SWAP_CME_vs_LCH_ICAP displayName "USD-6M LIBOR SWAP-CME vs LCH-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-6M LIBOR SWAP-CME vs LCH-ICAP"]
	USD_6M_LIBOR_SWAP_CME_vs_LCH_ICAP_Bloomberg displayName "USD-6M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-6M LIBOR SWAP-CME vs LCH-ICAP-Bloomberg"]
	USD_Annual_Swap_Rate_11_00_BGCANTOR displayName "USD-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Annual Swap Rate-11:00-BGCANTOR"]
	USD_Annual_Swap_Rate_11_00_TRADITION displayName "USD-Annual Swap Rate-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Annual Swap Rate-11:00-TRADITION"]
	USD_Annual_Swap_Rate_4_00_TRADITION displayName "USD-Annual Swap Rate-4:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Annual Swap Rate-4:00-TRADITION"]
	USD_BA_H_15 displayName "USD-BA-H.15" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-BA-H.15"]
	USD_BA_Reference_Dealers displayName "USD-BA-Reference Dealers" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-BA-Reference Dealers"]
	USD_BMA_Municipal_Swap_Index displayName "USD-BMA Municipal Swap Index" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-BMA Municipal Swap Index"]
	USD_CD_H_15 displayName "USD-CD-H.15" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CD-H.15"]
	USD_CD_Reference_Dealers displayName "USD-CD-Reference Dealers" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CD-Reference Dealers"]
	USD_CMS_Reference_Banks displayName "USD-CMS-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CMS-Reference Banks"]
	USD_CMS_Reference_Banks_ICAP_SwapPX displayName "USD-CMS-Reference Banks-ICAP SwapPX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CMS-Reference Banks-ICAP SwapPX"]
	USD_CMS_Reuters displayName "USD-CMS-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CMS-Reuters"]
	USD_CMS_Telerate displayName "USD-CMS-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CMS-Telerate"]
	USD_CMT_T7051 displayName "USD-CMT-T7051" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CMT-T7051"]
	USD_CMT_T7052 displayName "USD-CMT-T7052" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CMT-T7052"]
	USD_COF11_FHLBSF displayName "USD-COF11-FHLBSF" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-COF11-FHLBSF"]
	USD_COF11_Reuters displayName "USD-COF11-Reuters" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-COF11-Reuters"]
	USD_COF11_Telerate displayName "USD-COF11-Telerate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-COF11-Telerate"]
	USD_CP_H_15 displayName "USD-CP-H.15" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CP-H.15"]
	USD_CP_Reference_Dealers displayName "USD-CP-Reference Dealers" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-CP-Reference Dealers"]
	USD_FFCB_DISCO displayName "USD-FFCB-DISCO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-FFCB-DISCO"]
	USD_Federal_Funds_H_15 displayName "USD-Federal Funds-H.15" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Federal Funds-H.15"]
	USD_Federal_Funds_H_15_Bloomberg displayName "USD-Federal Funds-H.15-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Federal Funds-H.15-Bloomberg"]
	USD_Federal_Funds_H_15_OIS_COMPOUND displayName "USD-Federal Funds-H.15-OIS-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Federal Funds-H.15-OIS-COMPOUND"]
	USD_Federal_Funds_Reference_Dealers displayName "USD-Federal Funds-Reference Dealers" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Federal Funds-Reference Dealers"]
	USD_ISDAFIX3_Swap_Rate displayName "USD-ISDAFIX3-Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-ISDAFIX3-Swap Rate"]
	USD_ISDAFIX3_Swap_Rate_3_00 displayName "USD-ISDAFIX3-Swap Rate-3:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-ISDAFIX3-Swap Rate-3:00"]
	USD_ISDA_Swap_Rate displayName "USD-ISDA-Swap Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-ISDA-Swap Rate"]
	USD_ISDA_Swap_Rate_3_00 displayName "USD-ISDA-Swap Rate-3:00" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-ISDA-Swap Rate-3:00"]
	USD_LIBOR_BBA displayName "USD-LIBOR-BBA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-LIBOR-BBA"]
	USD_LIBOR_BBA_Bloomberg displayName "USD-LIBOR-BBA-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-LIBOR-BBA-Bloomberg"]
	USD_LIBOR_ISDA displayName "USD-LIBOR-ISDA" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-LIBOR-ISDA"]
	USD_LIBOR_LIBO displayName "USD-LIBOR-LIBO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-LIBOR-LIBO"]
	USD_LIBOR_Reference_Banks displayName "USD-LIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-LIBOR-Reference Banks"]
	USD_Municipal_Swap_Libor_Ratio_11_00_ICAP displayName "USD-Municipal Swap Libor Ratio-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Municipal Swap Libor Ratio-11:00-ICAP"]
	USD_Municipal_Swap_Rate_11_00_ICAP displayName "USD-Municipal Swap Rate-11:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Municipal Swap Rate-11:00-ICAP"]
	USD_OIS_11_00_BGCANTOR displayName "USD-OIS-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-OIS-11:00-BGCANTOR"]
	USD_OIS_11_00_LON_ICAP displayName "USD-OIS-11:00-LON-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-OIS-11:00-LON-ICAP"]
	USD_OIS_11_00_NY_ICAP displayName "USD-OIS-11:00-NY-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-OIS-11:00-NY-ICAP"]
	USD_OIS_11_00_TRADITION displayName "USD-OIS-11:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-OIS-11:00-TRADITION"]
	USD_OIS_3_00_BGCANTOR displayName "USD-OIS-3:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-OIS-3:00-BGCANTOR"]
	USD_OIS_3_00_NY_ICAP displayName "USD-OIS-3:00-NY-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-OIS-3:00-NY-ICAP"]
	USD_OIS_4_00_TRADITION displayName "USD-OIS-4:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-OIS-4:00-TRADITION"]
	USD_Overnight_Bank_Funding_Rate displayName "USD-Overnight Bank Funding Rate" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Overnight Bank Funding Rate"]
	USD_Prime_H_15 displayName "USD-Prime-H.15" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Prime-H.15"]
	USD_Prime_Reference_Banks displayName "USD-Prime-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Prime-Reference Banks"]
	USD_SIBOR_Reference_Banks displayName "USD-SIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-SIBOR-Reference Banks"]
	USD_SIBOR_SIBO displayName "USD-SIBOR-SIBO" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-SIBOR-SIBO"]
	USD_SIFMA_Municipal_Swap_Index displayName "USD-SIFMA Municipal Swap Index" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-SIFMA Municipal Swap Index"]
	USD_SOFR_COMPOUND displayName "USD-SOFR-COMPOUND" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-SOFR-COMPOUND"]
	USD_S_P_Index_High_Grade displayName "USD-S&P Index-High Grade" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-S&P Index-High Grade"]
	USD_TBILL_H_15 displayName "USD-TBILL-H.15" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-TBILL-H.15"]
	USD_TBILL_H_15_Bloomberg displayName "USD-TBILL-H.15-Bloomberg" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-TBILL-H.15-Bloomberg"]
	USD_TBILL_Secondary_Market displayName "USD-TBILL-Secondary Market" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-TBILL-Secondary Market"]
	USD_TIBOR_ISDC displayName "USD-TIBOR-ISDC" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-TIBOR-ISDC"]
	USD_TIBOR_Reference_Banks displayName "USD-TIBOR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-TIBOR-Reference Banks"]
	USD_Treasury_19901_3_00_ICAP displayName "USD-Treasury-19901-3:00-ICAP" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Treasury-19901-3:00-ICAP"]
	USD_Treasury_Rate_ICAP_BrokerTec displayName "USD-Treasury Rate-ICAP BrokerTec" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Treasury Rate-ICAP BrokerTec"]
	USD_Treasury_Rate_SwapMarker100 displayName "USD-Treasury Rate-SwapMarker100" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Treasury Rate-SwapMarker100"]
	USD_Treasury_Rate_SwapMarker99 displayName "USD-Treasury Rate-SwapMarker99" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Treasury Rate-SwapMarker99"]
	USD_Treasury_Rate_T19901 displayName "USD-Treasury Rate-T19901" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Treasury Rate-T19901"]
	USD_Treasury_Rate_T500 displayName "USD-Treasury Rate-T500" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "USD-Treasury Rate-T500"]
	VND_Semi_Annual_Swap_Rate_11_00_BGCANTOR displayName "VND-Semi-Annual Swap Rate-11:00-BGCANTOR" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VND-Semi-Annual Swap Rate-11:00-BGCANTOR"]
	VND_Semi_Annual_Swap_Rate_Reference_Banks displayName "VND-Semi-Annual Swap Rate-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "VND-Semi-Annual Swap Rate-Reference Banks"]
	ZAR_DEPOSIT_Reference_Banks displayName "ZAR-DEPOSIT-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-DEPOSIT-Reference Banks"]
	ZAR_DEPOSIT_SAFEX displayName "ZAR-DEPOSIT-SAFEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-DEPOSIT-SAFEX"]
	ZAR_JIBAR_Reference_Banks displayName "ZAR-JIBAR-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-JIBAR-Reference Banks"]
	ZAR_JIBAR_SAFEX displayName "ZAR-JIBAR-SAFEX" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-JIBAR-SAFEX"]
	ZAR_PRIME_AVERAGE displayName "ZAR-PRIME-AVERAGE" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-PRIME-AVERAGE"]
	ZAR_PRIME_AVERAGE_Reference_Banks displayName "ZAR-PRIME-AVERAGE-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-PRIME-AVERAGE-Reference Banks"]
	ZAR_Quarterly_Swap_Rate_1_00_TRADITION displayName "ZAR-Quarterly Swap Rate-1:00-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-Quarterly Swap Rate-1:00-TRADITION"]
	ZAR_Quarterly_Swap_Rate_5_30_TRADITION displayName "ZAR-Quarterly Swap Rate-5:30-TRADITION" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-Quarterly Swap Rate-5:30-TRADITION"]
	ZAR_Quarterly_Swap_Rate_TRADITION_Reference_Banks displayName "ZAR-Quarterly Swap Rate-TRADITION-Reference Banks" 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ZAR-Quarterly Swap Rate-TRADITION-Reference Banks"]


import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*
import cdm.base.staticdata.asset.credit.*
import cdm.base.staticdata.asset.rates.*
import cdm.synonyms.config.*

/*
 * FpML cd validation rules perceived as needing extensions to the data rule syntax or calls to java functions:
 * - cd-15, cd-16, cd-17, cd-18 as they require to test the number of referenceObligation nodes
 * - cd-21, cd-21.0, cd-22 as in order to test the condition that a trade is a short form, we need to have a like-type function to represent that an enumeration value that begins with string "iTraxx" or "CDX".
 * - cd-33 as there is a need for date computation by 'adding an integer multiple of the period in paymentFrequency to firstPaymentDate'
 * - cd-38 as there is a need to sum-up a set of values and check that their total = 1
 */
type AdditionalFixedPayments: 
	[synonym FpML_5_10 value "AdditionalFixedPayments"]
	interestShortfallReimbursement boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "interestShortfallReimbursement"]
	principalShortfallReimbursement boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "principalShortfallReimbursement"]
	writedownReimbursement boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "writedownReimbursement"]

type BasketReferenceInformation: 
	[synonym FpML_5_10 value "BasketReferenceInformation"]
	basketName string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "basketName" meta "basketNameScheme"]
	basketId string (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "basketId" meta "basketIdScheme"]
	referencePool ReferencePool (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referencePool"]
	nthToDefault int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "nthToDefault"]
	mthToDefault int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mthToDefault"]
	tranche Tranche (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "tranche"]
	condition Choice: 
		required choice nthToDefault, tranche

	condition NthToDefault: 
		if mthToDefault exists
		then nthToDefault exists

	condition MthToDefault: 
		if ( nthToDefault exists and mthToDefault exists)
		then nthToDefault < mthToDefault

type CalculationAmount extends Money:
	// TODO Never referenced in CDM
	[synonym FpML_5_10 value "CalculationAmount"]
	step Step (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "step"]

type CashSettlementTerms extends SettlementBase: 
	[synonym FpML_5_10 value "CashSettlementTerms"]
	valuationDate ValuationDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "valuationDate"]
	valuationTime BusinessCenterTime (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "valuationTime"]
	quotationMethod QuotationRateTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quotationMethod"]
	quotationAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quotationAmount"]
	minimumQuotationAmout Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "minimumQuotationAmount"]
	dealer string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dealer"]
	cashSettlementBusinessDays int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementBusinessDays"]
	cashSettlementAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementAmount"]
	recoveryFactor number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "recoveryFactor"]
	fixedSettlement boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedSettlement"]
	accruedInterest boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accruedInterest"]
	valuationMethod ValuationMethodEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "valuationMethod"]

	condition Choice: 
		optional choice cashSettlementAmount, recoveryFactor

	condition CashSettlementBusinessDays: 
		if cashSettlementBusinessDays exists
		then cashSettlementBusinessDays >= 0

	condition  RecoveryFactor: 
		if recoveryFactor exists
		then recoveryFactor >= 0.0 and recoveryFactor <= 1.0

	condition FpML_cd_37: 
		if ( quotationAmount exists and minimumQuotationAmout exists)
			and quotationAmount -> currency = minimumQuotationAmout -> currency
		then quotationAmount -> amount > minimumQuotationAmout -> amount

type DeliverableObligations: 
	[synonym FpML_5_10 value "DeliverableObligations"]
	accruedInterest boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accruedInterest"]
	category ObligationCategoryEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "category"]
	notSubordinated boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notSubordinated"]
	specifiedCurrency SpecifiedCurrency (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "specifiedCurrency"]
	notSovereignLender boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notSovereignLender"]
	notDomesticCurrency NotDomesticCurrency (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notDomesticCurrency"]
	notDomesticLaw boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notDomesticLaw"]
	listed boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "listed"]
	notContingent boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notContingent"]
	notDomesticIssuance boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notDomesticIssuance"]
	assignableLoan PCDeliverableObligationCharac (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "assignableLoan"]
	consentRequiredLoan PCDeliverableObligationCharac (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "consentRequiredLoan"]
	directLoanParticipation LoanParticipation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "directLoanParticipation"]
	transferable boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "transferable"]
	maximumMaturity Period (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "maximumMaturity"]
	acceleratedOrMatured boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "acceleratedOrMatured"]
	notBearer boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notBearer"]
	fullFaithAndCreditObLiability boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fullFaithAndCreditObLiability"]
	generalFundObligationLiability boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "generalFundObligationLiability"]
	revenueObligationLiability boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "revenueObligationLiability"]
	indirectLoanParticipation LoanParticipation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indirectLoanParticipation"]
	excluded string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "excluded"]
	othReferenceEntityObligations string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "othReferenceEntityObligations"]

	condition Choice: 
		optional choice fullFaithAndCreditObLiability, generalFundObligationLiability, revenueObligationLiability

	condition FpML_cd_34: 
		if category exists
			and category = ObligationCategoryEnum -> ReferenceObligationsOnly
		then acceleratedOrMatured is absent
			and accruedInterest is absent
			and assignableLoan is absent
			and consentRequiredLoan is absent
			and directLoanParticipation is absent
			and excluded is absent
			and fullFaithAndCreditObLiability is absent
			and generalFundObligationLiability is absent
			and indirectLoanParticipation is absent
			and listed is absent
			and maximumMaturity is absent
			and notBearer is absent
			and notContingent is absent
			and notDomesticCurrency is absent
			and notDomesticIssuance is absent
			and notDomesticLaw is absent
			and notSovereignLender is absent
			and notSubordinated is absent
			and othReferenceEntityObligations is absent
			and revenueObligationLiability is absent
			and specifiedCurrency is absent
			and transferable is absent


type FloatingAmountEvents: 
	[synonym FpML_5_10 value "FloatingAmountEvents"]
	failureToPayPrincipal boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "failureToPayPrincipal"]
	interestShortfall InterestShortFall (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "interestShortfall"]
	writedown boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "writedown"]
	impliedWritedown boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "impliedWritedown"]
	floatingAmountProvisions FloatingAmountProvisions (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingAmountProvisions"]
	additionalFixedPayments AdditionalFixedPayments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "additionalFixedPayments"]

type FloatingAmountProvisions:
	[synonym FpML_5_10 value "FloatingAmountProvisions"]
	wacCapInterestProvision boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "WACCapInterestProvision"]
	stepUpProvision boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stepUpProvision"]

type IndexReferenceInformation: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "IndexReferenceInformation" meta "id"]
	indexName string (0..1)  
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexName" meta "indexNameScheme"]
	indexId string (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexId" meta "indexIdScheme"]
	indexSeries int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexSeries"]
	indexAnnexVersion int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexAnnexVersion"]
	indexAnnexDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexAnnexDate"]
	indexAnnexSource IndexAnnexSourceEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexAnnexSource" meta "indexAnnexSourceScheme"]
	excludedReferenceEntity LegalEntity (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "excludedReferenceEntity"]
	tranche Tranche (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "tranche"]
	settledEntityMatrix SettledEntityMatrix (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settledEntityMatrix"]

	condition IndexSeries: 
		if indexSeries exists
		then indexSeries >= 0

	condition IndexAnnexVersion: 
		if indexAnnexVersion exists
		then indexAnnexVersion >= 0

type InterestShortFall: 
	[synonym FpML_5_10 value "InterestShortFall"]
	interestShortfallCap InterestShortfallCapEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "interestShortfallCap"]
	compounding boolean (1..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "compounding"]
	rateSource FloatingRateIndexEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateSource"]
		[synonym CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "rateSource" meta "floatingRateIndexScheme"]

type LoanParticipation extends PCDeliverableObligationCharac: 
	[synonym FpML_5_10 value "LoanParticipation"]
	qualifyingParticipationSeller string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "qualifyingParticipationSeller"]

type MultipleValuationDates extends SingleValuationDate:
	[synonym FpML_5_10 value "MultipleValuationDates"]
	businessDaysThereafter int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDaysThereafter"]
	numberValuationDates int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "numberValuationDates"]

	condition BusinessDaysThereafter: 
		if businessDaysThereafter exists
		then businessDaysThereafter >= 0

	condition NumberValuationDates: 
		if numberValuationDates exists
		then numberValuationDates >= 0

type PCDeliverableObligationCharac: 
	[synonym FpML_5_10 value "PCDeliverableObligationCharac"]
	applicable boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "applicable"]
	partialCashSettlement boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partialCashSettlement"]

type PhysicalSettlementPeriod:
	[synonym FpML_5_10 value "PhysicalSettlementPeriod"]
	businessDaysNotSpecified boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDaysNotSpecified"]
	businessDays int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDays"]
	maximumBusinessDays int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "maximumBusinessDays"]
	condition: one-of
	condition BusinessDays: 
		if businessDays exists
		then businessDays >= 0
	condition MaximumBusinessDays: 
		if maximumBusinessDays exists
		then maximumBusinessDays >= 0

type PhysicalSettlementTerms extends SettlementBase: 
	[synonym FpML_5_10 value "PhysicalSettlementTerms"]
	physicalSettlementPeriod PhysicalSettlementPeriod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "physicalSettlementPeriod"]
	deliverableObligations DeliverableObligations (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "deliverableObligations"]
	escrow boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "escrow"]
	sixtyBusinessDaySettlementCap boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "sixtyBusinessDaySettlementCap"]

type ProtectionTerms extends PayoutBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ProtectionTerms" meta "id"]
	creditEvents CreditEvents (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditEvents"]
	obligations Obligations (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "obligations"]
	floatingAmountEvents FloatingAmountEvents (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingAmountEvents"]

type ReferenceInformation: 
	[synonym FpML_5_10 value "ReferenceInformation"]
	referenceEntity LegalEntity (1..1) 
	referenceObligation ReferenceObligation (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceObligation"]
	noReferenceObligation boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "noReferenceObligation"]
	unknownReferenceObligation boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unknownReferenceObligation"]
	allGuarantees boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "allGuarantees"]
	referencePrice number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referencePrice"]
	referencePolicy boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referencePolicy"]
	securedList boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "securedList"]
	condition Choice: 
		required choice referenceObligation, noReferenceObligation , unknownReferenceObligation


type ReferenceObligation: 
	[synonym FpML_5_10 value "ReferenceObligation"]
	bond Bond (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bond"]
	convertibleBond ConvertibleBond (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "convertibleBond"]
	mortgageBackedSecurity MortgageBackedSecurity (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mortgage"]
	loan Loan (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "loan"]
	primaryObligor LegalEntity (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "primaryObligor"]
	primaryObligorReference LegalEntity (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "primaryObligorReference" meta "href"]
	guarantor LegalEntity (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "guarantor"]
	guarantorReference string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "guarantorReference"]
	standardReferenceObligation boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "standardReferenceObligation"]

	condition AssetChoice: 
		required choice bond, convertibleBond , loan , mortgageBackedSecurity

	condition LegalEntityChoice : 
		optional choice primaryObligor, primaryObligorReference


type ReferencePair:
	[synonym FpML_5_10 value "ReferencePair"]
	referenceEntity LegalEntity (1..1) 
	referenceObligation ReferenceObligation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceObligation"]
	noReferenceObligation boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "noReferenceObligation"]
	entityType EntityTypeEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityType" meta "entityTypeScheme"]
	condition ReferenceChoice: 
		required choice referenceObligation, noReferenceObligation


type ReferencePool: 
	[synonym FpML_5_10 value "ReferencePool"]
	referencePoolItem ReferencePoolItem (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referencePoolItem"]
	condition FpML_cd_44_openUnits: 
		if referencePoolItem -> constituentWeight -> openUnits exists
		then referencePoolItem -> constituentWeight -> basketPercentage is absent

	condition FpML_cd_44_basketPercentage: 
		if referencePoolItem -> constituentWeight -> basketPercentage exists
		then referencePoolItem -> constituentWeight -> openUnits is absent


type ReferencePoolItem: 
	[synonym FpML_5_10 value "ReferencePoolItem"]
	constituentWeight ConstituentWeight (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "constituentWeight"]
	referencePair ReferencePair (1..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referencePair"]
	protectionTermsReference ProtectionTerms (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "protectionTermsReference" meta "href"]
	// TODO the two fields below should be merged into one using an abstract type see https://trello.com/c/zb5A88cZ
	cashSettlementTermsReference CashSettlementTerms (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementTermsReference" maps 2 meta "href"]
	physicalSettlementTermsReference PhysicalSettlementTerms (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementTermsReference" maps 2 meta "href"]
	condition SettlementChoice: 
		optional choice cashSettlementTermsReference, physicalSettlementTermsReference


type SettledEntityMatrix: 
	[synonym FpML_5_10 value "SettledEntityMatrix"]
	matrixSource SettledEntityMatrixSourceEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "matrixSource" meta "settledEntityMatrixSourceScheme"]
	publicationDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "publicationDate"]

type SingleValuationDate: 
	[synonym FpML_5_10 value "SingleValuationDate"]
	businessDays int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDays"]
	condition NonNegativeBusinessDays: 
		if businessDays exists
		then businessDays >= 0

type Tranche: 
	[synonym FpML_5_10 value "Tranche"]
	attachmentPoint number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "attachmentPoint"]
	exhaustionPoint number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exhaustionPoint"]
	incurredRecoveryApplicable boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "incurredRecoveryApplicable"]
	condition AttachmentPoint: 
		if Tranche exists
		then attachmentPoint >= 0.0 and attachmentPoint <= 1.0

	condition ExhaustionPoint: 
		if Tranche exists
		then exhaustionPoint >= 0.0 and exhaustionPoint <= 1.0

	condition AttachmentPointLessThanExhaustionPoint: 
		if Tranche exists
		then attachmentPoint <= exhaustionPoint


type ValuationDate:
	[synonym FpML_5_10 value "ValuationDate"]
	singleValuationDate SingleValuationDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "singleValuationDate"]
	multipleValuationDates MultipleValuationDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "multipleValuationDates"]
	condition: one-of


basicType string
basicType int
basicType number
basicType boolean
basicType time

library function DateRanges() date
library function Min(x number, y number) number
library function Max(x number, y number) number
library function Adjust() date
library function Within() boolean
library function IsLeapYear(year number) boolean

recordType date
{
	day   int
	month int
	year  int
}

recordType zonedDateTime
{
	date date
	time time
	timezone string
}

qualifiedType productType {}
qualifiedType eventType {}

calculationType calculation {}


import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.party.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.asset.rates.*
import cdm.synonyms.config.*

type AllocationInstruction:
	// TODO: add other allocation context
	breakdowns AllocationBreakdown (1..*) 

type AllocationBreakdown:
	partyReference Party (1..1) 
		[metadata reference]
	quantity QuantityNotation (1..1) 
	allocationTradeId Identifier (1..*)
		[synonym FpML_5_10 value "allocationTradeId"]
	account Account (0..1)
	collateral Collateral (0..1)
		[synonym FpML_5_10 value "collateral"]

type SplitOutcome: 
	originalTrade Trade (1..1)
		[synonym Workflow_Event value "originalTrade"]
	splitTrades Trade (1..*)
		[synonym Workflow_Event value "splitTrade"]

type CashTransferBreakdown extends TransferBreakdown:
	payerReceiver PayerReceiver (1..1) 
	amount Money (1..1) 
		[synonym Workflow_Event value "amount"]
	cashflowType CashflowTypeEnum (0..1) 
		[synonym Workflow_Event value "cashflowType"]

type CashTransferComponent extends TransferBase:
	payerReceiver PayerReceiver (1..1) 
	amount Money (1..1) 
		[synonym Workflow_Event value "amount"]
		
	cashflowType CashflowTypeEnum (0..1) 
		[synonym Workflow_Event value "cashflowType"]
		
	breakdown CashTransferBreakdown (0..*) 
		[synonym Workflow_Event value "breakdown"]

/*
 * TODO - The commodity transfer component and its associated breakdown should be deemed as sample implementations,
 * which need to be confirmed through relevant user stories and use cases
 */
type CommodityTransferBreakdown extends TransferBreakdown:
	transferorTransferee TransferorTransferee (1..1) 
	commodity Commodity (1..1)
	quantity number (1..1)
		[synonym Workflow_Event value "quantity"]
	unit UnitEnum (1..1) 
	timeUnit TimeUnitEnum (0..1)

type CommodityTransferComponent extends TransferBase:
	transferorTransferee TransferorTransferee (1..1) 
	commodity Commodity (1..1)
	quantity number (1..1)
		[synonym Workflow_Event value "quantity"]
	unit UnitEnum (1..1) 
	timeUnit TimeUnitEnum (0..1)
	assetTransferType AssetTransferTypeEnum (0..1) 
	breakdown CommodityTransferBreakdown (0..*) 
		[synonym Workflow_Event value "breakdown"]

type ComputedAmount: 
	callFunction calculation (1..1)
	amount number (1..1)
	currency string (0..1) 
		[metadata scheme]
		[synonym Workflow_Event value "currency" meta "currencyScheme"]

type ContractState: 
	[metadata key] 
	contract Contract (1..1) 
		[synonym Workflow_Event value "fpmlTrade"]
		
		
		
		[synonym CME_SubmissionIRS_1_0 value "FpML" path "Instrmt->SecXML"]
	updatedContract Contract (0..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]

//TODO: Check that the updated contract in the contract state matches the original reference contract, except for updated (reset) values.
// data rule ContractState_contract
/* NOT USED
 *     class CreditLimit 
 * 	[synonym FpML_5_10 value "CreditLimit"]
 * {
 * 	limitId string (0..1) scheme;
 * 		[synonym FpML_5_10 value "limitId" meta "creditLimitIdScheme"]
 * 	applicableProduct ProductIdentification (0..1) 
 * 	currency string (0..1) scheme 
 * 		[synonym FpML_5_10 value "currency" meta "currencyScheme"]
 * 	tenor Period (0..1) 
 * 		[synonym FpML_5_10 value "tenor"]
 * 	limitApplicable LimitApplicable (0..*)
 * 		[synonym FpML_5_10 value "limitApplicable"]
 * 	expirationDateTime BusinessCenterTime (0..1) 
 * 		[synonym FpML_5_10 value "expirationDate"]
 * }
 */
type CreditLimitInformation: 
	[synonym CME_ClearedConfirm_1_17 value "CreditLimitInformation"]
	limitApplicable LimitApplicableExtended (1..*)
		[synonym CME_ClearedConfirm_1_17, Workflow_Event value "limitApplicable"]

type CreditLimitUtilisation: 
	[synonym FpML_5_10 value "CreditLimitUtilization"]
	executed CreditLimitUtilisationPosition (0..1) 
		[synonym FpML_5_10 value "executed"]
	pending CreditLimitUtilisationPosition (0..1) 
		[synonym FpML_5_10 value "pending"]

type CreditLimitUtilisationPosition:
	[synonym FpML_5_10 value "CreditLimitUtilizationPosition"]
	shortPosition number (0..1) 
		[synonym FpML_5_10 value "short"]
	longPosition number (0..1) 
		[synonym FpML_5_10 value "long"]
	global number (0..1) 
		[synonym FpML_5_10 value "global"]

type Curve:
	interestRateCurve InterestRateCurve (0..1)
		[synonym Workflow_Event value "interestRateCurve"]
	commodityCurve CommodityReferencePriceEnum (0..1) // This is just an illustrative alternative curve instance, which implementation needs to be refined and confirmed
		[metadata scheme]
		[synonym Workflow_Event value "commodityCurve" meta "commodityReferencePriceScheme"]
	condition Curve: one-of

type CustomisedWorkflow: 
	itemName string (1..1) 
		[synonym CME_SubmissionIRS_1_0 set to "ClientOrderId" when path = "ClOrdID"]
		[synonym CME_SubmissionIRS_1_0 set to "TradeOriginationSystem" when path = "InptSrc"]
		[synonym CME_SubmissionIRS_1_0 set to "OriginatingTradeId" when path = "OrigTrdID"]
		[synonym CME_SubmissionIRS_1_0 set to "ExecutionTime" when path = "TrdRegTS->TS" and "TrdRegTS->Typ" = "1"]
		[synonym CME_SubmissionIRS_1_0 set to "PartyType" when path = "Pty->R"]
		[synonym CME_SubmissionIRS_1_0 set to "PartyIdentifier" when path = "Pty->Src"]
	itemValue string (1..1) 
		[synonym CME_SubmissionIRS_1_0 value "ClOrdID"]
		[synonym CME_SubmissionIRS_1_0 value "InptSrc"]
		[synonym CME_SubmissionIRS_1_0 value "OrigTrdID"]
		[synonym CME_SubmissionIRS_1_0 value "TS" path "TrdRegTS"]
		[synonym CME_SubmissionIRS_1_0 set to "Customer Account" when "Pty->R" = "24"]
		[synonym CME_SubmissionIRS_1_0 set to "Custom" when "Pty->Src" = "D"]

type Instruction: 
	// TODO - This should be updated to either use a cross reference to a func type or use an annotation.
	instructionFunction string (1..1) 
	
	allocation AllocationInstruction (0..1) 
    clearing ClearingInstruction (0..1) 

	condition OneOfInstruction: required choice allocation, clearing


type WorkflowStep: 
	[metadata key]
	[rootType]
	[synonym Workflow_Event meta "id"]
	businessEvent BusinessEvent (0..1) 
	proposedInstruction Instruction (0..1) 
		[synonym Workflow_Event value "proposedInstruction"]
	// TODO - This will be replaced with a list of signatories that must sign off the 'previousWorkflowStep' and any operational reasons why it may be rejected.
	rejected boolean (0..1) 
		[synonym Workflow_Event value "rejected"]

	previousWorkflowStep WorkflowStep (0..1) 
		[metadata reference]
		[synonym Workflow_Event value "previousWorkflowStep"]

	messageInformation MessageInformation (0..1) 
		
		
		
		
		[synonym CME_ClearedConfirm_1_17 value "header" path "clearingConfirmed"]
	timestamp EventTimestamp (1..*) 
		[synonym Workflow_Event value "timestamp"]
		
		
		
		[synonym CME_ClearedConfirm_1_17 value "timestamps" path "clearingConfirmed->trade->tradeHeader"]
		[synonym CME_ClearedConfirm_1_17 value "header" path "clearingConfirmed"]
	eventIdentifier Identifier (1..*) 
		[synonym Workflow_Event value "eventIdentifier"]
		
		
		
		
	action ActionEnum (1..1) 
		[synonym Workflow_Event
			set to ActionEnum -> New when "isCorrection" = False,
			set to ActionEnum -> Correct when "isCorrection" = True,
			set to ActionEnum -> Cancel when "isRetraction" = True]
		[synonym FpML_5_10
			set to ActionEnum -> New when "isCorrection" = False,
			set to ActionEnum -> Correct when "isCorrection" = True]
		
		[synonym CME_SubmissionIRS_1_0 value "TransTyp" path "TrdCaptRpt"]
	party Party (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "party"]
		
		
	account Account (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "account"]
		[synonym CME_ClearedConfirm_1_17 value "account" path "clearingConfirmed"]
	lineage Lineage (0..1) 
		[synonym Workflow_Event value "lineage"]

	condition WorkflowStepStatus:
		(WorkflowStep -> businessEvent exists and WorkflowStep -> proposedInstruction is absent and WorkflowStep -> rejected is absent)
		or
		(WorkflowStep -> proposedInstruction exists and WorkflowStep -> businessEvent is absent and WorkflowStep -> rejected is absent)
		or
		(WorkflowStep -> rejected exists and WorkflowStep -> businessEvent is absent and WorkflowStep -> proposedInstruction is absent)

	condition Intent: 
		if (businessEvent -> primitives -> split exists
			or businessEvent -> primitives -> exercise exists
			or businessEvent -> primitives -> execution exists
			or businessEvent -> primitives -> contractFormation exists
			or businessEvent -> primitives -> observation exists
			or businessEvent -> primitives -> reset exists)
		then businessEvent -> intent is absent
		
type Workflow: 
	steps WorkflowStep (1..*)

type BusinessEvent: 
	[metadata key]
    [rootType]
    primitives PrimitiveEvent (1..*) 
	intent IntentEnum (0..1) 
		[synonym Workflow_Event value "intent"]
	functionCall string (0..1) 
		[synonym Workflow_Event value "functionCall"]

	eventQualifier eventType (0..1) 
	eventDate date (1..1) 
		[synonym Workflow_Event value "eventDate"]
		[synonym CME_ClearedConfirm_1_17 value "clearedDate" path "clearingConfirmed->trade->tradeHeader" maps 2]
	effectiveDate date (0..1) 
		[synonym Workflow_Event value "effectiveDate"]
	eventEffect EventEffect (0..1) 

	// TODO - this needs to be moved/merged into the WorkflowStep
	workflowEventState WorkflowStepState (0..1) 
		[deprecated]

type EventEffect: 
	effectedContract Contract (0..*) 
		[metadata reference]
	effectedExecution Execution (0..*) 
		[metadata reference]
	contract Contract (0..*) 
		[metadata reference]
	execution Execution (0..*) 
		[metadata reference]
	productIdentifier ProductIdentifier (0..*) 
		[metadata reference]
	transfer TransferPrimitive (0..*) 
		[metadata reference]

/* USED in downstrem */
type EventTestBundle: 
	event WorkflowStep (2..*)
		[synonym Workflow_Event value "event"]
	computedAmount ComputedAmount (0..*)
		[synonym Workflow_Event value "computedAmount"]

type EventTimestamp: 
	dateTime zonedDateTime (1..1) 
		[synonym Workflow_Event, CME_ClearedConfirm_1_17 value "creationTimestamp"]
		[synonym Workflow_Event, CME_ClearedConfirm_1_17 value "expiryTimestamp"]
		
		[synonym CME_ClearedConfirm_1_17 value "submittedForClearing"]
		[synonym CME_SubmissionIRS_1_0 value "TxnTm" path "TrdCaptRpt"]
		[synonym CME_SubmissionIRS_1_0 value "Snt" path "TrdCaptRpt->Hdr"]
		[synonym CME_SubmissionIRS_1_0 value "TS" path "TrdCaptRpt->TrdRegTS"]
	qualification EventTimestampQualificationEnum (1..1) 
		[synonym Workflow_Event, CME_ClearedConfirm_1_17 set to EventTimestampQualificationEnum -> eventCreationDateTime when "creationTimestamp" exists]
		[synonym Workflow_Event, CME_ClearedConfirm_1_17 set to EventTimestampQualificationEnum -> eventExpirationDateTime when "expiryTimestamp" exists]
		[synonym CME_ClearedConfirm_1_17, Workflow_Event set to EventTimestampQualificationEnum -> clearingSubmissionDateTime when "submittedForClearing" exists]
		[synonym CME_SubmissionIRS_1_0 set to EventTimestampQualificationEnum -> transactionCreationDateTime when path = "TrdCaptRpt->TxnTm"]
		[synonym CME_SubmissionIRS_1_0 set to EventTimestampQualificationEnum -> eventSentDateTime when path= "TrdCaptRpt->Hdr->Snt"]
		[synonym CME_SubmissionIRS_1_0 set to EventTimestampQualificationEnum -> executionDateTime when path= "TrdCaptRpt->TrdRegTS->TS" and "TrdCaptRpt->TrdRegTS->Typ" = 1]

type WorkflowStepState: 
	workflowStatus WorkflowStatusEnum (0..*) 
		[synonym CME_SubmissionIRS_1_0 value "RptTyp" path "TrdCaptRpt"]
		[synonym Workflow_Event value "workflowStatus"]
		[synonym CME_ClearedConfirm_1_17 value "status" path "clearingConfirmed->trade->tradeHeader"]
	comment string (0..1) 
	partyCustomisedWorkflow PartyCustomisedWorkflow (0..*) 
		[synonym CME_SubmissionIRS_1_0 value "RptSide" path "TrdCaptRpt"]

type CashExercise: 

	cashflow Cashflow (1..1) 
	quantity QuantityNotation (1..1) 

type ExerciseOutcome: 
	contract Contract (1..1)
		[synonym Workflow_Event value "fpmlContract"]
	physicalExercise PhysicalExercise (0..1)
		[synonym Workflow_Event value "physicalExercise"]
	cashExercise CashExercise (0..1)
		[synonym Workflow_Event value "cashExercise"]
	condition Choice: 
		required choice physicalExercise, cashExercise

type ExecutionState: 
	[metadata key] 
	execution Execution (1..1)
		[synonym Workflow_Event value "fpmlExecution"]


type InterestRateCurve:
	floatingRateIndex FloatingRateIndexEnum (1..1)
		[metadata scheme]
		[synonym Workflow_Event value "floatingRateIndex" meta "floatingRateIndexScheme"]
	tenor Period (1..1)
		[synonym Workflow_Event value "tenor"]

type LimitApplicable:
	[synonym FpML_5_10 value "LimitApplicable"]
	limitType CreditLimitTypeEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, Workflow_Event value "limitType" meta "creditLimitTypeScheme"]
	clipSize int (0..1) 
		[synonym FpML_5_10 value "clipSize"]
	amountUtilized number (0..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, Workflow_Event value "amountUtilized"]
	utilization CreditLimitUtilisation (0..1)
		[synonym FpML_5_10 value "utilization"]
	amountRemaining number (0..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, Workflow_Event value "amountRemaining"]
	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, Workflow_Event value "currency" meta "currencyScheme"]
	velocity Velocity (0..1)
		[synonym FpML_5_10 value "velocity"]
	condition Choice: 
		optional choice amountUtilized, utilization


type LimitApplicableExtended extends LimitApplicable: 
	[synonym CME_ClearedConfirm_1_17 value "CreditLimitInformation"]
	limitLevel LimitLevelEnum (0..1) 
		[metadata scheme]
		[synonym CME_ClearedConfirm_1_17, Workflow_Event value "level" meta "creditLimitLevelScheme"]
	limitAmount number (0..1) 
		[synonym CME_ClearedConfirm_1_17, Workflow_Event value "limitAmount"]
	limitImpactDueToTrade number (0..1) 
		[synonym CME_ClearedConfirm_1_17, Workflow_Event value "limitImpactDueToTrade"]

type Lineage: 
	contractReference Contract (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "contractReference" meta "href"]
	eventReference WorkflowStep (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "eventReference" meta "href"]
	executionReference Execution (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "executionReference" meta "href"]
	cashflowReference Cashflow (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "cashflowReference" meta "href"]
	creditDefaultPayoutReference CreditDefaultPayout (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "creditDefaultReference" meta "href"]
	interestRatePayoutReference InterestRatePayout (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "interestRatePayoutReference" meta "href"]
	optionPayoutReference OptionPayout (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "optionPayoutReference" meta "href"]
	equityPayoutReference EquityPayout (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "equityPayoutReference" meta "href"]
	transferReference TransferPrimitive (0..*) 
		[metadata reference]
		[synonym Workflow_Event value "transferReference" meta "href"]
	legalAgreement LegalAgreement (0..*) 
		[metadata reference]
	portfolioStateReference PortfolioState (0..*) 
		[metadata reference]

type MessageInformation: 
	messageId string (1..1) 
		[metadata scheme]
		[synonym Workflow_Event value "messageId" path "messageInformation" meta "messageIdScheme"]
		
		[synonym CME_ClearedConfirm_1_17 value "messageId" meta "messageIdScheme"]
	sentBy string (0..1) 
		[metadata scheme]
		[synonym Workflow_Event value "sentBy" path "messageInformation" meta "messageAddressScheme"]
		
		[synonym CME_ClearedConfirm_1_17 value "sentBy" meta "messageAddressScheme"]
		[synonym CME_SubmissionIRS_1_0 value "SSub" path "TrdCaptRpt->Hdr"]
	sentTo string (0..*) 
		[metadata scheme]
		[synonym Workflow_Event value "sentTo" path "messageInformation" meta "messageAddressScheme"]
		[synonym CME_ClearedConfirm_1_17 value "sendTo" meta "messageAddressScheme"]
		
		[synonym CME_SubmissionIRS_1_0 value "TID" path "TrdCaptRpt->Hdr"]
	copyTo string (0..*) 
		[metadata scheme]

type ObservationSource: 
	curve Curve (0..1)
		[synonym Workflow_Event value "curve"]
	informationSource InformationSource (0..1)
		[synonym Workflow_Event value "informationSource"]
	condition CurveInformationSource: 
		if ObservationSource exists
		then ( curve exists and informationSource exists)
			or curve exists
			or informationSource exists

type PartyCustomisedWorkflow: 
	partyReference Party (0..1) 
		[metadata reference]
		
	partyName string (0..1) 
		[synonym CME_SubmissionIRS_1_0 value "ID" path "Pty"]
	customisedWorkflow CustomisedWorkflow (1..*) 
	condition Choice: 
		required choice partyName, partyReference

type PhysicalExercise: 
	product Product (1..1)
		[synonym Workflow_Event value "product"]
	quantity Quantity (0..1) 
		[synonym Workflow_Event value "quantity"]
	quantityNotation QuantityNotation (0..*) 
		// For Swap Stream:
		[synonym Workflow_Event value "notionalSchedule" path "product->swap->swapStream->calculationPeriodAmount->calculation"]
		[synonym Workflow_Event value "cashflow"]
	cashflow Cashflow (0..1) 
		[synonym Workflow_Event value "cashflow"]
	condition PhysicalExerciseQuantity: 
		if product -> contractualProduct exists
		then quantity is absent

type PostContractFormationState extends ContractState:
	creditLimitInformation CreditLimitInformation (0..1) 
		[synonym CME_ClearedConfirm_1_17 value "creditLimitInformation" path "trade->tradeHeader"]
		[synonym Workflow_Event value "creditLimitInformation"]
	tradeWarehouseWorkflow TradeWarehouseWorkflow (0..1) 


type SecurityTransferBreakdown:
	transferorTransferee TransferorTransferee (1..1) 
	security Security (1..*) 
		[synonym Workflow_Event value "security"]
	quantity number (1..1)
		[synonym Workflow_Event value "quantity"]

type SecurityTransferComponent extends TransferBase:
	transferorTransferee TransferorTransferee (1..1) 
	security Security (1..1) 
		[synonym Workflow_Event value "security"]
	quantity number (1..1)
		[synonym Workflow_Event value "quantity"]
	assetTransferType AssetTransferTypeEnum (0..1) // The relevance of this attribute and the associated values need to be confirmed"
		[synonym Workflow_Event value "assetTransferType"]
	breakdown SecurityTransferBreakdown (0..*) 
		[synonym Workflow_Event value "breakdown"]


type StockSplitInstruction: 
	trade Trade (1..1) 
	adjustmentRatio number (1..1) 
	date date (1..1) 

type Trade: 
	[metadata key] 
	execution Execution (0..1) 
		[synonym CME_SubmissionIRS_1_0 value "TrdCaptRpt" set when "TrdCaptRpt->VenuTyp" exists]
		[synonym Workflow_Event value "fpmlTrade" set when "fpmlTrade->trade->executionType" exists]
		[synonym Workflow_Event value "fpmlExecution"]
	contract Contract (0..1) 
		[synonym Workflow_Event value "fpmlTrade" set when "fpmlTrade->trade->executionType" is absent]
		[synonym Workflow_Event value "fpmlContract"]
		[synonym CME_SubmissionIRS_1_0 value "TrdCaptRpt" set when "TrdCaptRpt->VenuTyp" is absent]
	condition Trade: one-of

type TradeWarehouseWorkflow: 
	warehouseIdentity WarehouseIdentityEnum (1..1)
		
	warehouseStatus WorkflowStatusEnum (1..1)
		
	partyCustomisedWorkflow PartyCustomisedWorkflow (0..*) 
		
		[synonym CME_SubmissionIRS_1_0 value "ignore"]

type TransferBase:
	identifier string (0..1) 
		[metadata scheme]
		
	transferCalculation TransferCalculation (0..1) 
		

type TransferCalculation:
	period CalculationPeriodBase (0..1 ) 
		
	lineage Lineage (0..*) 
	calculationOutcome calculation (0..1) 
		[synonym Workflow_Event value "transferCalculation"]


type TransferBreakdown extends TransferBase:
	lineage Lineage (0..*) 
		[synonym Workflow_Event value "lineage"]

type TransferorTransferee: 
	transferorPartyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "payerPartyReference" meta "href"]
	transferorAccountReference Account (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "payerAccountReference" meta "href"]
	transfereePartyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "receiverPartyReference" meta "href"]
	transfereeAccountReference Account (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "receiverAccountReference" meta "href"]

type Velocity:
	[synonym FpML_5_10 value "Velocity"]
	periodMultiplier int (0..1)
	period PeriodTimeEnum (0..1)


/****************
 * Workflow rules
 */
/*
 * workflow rule ClearedContractAgency_Participant 
 *
 *    Event <beta> is ClearingSubmission
 * 	relatedTo <alpha> where lineage -> @globalKey -> eventQualifier = eventQualifier.ClearingSubmission
 *
 *    constraint is economicTerms are the same except for payerReceiver or buyerSeller
 *    and <alpha> contract/execution is terminated  *Difference*
 *    and event date of <alpha> submission = trade date of <beta>
 *    and CCP which is in the party role in after state of <alpha> submission is the same as the CCP which is counterparty to <beta>
 */
/*
 * workflow rule ClearedContractAgency_CCP 
 *
 *    Event <beta> is ClearingSubmission
 * 	relatedTo <alpha> where lineage -> @globalKey -> eventQualifier = eventQualifier.ClearingSubmission
 * 	and relatedTo <gamma> where lineage -> @globalKey -> eventQualifier = eventQualifier.ClearedTrade *Difference*
 *
 *    constraint is economicTerms are the same except for payerReceiver or buyerSeller
 *    and event date of <alpha> submission = trade date of <beta>
 *    and CCP which is in the party role in after state of <alpha> submission is the same as the CCP which is counterparty to <beta> and <gamma> *Difference*
 */
/*
 * workflow rule ClearedContractPrincipal_Participant 
 *
 *   Event <beta> is ClearingSubmission
 * 	relatedTo <alpha> where lineage -> @globalKey -> eventQualifier = eventQualifier.ClearingSubmission
 * 	relatedTo <theta> where lineage -> @globalKey -> eventQualifier = eventQualifier.NewTrade or eventQualifier.ClearedTrade???? *Difference*

 *   constraint is economicTerms are the same except for payerReceiver or buyerSeller
 *   and <alpha> contract/execution is terminated  *Difference*
 *   and event date of <alpha> submission = trade date of <beta>
 *   and CCP which is in the party role in after state of <alpha> submission is the same as the CCP which is counterparty to <beta>
 */
/*
 * workflow rule ClearedContractPrincipal_CCP 
 *
 *    Event <beta> is ClearingSubmission
 * 	relatedTo <alpha> where lineage -> @globalKey -> eventQualifier = eventQualifier.ClearingSubmission
 * 	and relatedTo <gamma> where lineage -> @globalKey -> eventQualifier = eventQualifier.ClearedTrade *Difference*
 *
 *    constraint is economicTerms are the same except for payerReceiver or buyerSeller
 *    and event date of <alpha> submission = trade date of <beta>
 *    and CCP which is in the party role in after state of <alpha> submission is the same as the CCP which is counterparty to <beta> and <gamma> *Difference*
 */


import cdm.base.*
import cdm.base.datetime.*
import cdm.base.math.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*

// Note: All Eligible Collateral modelling/representation is still under development and discussion with ISDA Working groups

type AgencyRatingCriteria: 
	qualifier QuantifierEnum (1..1) 
	creditNotation CreditNotation (1..*)
		[metadata scheme]
	mismatchResolution CreditNotationMismatchResolutionEnum (0..1)
	referenceAgency CreditRatingAgencyEnum (0..1)

	condition ReferenceAgency: 
		if AgencyRatingCriteria -> mismatchResolution = CreditNotationMismatchResolutionEnum -> ReferenceAgency
		then AgencyRatingCriteria -> referenceAgency exists

type CollateralIssuerType: 
	issuerType IssuerTypeEnum (1..1) 
	supraNationalType SupraNationalIssuerTypeEnum (0..1) 
	quasiGovernmentType QuasiGovernmentIssuerType (0..1) 
	regionalGovernmentType RegionalGovernmentIssuerType (0..1) 
	specialPurposeVehicleType SpecialPurposeVehicleIssuerType (0..1)
	// fundType FundIssuerType (0..1) // NO LONGER REQUIRED - specified fund country of origin which now sits under ProductCriteria.productCountryOfOrigin
	
	condition SupraNationalSubType:
		if issuerType <> IssuerTypeEnum -> SupraNational		
		then supraNationalType is absent
	
	condition QuasiGovernmentSubType:
		if issuerType <> IssuerTypeEnum -> QuasiGovernment
		then quasiGovernmentType is absent
	
	condition RegionalGovernmentSubType:
		if issuerType <> IssuerTypeEnum -> RegionalGovernment
		then regionalGovernmentType is absent
	
	condition SpecialPurposeVehicleSubType:
		if issuerType <> IssuerTypeEnum -> SpecialPurposeVehicle
		then specialPurposeVehicleType is absent
		
	// condition FundSubType:
	// 	if issuerType <> IssuerTypeEnum -> Fund
	// 	then fundType is absent

type QuasiGovernmentIssuerType: 
	sovereignEntity boolean (1..1) 
	sovereignRecourse boolean (0..1) 
	// Eligible sovereigns specified by IssuerCriteria.issuerCountryOfOrigin
	// Eligible issuers specified by IssuerCriteria.issuerName
	// TODO: other (non-exhaustive) criteria e.g. GSEs with/without government support, EMIR public sector entities, US agencies
	
	condition NonSovereignEntityRecourse:
		if sovereignRecourse exists then sovereignEntity = False

type RegionalGovernmentIssuerType: 
	sovereignRecourse boolean (1..1) 
	// Eligible sovereigns specified by IssuerCriteria.issuerCountryOfOrigin
	// Eligible issuers specified by IssuerCriteria.issuerName
	// TODO: other (non-exhaustive) criteria e.g. US municipals, Canadian provinces, German Lander

type SpecialPurposeVehicleIssuerType: 
	creditRisk CreditRiskEnum (0..1)  // Not required?  If tranched credit risk then specified ProductCriteria.agencyRating. 
	// Eligible jurisdictions of incorporation is specified by IssuerCriteria.issuerCountryOfOrigin
	// TODO: other (non-exhaustive) criteria e.g. by asset class (RMBS, CMBS, CLO, by regional risk focus, by guarantor (e.g. Ginnie Mae)). Can the existing FpML framework be leveraged.  See type MortgageBackedSecurity

// type FundIssuerType:
// 	fundCountryOfOrigin string (0..*) 
// 		[metadata scheme]
// NOW Captured under ProductCriteria.productCountryOfOrigin
	// exchangeTraded is specified by EquityTypeEnum.ExchangeTradedFund

type CollateralProductType: 
	productType CollateralProductTypeEnum (1..1) 
	securityType SecurityTypeEnum (0..1) 
	bondType BondType (0..1)  
	equityType EquityTypeEnum (0..1) 
	fundType FundProductTypeEnum (0..1) 
	// productCountryOfOrigin string (0..*)  // Now sits under ProductCriteria, consistent with IssuerCriteria
	// 	[metadata scheme]

	condition SecuritySubType:
		if productType <> CollateralProductTypeEnum -> Security
		then ( securityType and bondType and equityType ) is absent 
	
	condition BondSubType:
		if securityType <> SecurityTypeEnum -> Bond
		then bondType is absent
	
	condition EquitySubType:
		if securityType <> SecurityTypeEnum -> Equity
		then equityType is absent

	condition FundSubType:
		if securityType <> SecurityTypeEnum -> Fund
		then fundType is absent


type CollateralValuationPercentage:
    valuationPercentage number (1..1) 
	fxHaircutPercentage number (0..1) 

	condition: valuationPercentage > 0 and valuationPercentage <=1
	condition: fxHaircutPercentage > 0 and fxHaircutPercentage <=1

type EligibleCollateral: 
[rootType]
	criteria EligibleCollateralCriteria (1..*)

type EligibleCollateralCriteria: 
	issuer IssuerCriteria (0..*) 
	product ProductCriteria (0..*) 
	valuationPercentage CollateralValuationPercentage (0..1) 

type IssuerCriteria: 
	issuerType CollateralIssuerType (0..*) 
    issuerCountryOfOrigin string (0..*)  // Same as list of eligible Sovereigns
		[metadata scheme]
	issuerName LegalEntity (0..*) 
	issuerAgencyRating AgencyRatingCriteria (0..*) 
	sovereignAgencyRating AgencyRatingCriteria (0..*) 
	counterpartyOwnIssuePermitted boolean (0..1)  // Explore options to infer this from one way risk
	
type ProductCriteria: 
	collateralProductType CollateralProductType (0..*) 
	productCountryOfOrigin string (0..*)  // Same as list of eligible Sovereigns
		[metadata scheme]
	denominatedCurrency string (0..*) 
	    [metadata scheme]
	agencyRating AgencyRatingCriteria (0..*) 
	maturityType MaturityTypeEnum (0..1) 
	maturityRange PeriodRange (0..1) 
	productIdentifier ProductIdentifier (0..*) 
    seasoned boolean (0..1)  // IS THIS REQUIRED - ISDA feedback is that this should be removed
	sinkable boolean (0..1)  // IS THIS REQUIRED - ISDA feedback is that this should be removed
//	indexLinked boolean (0..1)  NO LONGER REQUIRED - Captured under BondType.bondEconomics

type BondType: 
	bondClass BondClassEnum (0..1) 
	bondEconomics BondEconomics (0..*) 

type BondEconomics: 
	bondSeniority BondSeniorityEnum (0..1) 
	bondInterest BondInterestEnum (0..1) 
	bondPrincipal BondPrincipalEnum (0..1) 


/* 
// Previous version, temporarily kept for reference purposes
type EligibleCollateral: 
	[synonym FpML_5_10 value "EligibleCollateral"]
	// ISDA Create specifies the eligible collateral as well as the valuation % as a string. Let's discuss if there is room a for better approach.
	// The below approach which combines the asset, the tenor and the credit rating qualification is extremely comprehensive and was vetted extensively as part of the
	// FpML standard CSA initiative.
	// It should however be noted that one of the limitations of this approach is that the ISDA 2003 Collateral Assets Definitions have not been effectively used by
	// market participants as far as we understand.
	eligibleAsset CollateralAssetDefinitionsEnum (1..1) 
		[synonym FpML_5_10 value "eligibleAsset"]
		// TDOD: not sure how we can map ISDA_CREATE cases where items is a specific stock, i.e. "items": "BT stock"
		[synonym ISDA_Create_1_0 value "items" path "partyA_eligible_currencies"]
		[synonym ISDA_Create_1_0 value "items" path "partyB_eligible_currencies"]
	lowerMaturity Period (0..1) 
		[synonym FpML_5_10 value "lowerMaturity"]
	higherMaturity Period (0..1) 
		[synonym FpML_5_10 value "higherMaturity"]
	minimumRating CreditNotations (0..1) 
		[synonym FpML_5_10 value "minimumRating"]
	valuationPercentage number (0..1) 
		[synonym FpML_5_10 value "valuationPercentage"]
		// This mapping will not work in a number of cases, as the ISDA Credit field is specified as a string
		[synonym ISDA_Create_1_0 value "valuation_percentage" path "partyA_eligible_currencies"]
		[synonym ISDA_Create_1_0 value "valuation_percentage" path "partyB_eligible_currencies"]

	condition ValuationPercentage: 
		if valuationPercentage exists
		then valuationPercentage >= 0
			and valuationPercentage <= 1
*/


import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type Asian: 
	[synonym FpML_5_10 value "Asian"]

	averagingInOut AveragingInOutEnum (1..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingInOut"]
	strikeFactor number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "strikeFactor"]
	averagingPeriodIn AveragingPeriod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingPeriodIn"]
	averagingPeriodOut AveragingPeriod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingPeriodOut"]


type AveragingObservationList: 
	[synonym FpML_5_10 value "AveragingObservationList"]

	averagingObservation WeightedAveragingObservation (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingObservation"]


type AveragingPeriod: 
	[synonym FpML_5_10 value "AveragingPeriod"]

	schedule AveragingSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "schedule"]
	averagingDateTimes DateTimeList (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingDateTimes"]
	averagingObservations AveragingObservationList (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingObservations"]
	marketDisruption MarketDisruptionEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "marketDisruption" meta "marketDisruptionScheme"]
	condition Choice: 
		optional choice averagingDateTimes, averagingObservations


type AveragingSchedule: 
	[synonym FpML_5_10 value "AveragingSchedule"]

	startDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "startDate"]
	endDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "endDate"]
	averagingPeriodFrequency CalculationPeriodFrequency (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "averagingPeriodFrequency"]


type Barrier: 
	[synonym FpML_5_10 value "Barrier"]

	barrierCap TriggerEvent (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "barrierCap"]
	barrierFloor TriggerEvent (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "barrierFloor"]


type CalendarSpread: 
	[synonym FpML_5_10 value "CalendarSpread"]

	expirationDateTwo AdjustableOrRelativeDate (1..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "expirationDateTwo"]


type Composite: 
	[synonym FpML_5_10 value "Composite"]

	determinationMethod DeterminationMethodEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "determinationMethod"]
	relativeDate RelativeDateOffset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDate"]
	fxSpotRateSource FxSpotRateSource (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxSpotRateSource"]


type CreditEvents: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "CreditEvents" meta "id"]

	bankruptcy boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bankruptcy"]
	failureToPay FailureToPay (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "failureToPay"]
	failureToPayPrincipal boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "failureToPayPrincipal"]
	failureToPayInterest boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "failureToPayInterest"]
	obligationDefault boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "obligationDefault"]
	obligationAcceleration boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "obligationAcceleration"]
	repudiationMoratorium boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "repudiationMoratorium"]
	restructuring Restructuring (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "restructuring"]
	governmentalIntervention boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "governmentalIntervention"]
	distressedRatingsDowngrade boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "distressedRatingsDowngrade"]
	maturityExtension boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "maturityExtension"]
	writedown boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "writedown"]
	impliedWritedown boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "impliedWritedown"]
	defaultRequirement Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "defaultRequirement"]
	creditEventNotice CreditEventNotice (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditEventNotice"]


type CreditEventNotice:
	[synonym FpML_5_10 value "CreditEventNotice"]

	notifyingParty NotifyingParty (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notifyingParty"]
	businessCenter BusinessCenterEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenter"]
	publiclyAvailableInformation PubliclyAvailableInformation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "publiclyAvailableInformation"]


type FailureToPay:
	[synonym FpML_5_10 value "notifyingParty"]

	applicable boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "applicable"]
	gracePeriodExtension GracePeriodExtension (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "gracePeriodExtension"]
	paymentRequirement Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentRequirement"]


type FeaturePayment: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "FeaturePayment" meta "id"]

	payerReceiver PayerReceiver (1..1) 
	levelPercentage number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "levelPercentage"]
	amount number (0..1)	
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "amount"]
	time TimeTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "time"]
	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" meta "currencyScheme"]
	paymentDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "featurePaymentDate"]

	condition Choice: 
		required choice levelPercentage, amount

	condition Amount: 
		if amount exists
		then amount >= 0.0

type FxFeature: 
	[synonym FpML_5_10 value "FxFeature"]

	referenceCurrency string (1..1) 
		[metadata id]
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceCurrency" meta "id", "currencyScheme"]
	composite Composite (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "composite"]
	/*
	 * The below quanto associated definition makes reference to the Equity definitions.  Is that right, considering the cross-assets use of this construct?
	 */
	quanto Quanto (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quanto"]
	crossCurrency Composite (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "crossCurrency"]

	condition Choice: 
		required choice composite, quanto, crossCurrency

type GracePeriodExtension:
	[synonym FpML_5_10 value "GracePeriodExtension"]

	applicable boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "applicable"]
	gracePeriod Offset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "gracePeriod"]


type Knock: 
	[synonym FpML_5_10 value "Knock"]

	knockIn TriggerEvent (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "knockIn"]
	knockOut TriggerEvent (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "knockOut"]


type NotifyingParty:
	[synonym FpML_5_10 value "NotifyingParty"]

	buyerPartyReference Party (1..1)
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "buyerPartyReference" meta "href"]
	sellerPartyReference Party (0..1)
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "sellerPartyReference" meta "href"]


type OptionDenomination: 

	optionEntitlement number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "optionEntitlement"]
	entitlementCurrency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entitlementCurrency" meta "currencyScheme"]
	numberOfOptions number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "numberOfOptions"]

	condition PositiveOptionEntitlement: 
		if optionEntitlement exists
		then optionEntitlement >= 0.0

	condition PositiveNumberOfOptions: 
		if numberOfOptions exists
		then numberOfOptions >= 0.0

type OptionFeature: 
	[synonym FpML_5_10 value "OptionFeature"]

	fxFeature FxFeature (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxFeature"]
	strategyFeature StrategyFeature (0..1) 
	asian Asian (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "asian"]
	barrier Barrier (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "barrier"]
	knock Knock (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "knock"]
	passThrough PassThrough (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "passThrough"]


type OptionProvision: 
	cancelableProvision CancelableProvision (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cancelableProvision"]
		[synonym FpML_5_10 value "repo"]
	extendibleProvision ExtendibleProvision (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "extendibleProvision"]


type OptionSettlement extends SettlementTerms: 
	// TBD: refactor OptionCashSettlement and FxCashSettlement to be a unique class, where cash settlement can be specified in a given currency?
	cashSettlementTerms OptionCashSettlement (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlement"]
	physicalSettlementTerms OptionPhysicalSettlement (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "physicalSettlement"]
	fxSettlementTerms FxCashSettlement (0..1) 
		[synonym FpML_5_10 value "nonDeliverableSettlement"]

	condition Choice: 
		optional choice cashSettlementTerms, physicalSettlementTerms, fxSettlementTerms

	condition CashSettlementTerms: 
		if cashSettlementTerms exists
		then settlementType <> SettlementTypeEnum -> Physical

	condition PhysicalSettlementTerms: 
		if physicalSettlementTerms exists
		then settlementType <> SettlementTypeEnum -> Cash


type OptionStrike: 
	[synonym FpML_5_10 value "CreditOptionStrike"]

	spread number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "spread"]
	price number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "strikePrice" path "price"]
	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" path "price" meta "currencyScheme"]
	percentage number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "strikePercentage" path "price"]
	strikeReference FixedRateSpecification (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "strikeReference" meta "href"]
	referenceSwapCurve ReferenceSwapCurve (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceSwapCurve"]
	condition: one-of

type OptionStyle: 

	americanExercise AmericanExercise (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "americanExercise"]
	bermudaExercise BermudaExercise (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bermudaExercise"]
	europeanExercise EuropeanExercise (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "europeanExercise"]
	condition: one-of


type PassThrough: 
	[synonym FpML_5_10 value "PassThrough"]

	passThroughItem PassThroughItem (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "passThroughItem"]


type PassThroughItem: 
	[synonym FpML_5_10 value "PassThroughItem"]

	payerReceiver PayerReceiver (1..1) 
// TODO - To be developed	
//	underlier Underlier (1..1) reference 
//		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "underlierReference" meta "href"]
	passThroughPercentage number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "passThroughPercentage"]


type PubliclyAvailableInformation:
	[synonym FpML_5_10 value "PubliclyAvailableInformation"]

	standardPublicSources boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "standardPublicSources"]
	publicSource string (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "publicSource"]
	specifiedNumber int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "specifiedNumber"]

	condition SourceChoice: 
		required choice standardPublicSources, publicSource

	condition PositiveSpecifiedNumber: 
		if specifiedNumber exists
		then specifiedNumber >= 0

/*
 * The below definition originating from FpML probably needs to be updated, as it is very equity-specific.
 */
type Quanto: 
	[synonym FpML_5_10 value "Quanto"]

	fxRate FxRate (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxRate"]
	fxSpotRateSource FxSpotRateSource (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxSpotRateSource"]


type Restructuring:
	[synonym FpML_5_10 value "Restructuring"]

	applicable boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "applicable"]
	restructuringType RestructuringEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "restructuringType" meta "restructuringScheme"]
	multipleHolderObligation boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "multipleHolderObligation"]
	multipleCreditEventNotices boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "multipleCreditEventNotices"]


type StrategyFeature: 

	strikeSpread StrikeSpread (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "strikeSpread" path "strategyFeature"]
	calendarSpread CalendarSpread (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calendarSpread" path "strategyFeature"]


type StrikeSpread: 
	[synonym FpML_5_10 value "StrikeSpread"]

	upperStrike OptionStrike (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "upperStrike"]
	upperStrikeNumberOfOptions number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "upperStrikeNumberOfOptions"]


type Trigger: 
	[synonym FpML_5_10 value "Trigger"]

	level number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "level"]
	levelPercentage number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "levelPercentage"]
	creditEvents CreditEvents (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditEvents"]
	creditEventsReference CreditEvents (0..1)
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditEventsReference" meta "href"]
	triggerType TriggerTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "triggerType"]
	triggerTimeType TriggerTimeTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "triggerTimeType"]

	condition Choice1: 
		required choice level, levelPercentage , creditEvents , creditEventsReference

	// condition Choice2: 
	// 	required choice creditEvents, creditEventsReference

type TriggerEvent: 
	[synonym FpML_5_10 value "TriggerEvent"]

	schedule AveragingSchedule (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "schedule"]
	triggerDates DateList (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "triggerDates"]
	trigger Trigger (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "trigger"]
	featurePayment FeaturePayment (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "featurePayment"]


type WeightedAveragingObservation: 
	[synonym FpML_5_10 value "WeightedAveragingObservation"]

	dateTime zonedDateTime (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateTime"]
	observationNumber int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "observationNumber"]
	weight number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "weight"]

	condition Choice: 
		required choice dateTime, observationNumber

	condition PositiveObservationNumber: 
		if observationNumber exists
		then observationNumber >= 0

	condition PositiveWeight: 
		if weight exists
		then weight >= 0.0


import cdm.base.*
import cdm.base.datetime.*
import cdm.base.math.*
import cdm.synonyms.config.*

type PrimitiveEvent: 
	execution ExecutionPrimitive (0..1)
		[synonym Workflow_Event value "executionPrimitive" path "primitive"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0, FpML_5_10 value "ignore"]
	contractFormation ContractFormationPrimitive (0..1)
		[synonym Workflow_Event value "contractFormation" path "primitive"]
		[synonym CME_SubmissionIRS_1_0 value "ignore"]
	split SplitPrimitive (0..1)
		[synonym Workflow_Event value "split" path "primitive"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]
	exercise ExercisePrimitive (0..1)
		[synonym Workflow_Event value "exercise" path "primitive"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]
	observation ObservationPrimitive (0..1)
		[synonym Workflow_Event value "observation" path "primitive"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]
	quantityChange QuantityChangePrimitive (0..1)
		[synonym Workflow_Event value "quantityChange" path "primitive"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]
	reset ResetPrimitive (0..1)
		[synonym Workflow_Event value "reset" path "primitive"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]
	termsChange TermsChangePrimitive (0..1) 
		[synonym Workflow_Event value "termsChange" path "primitive"]
		[synonym CME_ClearedConfirm_1_17 value "ignore"]
	transfer TransferPrimitive (0..1)
		[synonym Workflow_Event value "transfer" path "primitive"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]
		
	condition PrimitiveEvent: one-of

type ExecutionPrimitive: 
	before ExecutionState (0..0) 
		[metadata reference]
		[synonym Workflow_Event value "before"]
	after ExecutionState (1..1) 
		[synonym Workflow_Event value "after"]

type ContractFormationPrimitive: 
	before ExecutionState (0..1) 
		[metadata reference]
		[synonym Workflow_Event value "before"]
	after PostContractFormationState (1..1) 
		[synonym Workflow_Event value "after"]
		[synonym CME_ClearedConfirm_1_17 value "clearingConfirmed"]
	// TODO enable condition once party has been refactored out of product
//	condition: 
//		before -> execution -> tradableProduct -> product = after -> contract -> tradableProduct -> product

	condition: 
		if before exists then before -> execution -> tradableProduct -> quantityNotation = after -> contract -> tradableProduct -> quantityNotation
	
	condition: 
		if before exists then before -> execution -> tradableProduct -> priceNotation = after -> contract -> tradableProduct -> priceNotation


type SplitPrimitive: 
	before Trade (1..1) 
		[metadata reference]
		[synonym Workflow_Event value "before"]
	after SplitOutcome (1..1) 
		[synonym Workflow_Event value "after"]

	condition: 
		if before -> execution exists
		then after -> originalTrade -> execution exists
			and after -> splitTrades -> execution exists
			and after -> splitTrades -> contract is absent
	
	condition: 
		if before -> contract exists
		then after -> originalTrade -> contract exists
			and after -> splitTrades -> contract exists
			and after -> splitTrades -> execution is absent

	condition: 
		if before -> execution exists
		then after -> splitTrades -> execution -> tradableProduct -> product = before -> execution -> tradableProduct -> product
	
	condition:  
		if before -> contract exists
		then after -> splitTrades -> contract -> tradableProduct -> product = before -> contract -> tradableProduct -> product
	
	condition: 
		if before -> execution exists
		then Sum( after -> splitTrades -> execution -> tradableProduct -> quantityNotation -> quantity -> amount ) = before -> execution -> tradableProduct -> quantityNotation -> quantity -> amount
	
	condition:  
		if before -> contract exists
		then Sum( after -> splitTrades -> contract -> tradableProduct -> quantityNotation -> quantity -> amount ) = before -> contract -> tradableProduct -> quantityNotation -> quantity -> amount
	
	// TODO add syntax to handle comparison between list and single item.  https://github.com/REGnosys/rosetta-dsl/issues/167
	condition: 
		if before -> execution exists
		then after -> splitTrades -> execution -> tradableProduct -> priceNotation = before -> execution -> tradableProduct -> priceNotation
	
	condition:  
		if before -> contract exists
		then after -> splitTrades -> contract -> tradableProduct -> priceNotation = before -> contract -> tradableProduct -> priceNotation
	
type ExercisePrimitive: 
	exerciseDate AdjustableOrAdjustedDate (0..1)
		[synonym Workflow_Event value "exerciseDate"]
	exerciseTime BusinessCenterTime (0..1)
		[synonym Workflow_Event value "exerciseTime"]
	fullExercise boolean (1..1)
		[synonym Workflow_Event value "fullExercise"]
	before ContractState (1..1)
		[metadata reference]
		[synonym Workflow_Event value "before"]
	after ExerciseOutcome (1..1)
		[synonym Workflow_Event value "after"]

type ObservationPrimitive: 
	source ObservationSource (1..1) 
		[synonym Workflow_Event value "source"]
	observation number (1..1) 
		[synonym Workflow_Event value "observation"]
	date date (1..1) 
		[synonym Workflow_Event value "date"]
		
	time TimeZone (0..1) 
		[synonym Workflow_Event value "time"]
	side QuotationSideEnum (0..1) 
		[synonym Workflow_Event value "side"]

type QuantityChangePrimitive: 
	before Trade (1..1) 
		[metadata reference]
		[synonym Workflow_Event value "before"]
	after Trade (1..1) 
		[synonym Workflow_Event value "after"]

type ResetPrimitive: 
	before ContractState (1..1) 
		[metadata reference]
		[synonym Workflow_Event value "ignore"]
	after ContractState (1..1) 
		[synonym Workflow_Event value "ignore"]
	condition Contract: 
		if ResetPrimitive exists
		then before -> contract = after -> contract

type TermsChangePrimitive: 
	before Trade (1..1)
		[metadata reference]
		[synonym Workflow_Event value "before"]
		[synonym CME_SubmissionIRS_1_0 value "ignore"]
	after Trade (1..1)
		[synonym Workflow_Event value "after"]

type TransferPrimitive: 
	[metadata key]
	identifier string (0..1) 
		[metadata scheme]
		
	settlementType TransferSettlementEnum (0..1) 
		[synonym Workflow_Event value "transferType"]
		
	settlementDate AdjustableOrAdjustedOrRelativeDate (1..1)
		[synonym Workflow_Event value "settlementDate"]
	cashTransfer CashTransferComponent (0..*) 
		[synonym Workflow_Event value "cashTransfer"]
		
	securityTransfer SecurityTransferComponent (0..*) 
		[synonym Workflow_Event value "securityTransfer"]
	commodityTransfer CommodityTransferComponent (0..*)
	status TransferStatusEnum (0..1) 
		[synonym Workflow_Event value "status"]
	settlementReference string (0..1) 
		[synonym Workflow_Event value "settlementReference"]



import cdm.base.math.*

// TODO: paragraph 2
// Scenario A: trading relationship ceases, security interest released all collateral return (even if under MTA)
// Scenario B: trading relationship falls below 50M IM threshold, security interest released all collateral return (even if under MTA)

func DeliveryAmount: 
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (0..*)
		priorDeliveryAmountAdjustment Money (1..1) 
		priorReturnAmountAdjustment Money (1..1) 
		disputedTransferredPostedCreditSupportAmount Money (1..1) 
		marginAmount Money (1..1) 
		threshold Money (1..1) 
		marginApproach MarginApproachEnum (1..1) 
		marginAmountIA Money (0..1)  
		minimumTransferAmount Money (1..1) 
		rounding CollateralRounding (1..1) 
		disputedDeliveryAmount Money (1..1) 
		baseCurrency string (1..1) 

	output:
		result Money (1..1)

	alias undisputedAdjustedPostedCreditSupportAmount:
		UndisputedAdjustedPostedCreditSupportAmount( postedCreditSupportItems, priorDeliveryAmountAdjustment, priorReturnAmountAdjustment, disputedTransferredPostedCreditSupportAmount, baseCurrency )

	alias creditSupportAmount:
		CreditSupportAmount( marginAmount, threshold, marginApproach, marginAmountIA, baseCurrency )

	alias deliveryAmount:
		Max( creditSupportAmount -> amount - undisputedAdjustedPostedCreditSupportAmount -> amount, 0.0 )

	alias undisputedDeliveryAmount:
		Max( deliveryAmount - disputedDeliveryAmount -> amount, 0.0 )

	condition:
		( baseCurrency = minimumTransferAmount -> currency )
		and ( baseCurrency = disputedDeliveryAmount -> currency )

	assign-output result -> amount:
		if undisputedDeliveryAmount >= minimumTransferAmount -> amount
		then RoundToNearest( undisputedDeliveryAmount, rounding -> deliveryAmount, RoundingModeEnum -> Up )
		else 0.0

	assign-output result -> currency:
		baseCurrency


func ReturnAmount: 
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (0..*)
		priorDeliveryAmountAdjustment Money (1..1) 
		priorReturnAmountAdjustment Money (1..1) 
		disputedTransferredPostedCreditSupportAmount Money (1..1) 
		marginAmount Money (1..1)  
		threshold Money (1..1) 
		marginApproach MarginApproachEnum (1..1) 
		marginAmountIA Money (0..1) 
		minimumTransferAmount Money (1..1) 
		rounding CollateralRounding (1..1) 
		disputedReturnAmount Money (1..1) 
		baseCurrency string (1..1) 

	output:
		result Money (1..1)

	alias undisputedAdjustedPostedCreditSupportAmount:
		UndisputedAdjustedPostedCreditSupportAmount( postedCreditSupportItems, priorDeliveryAmountAdjustment, priorReturnAmountAdjustment, disputedTransferredPostedCreditSupportAmount, baseCurrency )

	alias creditSupportAmount:
		CreditSupportAmount( marginAmount, threshold, marginApproach, marginAmountIA, baseCurrency )

	alias returnAmount:
		Max( undisputedAdjustedPostedCreditSupportAmount -> amount - creditSupportAmount -> amount, 0.0 )

	alias undisputedReturnAmount:
		Max( returnAmount - disputedReturnAmount -> amount, 0.0 )

	condition:
		( baseCurrency = minimumTransferAmount -> currency )
		and ( baseCurrency = disputedReturnAmount -> currency )

	assign-output result -> amount:
		if undisputedReturnAmount >= minimumTransferAmount -> amount
		then RoundToNearest( undisputedReturnAmount, rounding -> returnAmount, RoundingModeEnum -> Down )
		else 0.0

	assign-output result -> currency:
		baseCurrency


func CreditSupportAmount: 
	[calculation]

	inputs:
		marginAmount Money (1..1) 
		threshold Money (1..1) 
		marginApproach MarginApproachEnum (1..1) 
		marginAmountIA Money (0..1) 
		baseCurrency string (1..1)  

	output:
		result Money (1..1)

	alias creditSupportAmountCalc:
		Max( marginAmount -> amount - threshold -> amount, 0.0 )

	condition:
		( baseCurrency = marginAmount -> currency )
		and ( baseCurrency = threshold -> currency )
		and ( if marginAmountIA exists then baseCurrency = marginAmountIA -> currency else True )

	condition:
		if marginApproach = MarginApproachEnum -> Distinct or marginApproach = MarginApproachEnum -> Allocated
		then marginAmountIA is absent
		else if marginApproach = MarginApproachEnum -> GreaterOf
		then marginAmountIA exists

	assign-output result -> amount: 
		if marginApproach = MarginApproachEnum -> Distinct or marginApproach = MarginApproachEnum -> Allocated
		// TODO if allocated the CreditSupportAmount is used in further calculations for the marginAmountIA
		then creditSupportAmountCalc
		else if marginApproach = MarginApproachEnum -> GreaterOf
		then Max( creditSupportAmountCalc, marginAmountIA -> amount )

	assign-output result -> currency:
		baseCurrency


func UndisputedAdjustedPostedCreditSupportAmount:
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (0..*)
		priorDeliveryAmountAdjustment Money (1..1) 
		priorReturnAmountAdjustment Money (1..1) 
		disputedTransferredPostedCreditSupportAmount Money (1..1) 
		baseCurrency string (1..1)  

	output:
		result Money (1..1)
		
	alias totalPostedCreditSupportAmount:
		SumPostedCreditSupportItemAmounts( postedCreditSupportItems, baseCurrency )

	alias adjustedPostedCreditSupportAmount:
		totalPostedCreditSupportAmount -> amount + priorDeliveryAmountAdjustment -> amount - priorReturnAmountAdjustment -> amount
	
	condition:
		( baseCurrency = priorDeliveryAmountAdjustment -> currency )
		and ( baseCurrency = priorReturnAmountAdjustment -> currency )
		and ( baseCurrency = disputedTransferredPostedCreditSupportAmount -> currency )
	
	assign-output result -> amount:
		adjustedPostedCreditSupportAmount - disputedTransferredPostedCreditSupportAmount -> amount
	
	assign-output result -> currency:
		baseCurrency


func SumPostedCreditSupportItemAmounts: 
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (1..*)
		baseCurrency string (1..1)  

	output:
		result Money (1..1)


func PostedCreditSupportItemAmount: 
	[calculation]

	inputs:
		item PostedCreditSupportItem (1..1)
		baseCurrency string (1..1)  

	output:
		result Money (1..1)

	alias cashOrSecurityValue:
		item -> cashOrSecurityValue -> amount

	alias valuationPercentage:
		item -> valuationPercentage

	alias fxHaircutPercentage:
		item -> fxHaircutPercentage

	alias postedCreditSupportAmount:
		cashOrSecurityValue * ( valuationPercentage - fxHaircutPercentage ) / 100.0

	condition:
		( baseCurrency = item -> cashOrSecurityValue -> currency ) 
		and ( baseCurrency = item -> disputedCashOrSecurityValue -> currency )

	assign-output result -> amount:
		postedCreditSupportAmount - item -> disputedCashOrSecurityValue -> amount

	assign-output result -> currency:
		baseCurrency


type PostedCreditSupportItem: 
	cashOrSecurityValue Money (1..1) 
	valuationPercentage number (1..1) 
	fxHaircutPercentage number (1..1) 
	disputedCashOrSecurityValue Money (1..1) 



import cdm.base.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type AssignedIdentifier: 
	identifier string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "tradeId" meta "tradeIdScheme"]
		[synonym FpML_5_10 value "tradeId" path "versionedTradeId" meta "tradeIdScheme"]
		[synonym Workflow_Event value "identifier"]
		[synonym CME_ClearedConfirm_1_17 value "tradeId" meta "tradeIdScheme"]
		[synonym CME_ClearedConfirm_1_17 value "usi" meta "usiScheme"]
		[synonym CME_SubmissionIRS_1_0 value "RptID" path "TrdCaptRpt"]
		[synonym FpML_5_10 value "businessUnitId" meta "unitScheme"]
	version int (0..1) 
		[synonym FpML_5_10 value "version" path "versionedTradeId"]
		[synonym FpML_5_10 value "version"]


type Identifier: 
	[metadata key]
	[synonym FpML_5_10 meta "id"]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0 meta "id" path "versionedTradeId->tradeId"]
	issuerReference Party (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "issuer" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "partyReference" meta "href"]
		
		[synonym CME_ClearedConfirm_1_17 value "partyReference" meta "href"]
	issuer string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "issuer" meta "issuerIdScheme"]
		
		
		[synonym CME_ClearedConfirm_1_17 value "issuer" meta "issuerIdScheme"]
	assignedIdentifier AssignedIdentifier (1..*) 
	condition IssuerChoice: 
		required choice issuerReference, issuer

		
		
 

import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.party.*

annotation creation: 
    [prefix Create]
    PrimitiveEvent PrimitiveEvent (0..1) 
    BusinessEvent BusinessEvent (0..1) 

func Create_Execution:
	[creation BusinessEvent]
	inputs:
		product Product (1..1) 
		quantityNotation QuantityNotation (1..*) 
		priceNotation PriceNotation (0..*) 
		parties Party (2..2) 
		partyRoles PartyRole (0..*) 

	output:
		executionEvent BusinessEvent (1..1)

	assign-output executionEvent -> primitives -> execution:
		Create_ExecutionPrimitive(product, quantityNotation, priceNotation, parties, partyRoles)

	assign-output executionEvent -> eventEffect -> execution:
		executionEvent -> primitives -> execution -> after -> execution

func Create_ExecutionPrimitive: 
	[creation PrimitiveEvent]
	inputs:
		product Product (1..1) 
		quantityNotation QuantityNotation (1..*) 
		priceNotation PriceNotation (0..*) 
		parties Party (2..2) 
		partyRoles PartyRole (0..*) 

	output:
		executionPrimitive ExecutionPrimitive (1..1)

	assign-output executionPrimitive -> after -> execution -> tradableProduct -> product:
		product

	assign-output executionPrimitive -> after -> execution -> tradableProduct -> priceNotation:
		priceNotation

	assign-output executionPrimitive -> after -> execution -> tradableProduct -> quantityNotation:
		quantityNotation

	assign-output executionPrimitive -> after -> execution -> party:
		parties

	assign-output executionPrimitive -> after -> execution -> partyRole:
 		partyRoles

	post-condition: 
		executionPrimitive -> before is absent

func Create_ContractFormation: 
	[creation BusinessEvent]
	inputs:
		executionEvent BusinessEvent (1..1)
		legalAgreement LegalAgreement (0..1)

	output:
		contractFormationEvent BusinessEvent (1..1)

	alias execution:
		executionEvent -> primitives -> execution -> after -> execution

	condition : 
		execution exists and
		execution -> tradableProduct -> product -> contractualProduct exists

	condition : 
		if legalAgreement exists then legalAgreement -> contractualParty contains execution -> party

	assign-output contractFormationEvent -> primitives -> contractFormation: 
		Create_ContractFormationPrimitive(executionEvent -> primitives only-element -> execution -> after -> execution, legalAgreement)

	assign-output contractFormationEvent -> eventEffect -> contract:
		contractFormationEvent -> primitives -> contractFormation -> after -> contract

	assign-output contractFormationEvent -> eventEffect -> effectedExecution:
		contractFormationEvent -> primitives -> contractFormation -> before -> execution
	post-condition : 
		contractFormationEvent -> eventEffect -> effectedContract is absent
		and contractFormationEvent -> eventEffect -> productIdentifier is absent
		and contractFormationEvent -> eventEffect -> transfer is absent

func Create_ContractFormationPrimitive: 
	[creation PrimitiveEvent]
	inputs:
		execution Execution (1..1)
		legalAgreement LegalAgreement (0..1)

	output:
		contractFormation ContractFormationPrimitive (1..1)

	alias contract:
		contractFormation -> after -> contract

	assign-output contractFormation -> before -> execution: 
		execution

	assign-output contract -> tradableProduct:
		execution -> tradableProduct

	assign-output contract -> contractIdentifier:
		execution -> identifier

	assign-output contract -> tradeDate -> date:
		execution -> tradeDate

	assign-output contract -> partyRole:
		execution -> partyRole

	assign-output contract -> party:
		execution -> party

	assign-output contract -> documentation -> legalAgreement: 
		if legalAgreement exists then legalAgreement

func Create_Reset:
	[creation BusinessEvent]
	inputs:
		previousEvent BusinessEvent (1..1)
		observationEvent BusinessEvent (1..1)
		date date (1..1)

	output:
		resetEvent BusinessEvent (1..1)

	alias contractState: 
		ExtractContractState(previousEvent)

	alias contract:
		contractState -> contract

	alias observation:
		observationEvent -> primitives  only-element -> observation

	condition: 
		contractState exists

	condition: 
		observation exists

	assign-output resetEvent -> primitives -> reset:
		Create_ResetPrimitive(contractState, observation, date)

	assign-output resetEvent -> eventEffect -> effectedContract:
		contract as-key

	assign-output resetEvent -> eventEffect -> contract:
		contract as-key

	post-condition:
		resetEvent -> eventEffect -> effectedExecution is absent
		and resetEvent -> eventEffect -> execution is absent
		and resetEvent -> eventEffect -> productIdentifier is absent

func Create_ResetPrimitive: 
	[creation PrimitiveEvent]
	inputs:
		contractState ContractState (1..1)
		observation ObservationPrimitive (1..1)
		date date (1..1)

	output:
		resetPrimitive ResetPrimitive (1..1)

	alias contract:
		contractState -> contract

	assign-output resetPrimitive -> before:
		contractState

	assign-output resetPrimitive -> after -> contract:
		contractState -> contract

	assign-output resetPrimitive -> after -> updatedContract: 
		ResolveUpdatedContract(contractState, observation, date)

func ResolveUpdatedContract: 
	inputs:
		contractState ContractState (1..1)
		observation ObservationPrimitive (1..1)
		date date (1..1)

	output:
		updatedContract Contract (1..1) 

	alias payout:
		contractState -> contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout

	assign-output updatedContract:
		if payout -> equityPayout exists then ResolveEquityContract(contractState, observation, date)

func Create_CashTransfer: 
	[creation BusinessEvent]
	inputs:
		resetEvent BusinessEvent (1..1)
	output:
		transferEvent BusinessEvent (1..1)

	alias contractState:
		resetEvent -> primitives -> reset -> after

	condition: 
		resetEvent -> primitives -> reset exists

	assign-output transferEvent -> primitives -> transfer:
		Create_CashTransferPrimitive(contractState only-element , resetEvent -> eventDate)

	post-condition: 
		transferEvent -> primitives -> transfer only exists

	post-condition: 
		transferEvent -> eventEffect -> effectedContract = contractState -> contract
		and transferEvent -> eventEffect -> contract = contractState -> contract
		and transferEvent -> eventEffect -> effectedExecution is absent
		and transferEvent -> eventEffect -> execution is absent
		and transferEvent -> eventEffect -> productIdentifier is absent

func Create_CashTransferPrimitive: 
	[creation PrimitiveEvent]
	inputs:
		contractState ContractState (1..1)
		date date (1..1)

	output:
		transfer TransferPrimitive (1..1)

	alias cashflow:
		ResolveCashflow(contractState, date)

	assign-output transfer -> status:
		TransferStatusEnum -> Instructed

	assign-output transfer -> cashTransfer -> amount:
		cashflow -> cashflowAmount

	assign-output transfer -> cashTransfer -> payerReceiver:
		cashflow -> payerReceiver

	assign-output transfer -> settlementDate:
		cashflow -> cashflowDate

func ResolveCashflow: 
	inputs:
		contractState ContractState (1..1)
		date date (1..1)

	output:
		cashflow Cashflow (1..1)

	assign-output cashflow -> cashflowAmount:
		if contractState -> contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> equityPayout exists
		then EquityCashSettlementAmount(contractState, date)

	assign-output cashflow -> cashflowDate -> adjustedDate:
		ResolveCashSettlementDate(contractState)

func ResolveCashSettlementDate: 
	inputs: contractState ContractState (1..1)
	output: date date (1..1)

func Create_Allocation: 
	[creation BusinessEvent]
	inputs:
		execution Execution (1..1) 
		allocationInstruction AllocationInstruction (1..1) 
	
	output:
		businessEvent BusinessEvent (1..1) 

	alias splitPrimitive:
		Create_SplitPrimitive( ExecutionAsTrade( execution ), allocationInstruction -> breakdowns -> quantity )

//	assign-output businessEvent -> primitives -> split:
//		splitPrimitive

	/*
	 * TODO: Requires DSL support so implemented in Java:
	 *
	 * Proposed syntax changes:  
	 * Option 1 - loop through split executions to create contract formation primitive for each one:
	 *  - for loop syntax support required to create contract formation primitive for each split execution
	 *  - list append syntax support required to add each contract formation primitive to the list of primitives 
	 *  Option 2 - create function that creates list of contract formation primitives 
	 *  - syntax support for returning lists from functions
	 *  - syntax support for list add all (to add function result to list of primitives)
	 */
//	add-output businessEvent -> primitives -> contractFormation for-each splitPrimitive -> after -> splitTrades -> execution:
//		then Create_ContractFormationPrimitive( it, empty )

	post-condition:  
		businessEvent -> primitives -> split exists and businessEvent -> primitives -> contractFormation exists
			
	post-condition: 
		if businessEvent -> primitives -> split -> after -> originalTrade -> execution exists
		then businessEvent -> primitives -> split -> after -> originalTrade -> execution -> closedState -> state = ClosedStateEnum -> Allocated
	
	post-condition: 
		if businessEvent -> primitives -> split -> after -> originalTrade -> contract exists
		then businessEvent -> primitives -> split -> after -> originalTrade -> contract -> closedState -> state = ClosedStateEnum -> Allocated

func Create_SplitPrimitive: 
	[creation PrimitiveEvent]
	inputs:
		trade Trade (1..1) 
		splitInstructions QuantityNotation (1..*) 

	output:
		primitive SplitPrimitive (1..1) 

func Settle: 
	// TODO Never referenced in CDM
	inputs:
		execution Execution (1..1) 
		previousEvent WorkflowStep (1..1) 

	output:
		transferEvent WorkflowStep (1..1) 

	condition:
		execution -> tradableProduct -> product -> security exists

	assign-output transferEvent -> businessEvent -> primitives -> transfer:
		Create_TransferPrimitive(execution)

	assign-output transferEvent -> lineage -> eventReference:
		previousEvent as-key

	assign-output transferEvent -> lineage -> executionReference:
		execution as-key


func Create_TransferPrimitive: 
	[creation PrimitiveEvent]
	inputs:
		execution Execution (1..1)

	output:
		transferPrimitive TransferPrimitive (1..1) 

	assign-output transferPrimitive -> status:
		TransferStatusEnum -> Instructed

	post-condition:
		if execution -> tradableProduct -> product -> security exists and execution -> settlementTerms -> transferSettlementType = TransferSettlementEnum -> DeliveryVersusPayment
		then transferPrimitive -> cashTransfer exists
			and transferPrimitive -> securityTransfer exists
			and transferPrimitive -> commodityTransfer is absent


func Create_QuantityChangePrimitive: 
	[creation PrimitiveEvent]
	inputs:
		trade Trade (1..1)
		currencyAmount number (0..1)
		noOfUnits number (0..1)
		
	output:
		quantityChangePrimitive QuantityChangePrimitive (1..1)

	condition:
		( currencyAmount or noOfUnits ) exists

	assign-output quantityChangePrimitive -> before:
		trade as-key
	
	post-condition: 
		if quantityChangePrimitive -> before -> execution exists then quantityChangePrimitive -> after -> execution exists
			and if quantityChangePrimitive -> before -> contract exists then quantityChangePrimitive -> after -> contract exists


func Create_PriceChangePrimitive:
	[creation PrimitiveEvent]
	inputs:
		trade Trade (1..1)
		cashPrice number (1..1)

	output:
		termsChangePrimitive TermsChangePrimitive (1..1)


func Create_TerminationQuantityChangePrimitive: 
	[creation PrimitiveEvent]
	inputs:
		contract Contract (1..1)

	output:
		quantityChangePrimitive QuantityChangePrimitive (1..1)

	assign-output quantityChangePrimitive -> before -> contract: 
		contract

	assign-output quantityChangePrimitive -> after -> contract: 
		TerminateContract(contract)

func EvaluatePortfolioState: 
	// TODO Never referenced in CDM
	inputs:
		portfolio Portfolio (1..1) 

	output:
		portfolioState PortfolioState (1..1) 

func TerminateContract:
	inputs:
		contract Contract (1..1)

	output:
		terminatedContract Contract (1..1)

	assign-output terminatedContract -> contractIdentifier:
		contract -> contractIdentifier
	assign-output terminatedContract -> tradeDate:
		contract -> tradeDate
	assign-output terminatedContract -> clearedDate:
		contract -> clearedDate
	assign-output terminatedContract -> tradableProduct -> product:
		contract -> tradableProduct -> product
	assign-output terminatedContract -> tradableProduct -> priceNotation:
		contract -> tradableProduct -> priceNotation
	assign-output terminatedContract -> collateral:
		contract -> collateral
	assign-output terminatedContract -> documentation:
		contract -> documentation
	assign-output terminatedContract -> governingLaw:
		contract -> governingLaw
	assign-output terminatedContract -> party:
		contract -> party
	assign-output terminatedContract -> account:
		contract -> account
	assign-output terminatedContract -> partyRole:
		contract -> partyRole
	assign-output terminatedContract -> calculationAgent:
		contract -> calculationAgent
	assign-output terminatedContract -> partyContractInformation:
		contract -> partyContractInformation

	assign-output terminatedContract -> closedState -> state: 
		ClosedStateEnum -> Terminated

	assign-output terminatedContract -> tradableProduct -> quantityNotation -> quantity -> amount: 
        0.0

func NewExecutionPrimitiveEvent:
	inputs:
		executionPrimitive ExecutionPrimitive (0..1)
	output:
		primitiveEvent PrimitiveEvent (0..1)

	assign-output primitiveEvent -> execution:
		executionPrimitive

func NewContractFormationPrimitiveEvent:
	inputs:
		contractFormation ContractFormationPrimitive (0..1)
	output:
		primitiveEvent PrimitiveEvent (0..1)

	assign-output primitiveEvent -> contractFormation:
	contractFormation

func NewQuantityChangePrimitiveEvent:
	inputs:
		quantityChangePrimitive QuantityChangePrimitive (0..1)
	output:
		primitiveEvent PrimitiveEvent (0..1)

	assign-output primitiveEvent -> quantityChange:
	quantityChangePrimitive

type ClearingInstruction: 
	clearingParty Party(1..1)
	alphaContract Contract (1..1)
		[metadata reference]

func Create_Clear: 
	[creation BusinessEvent]
	inputs:
		clearingInstruction ClearingInstruction(1..1) 

	output:
		clearedEvent BusinessEvent (1..1) 

	alias alpha:
		clearingInstruction -> alphaContract

	alias party1: 
		PartyByRole(alpha -> partyRole, PartyRoleEnum -> ExecutingEntity)
		
	alias party2: 
		PartyByRole(alpha -> partyRole, PartyRoleEnum -> Counterparty)

	alias alphaTerminated: 
		Create_TerminationQuantityChangePrimitive(alpha)
	alias alphaTerminatedPrimitives: NewQuantityChangePrimitiveEvent(alphaTerminated)

	alias clearerRole: 
		PartyRoleForParty(clearingInstruction -> clearingParty, PartyRoleEnum -> ClearingOrganization)

	alias betaExecution: 
		Create_ExecutionPrimitive(alpha -> tradableProduct -> product, alpha -> tradableProduct -> quantityNotation, alpha -> tradableProduct -> priceNotation, [clearingInstruction -> clearingParty, party1], [clearerRole])
	alias betaExecutionPrimitives: NewExecutionPrimitiveEvent(betaExecution)

	alias betaContract: 
		Create_ContractFormationPrimitive(betaExecution -> after -> execution, empty)
	alias betaContractPrimitives: NewContractFormationPrimitiveEvent(betaContract)

	alias gammaExecution: 
		Create_ExecutionPrimitive(alpha -> tradableProduct -> product, alpha -> tradableProduct -> quantityNotation, alpha -> tradableProduct -> priceNotation, [clearingInstruction -> clearingParty, party2], [clearerRole])
	alias gammaExecutionPrimitives: NewExecutionPrimitiveEvent(gammaExecution)

	alias gammaContract: 
		Create_ContractFormationPrimitive(gammaExecution -> after -> execution, empty)
	alias gammaContractPrimitives: NewContractFormationPrimitiveEvent(gammaContract)

	assign-output clearedEvent -> primitives:
		[
			alphaTerminatedPrimitives,
			betaExecutionPrimitives,
			betaContractPrimitives,
			gammaExecutionPrimitives,
			gammaContractPrimitives
		]

func ExecutionAsTrade:
	inputs:
		execution Execution (0..1)
	
	output:
		trade Trade (1..1)
	
	assign-output trade -> execution:
		execution


annotation metadata:
     id string (0..1)
     key string (0..1) 
     scheme string (0..1)
     reference string (0..1)

annotation calculation: 

annotation rootType: 

annotation qualification: 
	[prefix Qualify]
	Product boolean (0..1)
	BusinessEvent boolean (0..1)

annotation deprecated: 


import cdm.base.*
import cdm.base.datetime.*
import cdm.base.math.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type AccessConditions: 

	partyElection AccessConditionsElections (2..2) 
	additionalTerminationEvent AdditionalTerminationEvent (0..*) 
		// [synonym ISDA_Create_1_0 value "additional_termination_event"]

type AccessConditionsElections: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_illegality" = "applicable", set to "partyA" when "partyA_illegality" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_illegality" = "applicable", set to "partyB" when "partyB_illegality" = "not_applicable"]
	illegality boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_illegality" = "applicable", set to False when "partyA_illegality" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_illegality" = "applicable", set to False when "partyB_illegality" = "not_applicable"]
	forceMajeure boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_force_majeure" = "applicable", set to False when "partyA_force_majeure" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_force_majeure" = "applicable", set to False when "partyB_force_majeure" = "not_applicable"]
	taxEvent boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_tax_event" = "applicable", set to False when "partyA_tax_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_tax_event" = "applicable", set to False when "partyB_tax_event" = "not_applicable"]
	taxEventUponMerger boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_tax_event_upon_merger" = "applicable", set to False when "partyA_tax_event_upon_merger" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_tax_event_upon_merger" = "applicable", set to False when "partyB_tax_event_upon_merger" = "not_applicable"]
	creditEventUponMerger boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_credit_event_upon_merger" = "applicable", set to False when "partyA_credit_event_upon_merger" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_credit_event_upon_merger" = "applicable", set to False when "partyB_credit_event_upon_merger" = "not_applicable"]

type AdditionalRegime: 

	regime string (1..1) 
	regimeTerms RegimeTerms (2..2) 
	additionalType AdditionalTypeEnum (0..1) 
	additionalTerms string (0..1) 
	//TODO - Condition required that additionalType should exist for 2016 CSD and be absent for 2018 CSD
	//TODO - Condition required that additionalTerms should only exist when additionalType is Other

type AdditionalRepresentation: 

	partyElection AdditionalRepresentationElection (2..2) 
	customElection string (0..1) 
		[synonym ISDA_Create_1_0 value "specify"]

type AdditionalRepresentationElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_additional_representations" = "applicable", set to "partyA" when "partyA_additional_representations" = "not_applicable" ]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_additional_representations" = "applicable", set to "partyB" when "partyB_additional_representations" = "not_applicable" ]
	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_additional_representations" = "applicable", set to False when "partyA_additional_representations" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_additional_representations" = "applicable", set to False when "partyB_additional_representations" = "not_applicable"]

type AdditionalRepresentations: 

	additionalRepresentation AdditionalRepresentation (0..1) 
		[synonym ISDA_Create_1_0 value "additional_representations"]
	// [documentReference Euroclear CtaInitialMargin 2018 English Law paragraph "13" section "10(a)"]
	additionalInformation boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "regulatory_compliance_and_concentration_limits->additional_information" = "applicable",
									set to False when "regulatory_compliance_and_concentration_limits->additional_information" = "not_applicable"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "11"]

	condition: one-of

type AdditionalRightsEvent: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "applicable" = "true", set to False when "applicable" = "false"]
	qualification string (0..1) 
		[synonym ISDA_Create_1_0 value "specify"]

	condition Qualification: 
		if qualification exists
		then isApplicable = True

type AdditionalTerminationEvent: < "A class to specify an optional termination event, additional to the Termination Events that will be deemed an Access Condition (Initial Margin CSA) or a Specified Condition (Variation Margin CSA)">
	// TODO Never referenced in CDM
	name string (1..1) 
		[synonym ISDA_Create_1_0 value "name" path "additional_termination_event"]
		[synonym ISDA_Create_1_0 value "specify" set when "specify" exists]
	applicableParty string (1..2) 
		[synonym ISDA_Create_1_0 set to "PartyA" when "partyA_additional_termination_events" = "applicable"]
		[synonym ISDA_Create_1_0 set to "PartyB" when "partyB_additional_termination_events" = "applicable"]
		[synonym ISDA_Create_1_0 set to "PartyA" when "additional_termination_event->partyA_additional_termination_event" = "applicable"]
		[synonym ISDA_Create_1_0 set to "PartyB" when "additional_termination_event->partyB_additional_termination_event" = "applicable"]

type AdditionalType: 

	standardValue AdditionalTypeEnum (1..1) 
		[synonym ISDA_Create_1_0 value "additional_type"]
	customValue string (0..1) 
		[synonym ISDA_Create_1_0 value "additional_type_specify"]

	condition CustomValue: 
		if standardValue = AdditionalTypeEnum -> Other
		then customValue exists

	condition StandardValue: 
		if standardValue <> AdditionalTypeEnum -> Other
		then customValue is absent

type Agreement: 

	creditSupportAgreementElections CreditSupportAgreementElections (0..1) 
		[synonym ISDA_Create_1_0 value "partyA" path "answers" set when "document->documentType" = "Credit Support Annex"]
		[synonym ISDA_Create_1_0 value "partyA" path "answers" set when "document->documentType" = "Credit Support Deed"]
	collateralTransferAgreementElections CollateralTransferAgreementElections (0..1) 
		[synonym ISDA_Create_1_0 value "partyA" path "answers" set when "document->documentType" = "Collateral Transfer Agreement"]
	securityAgreementElections SecurityAgreementElections (0..1) 
		[synonym ISDA_Create_1_0 value "partyA" path "answers" set when "document->documentType" = "Security Agreement"]
	transactionConfirmation TransactionConfirmation (0..1)  //TODO: Rename Contract and move to here
	condition: one-of

type AgreementTerms: 

	agreement Agreement (1..1) 
	relatedAgreements RelatedAgreement (0..*) 
	umbrellaAgreement UmbrellaAgreement (0..1) 
		[synonym ISDA_Create_1_0 value "umbrella_agreement_and_principal_identification", "umbrella_agreement_and_principal_identification" path "answers->partyA"]

type AmendmentEffectiveDate: 

	date date (0..1) 
	specificDate AmendmentEffectiveDateEnum (0..1) 
		[synonym ISDA_Create_1_0 value "annex_date"]
		[synonym ISDA_Create_1_0 value "effectiveness_date"]
	customProvision string (0..1)
	condition: one-of

type ApplicableRegime: 

	regime RegulatoryRegimeEnum (1..1) 
		[synonym AcadiaSoft_AM_1_0 value "regime"]
	regimeTerms RegimeTerms (2..2) 
	additionalType AdditionalTypeEnum (0..1) 
	additionalTerms string (0..1) 
	//TODO - Condition required that additionalType should exist for 2016 CSD and be absent for 2018 CSD
	//TODO - Condition required that additionalTerms should only exist when additionalType is Other

type AppropriatedCollateralValuation: 

	isSpecified boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "specified" = "true", set to False when "specified" = "false"]
	election string (0..1) 
		[synonym ISDA_Create_1_0 value "specify"]

	condition Specified: 
		if isSpecified = True
		then election exists

	condition NotSpecified: 
		if isSpecified = False
		then election is absent

type BespokeCalculationDate: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "specified" = "true", set to False when "specified" = "false"]
	calculationDateImTerms string (0..1) 

	condition CalculationDateImTerms: 
	if isApplicable = False then calculationDateImTerms is absent

type BespokeCalculationTime: 

	asCalculationAgentIm boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "calculation_time_IM_is" = "calculation_agent_IM_computation_time", set to False when "calculation_time_IM_is" = "specify"]
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "specify"]
	bespokeCalculationTimeTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "calculation_agent_IM_computation_time_specify"]

	condition AsCalculationAgentIm: 
		if asCalculationAgentIm = True
		then bespokeCalculationTimeTerms is absent

	condition BespokeCalculationTimeTerms: 
		if asCalculationAgentIm = False
		then bespokeCalculationTimeTerms exists

type BespokeTransferTiming: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "specified" = "true", set to False when "specified" = "false"]
	bespokeTransferTimingTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "settlement_day_specify"]

type CalculationAgentIm: 

	isApplicable boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]
	party string (0..1) 
		[metadata reference]
		[synonym ISDA_Create_1_0 set to "PartyA" when "calculation_agent" = "partyA"]
		[synonym ISDA_Create_1_0 set to "PartyB" when "calculation_agent" = "party_A"]
		[synonym ISDA_Create_1_0 set to "PartyB" when "calculation_agent" = "partyB"]
		[synonym ISDA_Create_1_0 set to "PartyB" when "calculation_agent" = "party_B"]
		[synonym ISDA_Create_1_0 set to "PartyA,PartyB" when "calculation_agent_IM_party"="demanding_party_and_secured_party"]
	// TODO - Need for a mapping logic that will parse the ISDA Create prefix to identify partyA vs. partyB entries
	calculationAgentTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "specify"]

	condition CalculationAgentParty: 
		if calculationAgentTerms exists then party is absent

	condition CalculationAgentTerms: 
		if isApplicable = True then calculationAgentTerms exists
		else if isApplicable = False then calculationAgentTerms is absent

type CalculationAndTiming: 

	calculationAgentIm CalculationAgentIm (0..1) 
		[synonym ISDA_Create_1_0 value "calculation_agent_IM"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "4a"]
	bespokeCalculationDate BespokeCalculationDate (0..1) 
		[synonym ISDA_Create_1_0 value "calculation_date"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "(d)(i)"]
	bespokeCalculationTime BespokeCalculationTime (0..1)	
		[synonym ISDA_Create_1_0 value "calculation_time"]
		[synonym ISDA_Create_1_0 value "credit_support_amount_calculation_time"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "4d"]
	calculationDateLocation CalculationDateLocation (0..1) 
		[synonym ISDA_Create_1_0 value "calculation_date_location"]
		[synonym ISDA_Create_1_0 value "calculation_date"]
		[synonym ISDA_Create_1_0 value "designated_city"]		
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "4c"]
	notificationTime NotificationTime (1..1) 
		[synonym ISDA_Create_1_0 value "notification_time"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "4e"]
	collateralValuationAgent CollateralValuationAgent (0..1) 
		[synonym ISDA_Create_1_0 value "collateral_valuation_agent"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "4b"]
	cashSettlementDay string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "cash_settlement_day" set when "cash_settlement_day->specified" = "true"]
	securitiesSettlementDay string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "securities_settlement_day" set when "securities_settlement_day->specified" = "true"]

type CalculationCurrencyElection: 

	party string (1..1)  
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_use_base_currency" = "true", set to "partyA" when "partyA_use_base_currency" = "false"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_use_base_currency" = "true", set to "partyB" when "partyB_use_base_currency" = "false"]
	isBaseCurrency boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_use_base_currency" = "true", set to False when "partyA_use_base_currency" = "false"]
		[synonym ISDA_Create_1_0 set to True when "partyB_use_base_currency" = "true", set to False when "partyB_use_base_currency" = "false"]
	currency string (0..1) 
		[metadata scheme]
		[synonym AcadiaSoft_AM_1_0 value "currency"]
		[synonym ISDA_Create_1_0 value "partyA_use_other_currency"]
		[synonym ISDA_Create_1_0 value "partyB_use_other_currency"]

	condition BaseCurrency: 
		if isBaseCurrency = True
		then currency is absent
		else currency exists

type CalculationDateLocation: 

	partyElection CalculationDateLocationElection (2..2) 


type CalculationDateLocationElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_calculation_date_location" = "select_location", set to "partyA" when "partyA_calculation_date_location" = "other"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_calculation_date_location" = "select_location", set to "partyB" when "partyB_calculation_date_location" = "other"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_designated_city" = "select_location", set to "partyA" when "partyA_designated_city" = "other"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_designated_city" = "select_location", set to "partyB" when "partyB_designated_city" = "other"]
	businessCenter BusinessCenterEnum (0..1) 
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "partyA_location"]
		[synonym ISDA_Create_1_0 value "partyB_location"]
	customLocation string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify"]
		[synonym ISDA_Create_1_0 value "partyB_specify"]
	
	condition Choice : 
		required choice businessCenter, customLocation

type CollateralAccessBreach: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "collateral_access_breach" = "applicable", set to False when "collateral_access_breach" = "not_applicable"]
	cabEndDateElection boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "cab_end_date" = "days", set to False when "cab_end_date" = "other"]
	cabEndDate number (0..1) 
		[synonym ISDA_Create_1_0 value "cab_end_date_days"]
	cabEndDateTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "cab_end_date_specify"]

	condition CabEndDateTerms: 
		if cabEndDateElection = True then cabEndDateTerms is absent

	// condition CabEndDate: 
	// 	if isApplicable = False then cabEndDateElection and cabEndDate and cabEndDateTerms is absent

//TODO - Condition required cabEndDate OR cabEndDateTerms required if CollateralAccessBreach is applicable

type CollateralManagementAgreement: 

	partyElection CollateralManagementAgreementElection (2..2) 

type CollateralManagementAgreementElection: 

	party Party (1..1) 
		[metadata reference]
	// TODO - Need for a mapping logic that will parse the ISDA Create prefix to identify partyA vs. partyB entries
	collateralManagementAgreement string (1..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify", "partyB_specify"]

type CollateralRounding: 

	deliveryAmount number (1..1) 
		[synonym ISDA_Create_1_0 value "delivery_amount"]
	returnAmount number (1..1) 
		[synonym ISDA_Create_1_0 value "return_amount"]

type CollateralTransferAgreementElections: 

	regime Regime (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "Regimes"]
	oneWayProvisions OneWayProvisions (1..1) 
		[synonym ISDA_Create_1_0 value "one_way_provisions"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (a)"]
	generalSimmElections GeneralSimmElections (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (e)"]
	identifiedCrossCurrencySwap boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "cross_currency_swap->yey_ney" = "true", set to False when "cross_currency_swap->yey_ney" = "false"]
	// [documentReference Euroclear CtaInitialMargin 2018 paragraph "13" section "(g)"]	
	sensitivityMethodologies SensitivityMethodologies (1..1) 
	fxHaircutCurrency FxHaircutCurrency (0..1) 
		[synonym ISDA_Create_1_0 value "fx_haircut_percentage"]
	// [documentReference Euroclear CtaInitialMargin 2018 English Law paragraph "13" section "(h)"]		
	postingObligations PostingObligations (1..1) 
		[synonym ISDA_Create_1_0 value "security_provider_posting_obligations"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "General Principles (ii)"]
	substitutedRegime SubstitutedRegime (1..1) 
		[synonym ISDA_Create_1_0 value "substituted_regimes"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (k)"]
	baseCurrency string (1..1) 
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "currency" path "base_currency"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "1"]
	creditSupportObligations CreditSupportObligationsInitialMargin (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "3"]
	calculationAndTiming CalculationAndTiming (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "4"]
	conditionsPrecedent ConditionsPrecedent (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "5"]
	substitution Substitution (1..1) 
		[synonym ISDA_Create_1_0 value "consent"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "f"]
	disputeResolution DisputeResolution (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "6"]
	rightsEvents RightsEvents (1..1) 
	custodyArrangements CustodyArrangements (1..1) 
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "m"]
	additionalRepresentations AdditionalRepresentations (1..1) 
	demandsAndNotices ContactElection (0..1) 
		[synonym ISDA_Create_1_0 value "demands_and_notices"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "12"]
	addressesForTransfer ContactElection (0..1) 
		[synonym ISDA_Create_1_0 value "addresses_for_transfers"]
	// [documentReference Euroclear CtaInitialMargin 2018 English Law paragraph "13" section "12"]		
	otherCsa string (0..1) 
		[synonym ISDA_Create_1_0 value "other_csa->specify" set when "other_csa->specified" = "true"]
	// [documentReference Euroclear CtaInitialMargin 2018 English Law paragraph "13" section "13"]		
	terminationCurrencyAmendment TerminationCurrencyAmendment (1..1) 
		[synonym ISDA_Create_1_0 value "amendment_to_termination_currency"]
		[synonym ISDA_Create_1_0 value "security_provider_posting_obligations"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "13"]
	minimumTransferAmountAmendment MinimumTransferAmountAmendment (1..1) 	
		[synonym ISDA_Create_1_0 value "amendment_to_minimum_transfer_amount" mapper "MinimumTransferAmountAmendment"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "14"]
	interpretationTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "paragraph_1_6a_specify" path "interpretation" set when "interpretation->paragraph_1_6a_is" = "specify"]
		[synonym ISDA_Create_1_0 value "paragraph_10ki_specify" path "interpretation" set when "interpretation->paragraph_10ki_is" = "specify"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "15"]
	processAgent ProcessAgent (0..1) 
		[synonym ISDA_Create_1_0 value "process_agent"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "16"]
	jurisdictionRelatedTerms JurisdictionRelatedTerms (0..1) 
	additionalAmendments string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "amendments" maps 2 set when "amendments->is_applicable" = "applicable"] // TODO: remove "maps 2" once migration complete
	additionalBespokeTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "additional_terms" set when "additional_terms->is_applicable" = "applicable"]
		[synonym ISDA_Create_1_0 value "specify" path "bespoke_provisions" set when "bespoke_provisions->is_applicable" = "applicable"]

type CollateralValuationAgent: 

	partyElection CollateralValuationAgentElection (0..2) 

type CollateralValuationAgentElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_collateral_valuation_agent" = "other"] //Check synonyms
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_collateral_valuation_agent" = "other"] //Check synonyms
	additionalLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify"] //Check synonyms
		[synonym ISDA_Create_1_0 value "partyB_specify"] //Check synonyms

type ConditionsPrecedent: 

	conditionsPrecedentElection boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "conditions_precedent->conditions_precedent" = "not specified", set to False when "conditions_precedent->conditions_precedent" = "paragraph_3_1_will_not_apply"]
		[synonym ISDA_Create_1_0 set to True when "conditions_precedent->specified" = "false", set to False when "conditions_precedent->specified" = "true"]
	customProvision string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "conditions_precedent"]
	accessConditions AccessConditions (1..1) 
		[synonym ISDA_Create_1_0 value "access_conditions"] //"conditions_precedent"
		[synonym ISDA_Create_1_0 value "access_conditions" path "conditions_precedent"]

	condition CustomProvision: 
		if customProvision exists
		then conditionsPrecedentElection = False

type ContactElection: 

	partyElection PartyContactInformation (2..2 ) 

type ControlAgreement: 

	partyElection ControlAgreementElections (2..2) 

type ControlAgreementElections: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "control_agreement_as_a_credit_support_document->partyA_control_agreement_as_a_credit_support_document" = "yes",
									set to "partyA" when "control_agreement_as_a_credit_support_document->partyA_control_agreement_as_a_credit_support_document" = "no"]
		[synonym ISDA_Create_1_0 set to "partyB" when "control_agreement_as_a_credit_support_document->partyB_control_agreement_as_a_credit_support_document" = "yes",
									set to "partyB" when "control_agreement_as_a_credit_support_document->partyB_control_agreement_as_a_credit_support_document" = "no"]
		[synonym ISDA_Create_1_0 set to "partyA" when "euroclear_agreements_as_credit_support_documents->partyA_euroclear_agreements_as_credit_support_documents" = "yes",
									set to "partyA" when "euroclear_agreements_as_credit_support_documents->partyA_euroclear_agreements_as_credit_support_documents" = "no"]
		[synonym ISDA_Create_1_0 set to "partyB" when "euroclear_agreements_as_credit_support_documents->partyB_euroclear_agreements_as_credit_support_documents" = "yes",
									set to "partyB" when "euroclear_agreements_as_credit_support_documents->partyB_euroclear_agreements_as_credit_support_documents" = "no"]
		[synonym ISDA_Create_1_0 set to "partyA" when "clearstream_agreements_as_credit_support_documents->partyA_clearstream_agreements_as_credit_support_documents" = "yes",
									set to "partyA" when "clearstream_agreements_as_credit_support_documents->partyA_clearstream_agreements_as_credit_support_documents" = "no"]
		[synonym ISDA_Create_1_0 set to "partyB" when "clearstream_agreements_as_credit_support_documents->partyB_clearstream_agreements_as_credit_support_documents" = "yes",
									set to "partyB" when "clearstream_agreements_as_credit_support_documents->partyB_clearstream_agreements_as_credit_support_documents" = "no"]
	controlAgreementAsCsd boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "control_agreement_as_a_credit_support_document->partyA_control_agreement_as_a_credit_support_document" = "yes",
									set to False when "control_agreement_as_a_credit_support_document->partyA_control_agreement_as_a_credit_support_document" = "no"]
		[synonym ISDA_Create_1_0 set to True when "control_agreement_as_a_credit_support_document->partyB_control_agreement_as_a_credit_support_document" = "yes",
									set to False when "control_agreement_as_a_credit_support_document->partyB_control_agreement_as_a_credit_support_document" = "no"]
		[synonym ISDA_Create_1_0 set to True when "euroclear_agreements_as_credit_support_documents->partyA_euroclear_agreements_as_credit_support_documents" = "yes",
									set to False when "euroclear_agreements_as_credit_support_documents->partyA_euroclear_agreements_as_credit_support_documents" = "no"]
		[synonym ISDA_Create_1_0 set to True when "euroclear_agreements_as_credit_support_documents->partyB_euroclear_agreements_as_credit_support_documents" = "yes",
									set to False when "euroclear_agreements_as_credit_support_documents->partyB_euroclear_agreements_as_credit_support_documents" = "no"]
		[synonym ISDA_Create_1_0 set to True when "clearstream_agreements_as_credit_support_documents->partyA_clearstream_agreements_as_credit_support_documents" = "yes",
									set to False when "clearstream_agreements_as_credit_support_documents->partyA_clearstream_agreements_as_credit_support_documents" = "no"]
		[synonym ISDA_Create_1_0 set to True when "clearstream_agreements_as_credit_support_documents->partyB_clearstream_agreements_as_credit_support_documents" = "yes",
									set to False when "clearstream_agreements_as_credit_support_documents->partyB_clearstream_agreements_as_credit_support_documents" = "no"]
	// TODO - add Condition - include when 2018 CSD English Law, exclude when 2016 (captured under CustodyArrangements)
	consistencyWithControlAgreement boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "inconsistency_with_the_control_agreement->partyA_inconsistency_with_the_control_agreement" = "applicable",
									set to False when "inconsistency_with_the_control_agreement->partyA_inconsistency_with_the_control_agreement" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "inconsistency_with_the_control_agreement->partyB_inconsistency_with_the_control_agreement" = "applicable",
									set to False when "inconsistency_with_the_control_agreement->partyB_inconsistency_with_the_control_agreement" = "not_applicable"]
	// TODO - add Condition - only include when 2018 CSD English Law
	relationshipWithControlAgreement boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "relationship_with_the_control_agreement->partyA_control_agreement_relationship" = "applicable",
									set to False when "relationship_with_the_control_agreement->partyA_control_agreement_relationship" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "relationship_with_the_control_agreement->partyB_control_agreement_relationship" = "applicable",
									set to False when "relationship_with_the_control_agreement->partyB_control_agreement_relationship" = "not_applicable"]
	// TODO - add Condition - only include when 2018 CSD English Law

type ControlAgreementNecEvent: 

	controlAgreementNecEventElection ControlAgreementNecEventElection (2..2)

type ControlAgreementNecEventElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_control_agreement_nec_event" = "applicable", set to "partyA" when "partyA_control_agreement_nec_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyB_control_agreement_nec_event" = "applicable", set to "partyB" when "partyB_control_agreement_nec_event" = "not_applicable"]

	necEvent boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_control_agreement_nec_event" = "applicable", set to False when "partyA_control_agreement_nec_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_control_agreement_nec_event" = "applicable", set to False when "partyB_control_agreement_nec_event" = "not_applicable"]

type CreditNotation: 
	[synonym FpML_5_10 value "CreditNotation"]

	agency CreditRatingAgencyEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "agency" meta "creditRatingAgencyScheme"]
	notation string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "notation" meta "creditRatingNotationScheme"]
	scale string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "scale" meta "creditRatingScaleScheme"]
	debt CreditRatingDebt (0..1) 
		[synonym FpML_5_10 value "debt"]


type CreditNotations: 
	[synonym FpML_5_10 value "CreditNotations"]

	creditNotation CreditNotation (0..1) 
		[synonym FpML_5_10 value "creditNotation"]
	creditNotations MultipleCreditNotations (0..1) 
	condition: one-of

type CreditRatingDebt: 
	[synonym FpML_5_10 value "CreditRatingDebt"]

	debtType string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "debtType" meta "debtTypeScheme"]
	debtTypes MultipleDebtTypes (0..1) 
	condition: one-of

type CreditSupportAgreementElections: 

	regime Regime (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "Regimes"]
	oneWayProvisions OneWayProvisions (1..1) 
		[synonym ISDA_Create_1_0 value "one_way_provisions"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (a)"]
	generalSimmElections GeneralSimmElections (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (e)"]
	identifiedCrossCurrencySwap boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "cross_currency_swap->yey_ney" = "true", set to False when "cross_currency_swap->yey_ney" = "false"]
	// [documentReference Euroclear CtaInitialMargin 2018 paragraph "13" section "(g)"]	
	sensitivityMethodologies SensitivityMethodologies (1..1) 
	fxHaircutCurrency FxHaircutCurrency (0..1) 
		[synonym ISDA_Create_1_0 value "fx_haircut_percentage"]
	// [documentReference Euroclear CtaInitialMargin 2018 English Law paragraph "13" section "(h)"]		
	postingObligations PostingObligations (1..1) 
		[synonym ISDA_Create_1_0 value "chargor_posting_obligations"]
		[synonym ISDA_Create_1_0 value "pledgor_posting_obligations"]
		[synonym ISDA_Create_1_0 value "obligor_posting_obligations"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "General Principles (ii)"]
	substitutedRegime SubstitutedRegime (1..1) 
		[synonym ISDA_Create_1_0 value "substituted_regimes"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (k)"]
	baseCurrency string (1..1) 
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "currency" path "base_currency"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "1"]
	additionalObligations string (0..1) 
		[synonym ISDA_Create_1_0 value "additional_obligations_specify" path "additional_obligations" set when "additional_obligations->additional_obligations" = "specify"]
	creditSupportObligations CreditSupportObligationsInitialMargin (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "3"]
	calculationAndTiming CalculationAndTiming (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "4"]
	conditionsPrecedent ConditionsPrecedent (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "5"]
	substitution Substitution (1..1) 
		[synonym ISDA_Create_1_0 value "consent"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "f"]
	disputeResolution DisputeResolution (1..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "6"]
	rightsEvents RightsEvents (1..1) 
	custodyArrangements CustodyArrangements (1..1) 
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "m"]
	additionalRepresentations AdditionalRepresentations (1..1) 
	otherEligibleAndPostedSupport OtherEligibleAndPostedSupport (1..1) 
	demandsAndNotices ContactElection (0..1) 
		[synonym ISDA_Create_1_0 value "demands_and_notices"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "12"]
	addressesForTransfer ContactElection (0..1) 
		[synonym ISDA_Create_1_0 value "addresses_for_transfers"]
	// [documentReference Euroclear CtaInitialMargin 2018 English Law paragraph "13" section "12"]		
	otherCsa OtherAgreements (0..1) 
		[synonym ISDA_Create_1_0 value "other_csa"]
	// [documentReference Euroclear CtaInitialMargin 2018 English Law paragraph "13" section "13"]		
	japaneseLawCsa OtherAgreements (0..1) 
		[synonym ISDA_Create_1_0 value "japanese_law_csa_vm"]
	terminationCurrencyAmendment TerminationCurrencyAmendment (1..1) 
		[synonym ISDA_Create_1_0 value "amendment_to_termination_currency"]
		[synonym ISDA_Create_1_0 value "pledgor_posting_obligations"]
		[synonym ISDA_Create_1_0 value "chargor_posting_obligations"]
		[synonym ISDA_Create_1_0 value "obligor_posting_obligations"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "13"]
	minimumTransferAmountAmendment MinimumTransferAmountAmendment (1..1) 	
		[synonym ISDA_Create_1_0 value "amendment_to_minimum_transfer_amount" mapper "MinimumTransferAmountAmendment"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "14"]
	interpretationTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "paragraph_10ki_specify" path "interpretation" set when "interpretation->paragraph_10ki_is" = "specify"]
		[synonym ISDA_Create_1_0 value "paragraph_11g_specify" path "interpretation" set when "interpretation->paragraph_11g_is" = "specify"]
		[synonym ISDA_Create_1_0 value "paragraph_11j_specify" path "interpretation" set when "interpretation->paragraph_11j_is" = "specify"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "15"]
	processAgent ProcessAgent (0..1) 
		[synonym ISDA_Create_1_0 value "process_agent"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "16"]
	appropriatedCollateralValuation AppropriatedCollateralValuation (0..1) 
		[synonym ISDA_Create_1_0 value "valuation_of_appropriated_collateral"]
	// [documentReference ISDA CsdInitialMargin 2016 paragraph "13" section "v"]
	jurisdictionRelatedTerms JurisdictionRelatedTerms (0..1) 
	additionalAmendments string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "amendments" maps 2 set when "amendments->is_applicable" = "applicable"] // TODO: remove "maps 2" once migration complete
	additionalBespokeTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "additional_terms" set when "additional_terms->is_applicable" = "applicable"]
		[synonym ISDA_Create_1_0 value "specify" path "bespoke_provisions" set when "bespoke_provisions->is_applicable" = "applicable"]
	trustSchemeAddendum boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "trust_scheme_addendum->is_applicable" = "applicable", set to False when "trust_scheme_addendum->is_applicable" = "not_applicable"]

type CreditSupportObligationsInitialMargin: 

	marginApproach MarginApproach (0..1) 
		[synonym ISDA_Create_1_0 value "selection_of_margin_approach"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "3(a)"]
	threshold Threshold (1..1) 
		[synonym ISDA_Create_1_0 value "threshold" mapper "Threshold"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "3(b)(ii)"]
	minimumTransferAmount MinimumTransferAmount (1..1) 
		[synonym ISDA_Create_1_0 value "minimum_transfer_amount" mapper "MinimumTransferAmount"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "3(b)(i)"]
	rounding CollateralRounding (0..1) 
		[synonym ISDA_Create_1_0 value "rounding"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "(c)(v)(C)"]
	bespokeTransferTiming BespokeTransferTiming (0..1) 
		[synonym ISDA_Create_1_0 value "transfer_timing"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "(c)(vi)"]

type CreditSupportObligationsVariationMargin: 

	eligibleCollateral EligibleCollateralVariationMargin (1..1) 
	ineligibleCreditSupport IneligibleCreditSupport (1..1) 
	majorCurrency string (1..*) 
		[metadata scheme]
	// In relation to the above, are the parties expected to always specify the major currencies, or should we have default values specified in the template, deemed to apply if no election by the parties? The current model assumes the former.
	fxHaircut number (1..1) 
	// Same question as above: does the template specifies 8% as a default value?
	minimumTransferAmount MinimumTransferAmount (1..1) 
	rounding CollateralRounding (1..1) 

//TODO - Deprecate: Still used by Variation Margin doc which hasn't been refactored.
type Csa: 

	documentationIdentification DocumentationIdentification (0..1) 

//TODO - Deprecate: Still used by Variation Margin doc which hasn't been refactored.
type Csa2016 extends Csa: 

	baseCurrency string (1..1) 
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "currency" path "base_currency"]
	additionalObligations string (0..1) 
		[synonym ISDA_Create_1_0 value "additional_obligations_specify" path "additional_obligations" set when "additional_obligations->additional_obligations" = "specify"]
	conditionsPrecedent ConditionsPrecedent (1..1) 
	substitution Substitution (1..1) 
		[synonym ISDA_Create_1_0 value "consent"]
	disputeResolution DisputeResolution (1..1) 
		[synonym ISDA_Create_1_0 value "resolution_time"]
	additionalRepresentation AdditionalRepresentation (1..1) 
		[synonym ISDA_Create_1_0 value "additional_representations"]
	demandsAndNotices ContactElection (1..1) 
		[synonym ISDA_Create_1_0 value "demands_and_notices"]
	addressesForTransfer ContactElection (1..1) 
		[synonym ISDA_Create_1_0 value "addresses_for_transfers"]
	bespokeProvision string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "bespoke_provisions" set when "bespoke_provisions->is_applicable" = "applicable"]
	umbrellaAgreement UmbrellaAgreement (0..1) 
		[synonym ISDA_Create_1_0 value "umbrella_agreement_and_principal_identification", "principal_identification_schedule" path "umbrella_agreement_and_principal_identification"]

//TODO - Deprecate: Still used by Variation Margin doc which hasn't been refactored.
type CsaVariationMargin2016 extends Csa2016: 

	creditSupportObligations CreditSupportObligationsVariationMargin (1..1) 
	valuationAgent Party (1..1) 
		[metadata reference]
	valuationDateLocation CalculationDateLocation (1..1) 
	valuationTime BusinessCenterTime (1..*) 
	// In relation to the above, need to confirm that several valuation times can be specified, as suggested by the sample document which has been used, although this sounds peculiar if not expressed as one valuation time election per party
	notificationTime int (1..1) 
	// TODO - Look to express this elapse time as an interval time, to be projected as a a java Interval type https://trello.com/c/hclQUeS0
	holdingAndUsingPostedCollateral HoldingAndUsingPostedCollateral (1..1) 
	creditSupportOffsets boolean (1..1) 
	otherCsa OtherAgreements (1..1) 

//TODO - Deprecate: Still used by Variation Margin doc which hasn't been refactored.
type CsaVariationMargin2016NewYorkLaw extends CsaVariationMargin2016: 

	otherEligibleSupport string (0..1) 
	transferTiming string (1..1) 
	otherEligibleAndPostedSupport OtherEligibleAndPostedSupport (1..1) 

//TODO - Deprecate: Still used by Equity Master Confirmation doc which hasn't been refactored.
type EquitySwapMasterConfirmation2018 extends EquityMasterConfirmation: 

	typeOfSwapElection ReturnTypeEnum (1..1) 
	pricingMethodElection PriceReturnTerms (1..1) 
	// TODO: the initialPrice attribute should be optional in PriceReturnTerms, only the valuationPriceInterim and valuationPriceFinal methods should be specified at the Swap level
	linearInterpolationElection InterpolationMethodEnum (1..1) 
	settlementTerms SettlementTerms (1..1) 
	equityCalculationPeriod CalculationPeriodDates (1..1) 
	equityCashSettlementDates PaymentDates (1..1) 

// TODOs: Averaging Election, Dividend Payment Date Election, Break Funding Election
//TODO - Deprecate: Still used by Equity Master Confirmation doc which hasn't been refactored.
type EquityMasterConfirmation extends MasterConfirmationBase: 

//TODO - Deprecate: Still used by Equity Master Confirmation doc which hasn't been refactored.
type MasterConfirmationBase: 

type Custodian: 

	partyElection CustodianElection (2..2) 

type CustodianElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_custodian_name" exists, set to "partyB" when "partyB_custodian_name" exists]
	custodian LegalEntity (0..1) 
		[synonym ISDA_Create_1_0 value "custodian_name"]
		[synonym ISDA_Create_1_0 value "collateral_manager"]
		[synonym ISDA_Create_1_0 value "custodian_and_segregated_account_details"]
	segregatedCashAccount Account (0..1) 
		[synonym ISDA_Create_1_0 value "custodian_and_segregated_account_details"]
	// TODO - Need for a mapping logic that will parse the ISDA Create suffix to identify cash vs. security with custodian_and_segregated_account_details as a path
	segregatedSecurityAccount Account (0..1) 
		[synonym ISDA_Create_1_0 value "custodian_and_segregated_account_details"]
	// TODO - Need for a mapping logic that will parse the ISDA Create suffix to identify cash vs. security with custodian_and_segregated_account_details as a path


type CustodianEvent: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "custodian_event->definition" = "applicable", set to False when "custodian_event->definition" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "euroclear_event->definition" = "applicable", set to False when "euroclear_event->definition" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "clearstream_event->definition" = "applicable", set to False when "clearstream_event->definition" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "collateral_manager_event->definition" = "applicable", set to False when "collateral_manager_event->definition" = "not_applicable"]
	endDate CustodianEventEndDate (0..1) 
		[synonym ISDA_Create_1_0 value "ce_end_date"]
		[synonym ISDA_Create_1_0 value "ee_end_date"]
		[synonym ISDA_Create_1_0 value "cme_end_date"]

type CustodianEventEndDate: 

	daysAfterCustodianEvent CustomisableOffset (1..1) 
	// TODO - Need for a mapping logic that will map the elements in ce_end_date which prefix is `after`
		[synonym ISDA_Create_1_0 value "days_after_custodian_event"]
	releaseDate CustomisableOffset (1..1) 
	// TODO - Need for a mapping logic that will map the elements in ce_end_date which prefix is `release`
		[synonym ISDA_Create_1_0 value "release_days"]
	dateOfTimelyStatement CustomisableOffset (1..1) 
		[synonym ISDA_Create_1_0 value "days_after_timely_statement"]

// TODO - Need for a mapping logic that will map the elements in ce_end_date which prefix is `timely` or `date_of_timely`
type CustodianRisk: 

	partyElection CustodianRiskElection (1..2) 

type CustodianRiskElection: 

	party string (0..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_custodian_risk" = "other", set to "partyA" when  "partyA_custodian_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_custodian_risk" = "other", set to "partyB" when  "partyB_custodian_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_collateral_manager_risk" = "other", set to "partyA" when  "partyA_collateral_manager_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_collateral_manager_risk" = "other", set to "partyB" when  "partyB_collateral_manager_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_clearstream_risk" = "other", set to "partyA" when  "partyA_clearstream_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_clearstream_risk" = "other", set to "partyB" when  "partyB_clearstream_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_euroclear_risk" = "other", set to "partyA" when  "partyA_euroclear_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_euroclear_risk" = "other", set to "partyB" when  "partyB_euroclear_risk" = "not_specified"]
	isSpecified boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_custodian_risk" = "other", set to False when "partyA_custodian_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "partyB_custodian_risk" = "other", set to False when "partyB_custodian_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "partyA_collateral_manager_risk" = "other", set to False when "partyA_collateral_manager_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "partyB_collateral_manager_risk" = "other", set to False when "partyB_collateral_manager_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "partyA_clearstream_risk" = "other", set to False when "partyA_clearstream_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "partyB_clearstream_risk" = "other", set to False when "partyB_clearstream_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "partyA_euroclear_risk" = "other", set to False when "partyA_euroclear_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "partyB_euroclear_risk" = "other", set to False when "partyB_euroclear_risk" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "paragraph_6b" = "specified", set to False when "paragraph_6b" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "paragraph_6a" = "specified", set to False when "paragraph_6a" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "paragraph_5_2" = "specify", set to False when "paragraph_5_2" = "not_specified"]
	qualification string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify"]
		[synonym ISDA_Create_1_0 value "partyB_specify"]
		[synonym ISDA_Create_1_0 value "paragraph_6b_specify" set when "paragraph_6b" = "specify"]
		[synonym ISDA_Create_1_0 value "paragraph_6a_specify" set when "paragraph_6a" = "specify"]
		[synonym ISDA_Create_1_0 value "paragraph_5_2_specify" set when "paragraph_5_2" = "specify"]


	condition Specified: 
		if isSpecified = False
		then qualification is absent

type CustodianTerms: 
	[synonym FpML_5_10 value "CustodianTerms"]

	/*
	 * This class leverages the FpML representation for the ISDA Standard CSA for the purpose of normalizing the election
	 * in the ISDA CSA 2016 for Variation Margin, Paragraph 13, (h)(i)(2).
	 */
	minimumAssets Money (0..1) 
		[synonym FpML_5_10 value "minimumAssets"]
	minimumRating CreditNotations (0..1) 
		[synonym FpML_5_10 value "minimumRating"]
	initialDesignation LegalEntity (0..1) 

type CustodyArrangements: 
// 
	isCreditSupportDocument boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "control_agreement_as_a_credit_support_document->definition" = "creditSupportDocument",
								set to False when "control_agreement_as_a_credit_support_document->definition" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "collateral_management_agreement_as_a_credit_support_document->definition" = "creditSupportDocument",
		    					set to False when "collateral_management_agreement_as_a_credit_support_document->definition" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "euroclear_agreements_as_credit_support_documents->definition" = "creditSupportDocument",
		    					set to False when "euroclear_agreements_as_credit_support_documents->definition" = "not_specified"]
		[synonym ISDA_Create_1_0 set to True when "clearstream_agreements_as_credit_support_documents->definition" = "creditSupportDocument",
		    					set to False when "clearstream_agreements_as_credit_support_documents->definition" = "not_specified"]
	hasControlAgreementLanguage boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "relationship_with_the_control_agreement->include_language" = "include", set to False when "relationship_with_the_control_agreement->include_language" = "exclude"]
		[synonym ISDA_Create_1_0 set to True when "relationship_with_the_collateral_management_agreement->include_language" = "include",
								 set to False when "relationship_with_the_collateral_management_agreement->include_language" = "exclude"]
	// TODO - add Condition for hasControlAgreement - include when 2016, exclude when 2018 (captured under CustodyArrangementsElection)
	otherProvisions string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "other_provisions" set when "other_provisions->specify_provisions" = "specify"]
	// TODO - add Condition for otherProvisions - include when 2016, exclude when 2018 (captured under CustodyArrangementsElection)
	collateralAccessBreach CollateralAccessBreach (0..1) 
		[synonym ISDA_Create_1_0 value "collateral_access_breach_additional_termination_event"]
		[synonym ISDA_Create_1_0 value "collateral_access_breach"]
	custodianRisk CustodianRisk (0..1) 
		[synonym ISDA_Create_1_0 value "custodian_risk"]
		[synonym ISDA_Create_1_0 value "collateral_manager_risk"]
		[synonym ISDA_Create_1_0 value "euroclear_risk"]
		[synonym ISDA_Create_1_0 value "clearstream_risk"]
	controlAgreement ControlAgreement (0..1) 
	custodianEvent CustodianEvent (1..1) 
	custodian Custodian (0..1) 
	collateralManagementAgreeement CollateralManagementAgreement (0..1) 
		[synonym ISDA_Create_1_0 value "collateral_management_agreement"]
	distributionAndInterestPayment DistributionAndInterestPayment (0..1) 

type CustomisableOffset: 

	offset Offset (0..1)
	customProvision string (0..1)

type DeliveryAmount: 

	standardElection DeliveryAmountElectionEnum (0..1) 
		[synonym ISDA_Create_1_0 value "delivery_amount"]
	customElection string (0..1) 
		[synonym ISDA_Create_1_0 value "specify_delivery_amount"]
	condition: one-of

type DisputeResolution: 

	resolutionTime BusinessCenterTime (0..1) 
		[synonym ISDA_Create_1_0 value "resolution_time" set when "resolution_time->specified" = "true"]
	otherTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "resolution_time" set when "resolution_time->specified" = "false"]
	// condition: one-of //TODO replace condition when resolutionTime exists otherTerms is absent
	recalculationOfValue RecalculationOfValue (0..1) 
		[synonym ISDA_Create_1_0 value "recalculation_of_value"]
		[synonym ISDA_Create_1_0 value "recalculation_of_market_value"]

type DistributionAndInterestPayment: 

	interestRate EligibleCurrencyInterestRate (1..*) 
		[synonym ISDA_Create_1_0 value "eligible_currencies" path "interest_rate"]
	interestPaymentTransfer boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "interest_transfer->interest_transfer" = "applicable", set to False when "interest_transfer->interest_transfer" = "not_applicable"]
	interestPaymentNetting boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "interest_payment_netting->interest_payment_netting" = "applicable", set to False when "interest_payment_netting->interest_payment_netting" = "not_applicable"]
	interestAmount InterestAmount (1..1) 
		[synonym ISDA_Create_1_0 value "return_amount_delivery_amount"]
	interestAdjustment InterestAdjustment (1..1) 
		[synonym ISDA_Create_1_0 value "interest_adjustment"]
	negativeInterest boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "negative_interest->negative_interest" = "applicable", set to False when "negative_interes->negative_interest" = "not_applicable"]
	dailyInterestCompounding boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "daily_interest_compounding->daily_interest_compounding" = "applicable", set to False when "daily_interest_compounding->daily_interest_compounding" = "not_applicable"]
	alternativeProvision string (0..1 ) 
		[synonym ISDA_Create_1_0 value "specify" path "alternative_to_interest_amounts_and_interest_payment" set when "alternative_to_interest_amounts_and_interest_payment->specify_alternative" = "true"]

// Note: Threshold, MinimumTransferAmount and MinimumTransferAmountAmendment class map to this one
type ElectiveAmountElection: 

	party string (1..1) 
	zeroAmount boolean (1..1) 
	amount Money (0..1) 
	customElection string (0..1) 

	condition NonZeroAmount: 
		if zeroAmount = False then (amount or customElection) exists

type EligibilityToHoldCollateral: 
	[synonym FpML_5_10 value "EligibilityToHoldCollateral"]
	/*
	 * This class leverages work in the context of the FpML representation for the ISDA Standard CSA for the purpose of normalizing this election
	 * Those provisions go beyond what is specified as part of the 2016 CSA, which election has not yet been normalized
	 */
	partyTerms HoldingPostedCollateralEnum (1..*) 
		[synonym FpML_5_10 value "holdingPostedCollateral"]
	custodianTerms CustodianTerms (0..1) 
		[synonym FpML_5_10 value "custodianTerms"]
	eligibleCountry string (0..*) 
		[metadata scheme]
		[synonym FpML_5_10 value "eligibleCountry"]

type EligibleCollateralVariationMarginElection: 

	party Party (1..1) 
		[metadata reference]
	eligibleCollateral EligibleCollateral (1..*) 

type EligibleCollateralVariationMargin: 

	// TODO: change cardinality to (2..2) when Ingestion process is able to support normalising external models (https://trello.com/c/TnJWvKes)
	partyElection EligibleCollateralVariationMarginElection (1..1) 

type EligibleCurrencyInterestRate: 

	currency string (1..1) 
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "eligible_currency"]
	interestRate number (1..1) 
		[synonym ISDA_Create_1_0 value "interest_rate"]
	actual365Currency string (1..1) // TODO - Need to clarify with Linklater what this attribute is
		[synonym ISDA_Create_1_0 value "a365_currency"]

type EnforcementEvent: 

	earlyTerminationDate boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "paid_in_full_language" = "include", set to False when "paid_in_full_language" = "exclude"]
	failureToPay boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "failure_to_pay_early_termination_amount" = "applicable", set to False when "failure_to_pay_early_termination_amount" = "not_applicable"]

type ExecutionLanguage: 
	standardLanguage boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "execution_language" = "standard_language", set to False when "execution_language" = "other_execution_language"]
	numberOfOriginals string (0..1) 
		[synonym ISDA_Create_1_0 value "number_of_originals"]
	otherLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "specify_execution_language"]

	condition numberOfOriginals: 
		if standardLanguage = False
		then numberOfOriginals is absent

	condition otherLanguage: 
		if standardLanguage = False
		then otherLanguage exists

type ExecutionLocation: 
	executionLocation ExecutionLocationEnum (1..1) 
		[synonym ISDA_Create_1_0 value "location_of_execution"]
	otherLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "specify_location_of_execution"]
	dutyPayer string (0..1) 
		[synonym ISDA_Create_1_0 set to "PartyA" when "documentary_duty_payer" = "party_A",
									set to "PartyB" when "documentary_duty_payer" = "party_B",
									set to "Specify" when "documentary_duty_payer" = "other"]
	dutyPayerLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "specify_documentary_duty_payer"] // path "documentary_duty_payer"]
	dutyPaymentDate date (0..1) 
		[synonym ISDA_Create_1_0 value "select_documentary_duty_date"] // set when "documentary_duty_date" = "select"
	dutyPaymentLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "specify_documentary_duty_date_datepicker" set when "documentary_duty_date" = "other"]

// TODO Data Rule required to enforce that Duty Payer should be absent if LocationEnum is ExecutedOutsideBelgium or Other (OR included if Enum is ExecutedInBelgium)
	// condition dutyPayer: 
	// 	if executionLocation = ExecutionLocationEnum->ExecutedOutsideBelgium
	// 	then dutyPayer and dutyPayerLanguage and dutyPaymentDate and dutyPaymentLanguage is absent

	condition dutyPayerLanguage: 
		if dutyPayer = "Specify"
		then dutyPayerLanguage exists

	condition dutyPaymentLanguage: 
		if dutyPaymentDate exists then dutyPaymentLanguage is absent

	condition otherLanguage: 
		if executionLocation = ExecutionLocationEnum->OtherLocation
		then otherLanguage exists

type ExecutionTerms: 
	executionLanguage ExecutionLanguage (1..1) 
	executionLocation ExecutionLocation (1..1) 

type FrenchLawAddendum: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]		
	partyElection FrenchLawAddendumElection (2..2) 

	condition Applicable: 
		if isApplicable = True
		then partyElection exists

type FrenchLawAddendumElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_french_law_addendum" = "specify", set to "partyA" when "partyA_french_law_addendum" = "not_applicable",
								 set to "partyB" when "partyB_french_law_addendum" = "specify", set to "partyB" when "partyB_french_law_addendum" = "not_applicable"]
	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_french_law_addendum" = "specify", set to False when "partyA_french_law_addendum" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_french_law_addendum" = "specify", set to False when "partyB_french_law_addendum" = "not_applicable"]
	addendumLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify"]
		[synonym ISDA_Create_1_0 value "partyB_specify"]

	condition AddendumLanguage: 
		if isApplicable = True then addendumLanguage exists
		else if isApplicable = False then addendumLanguage is absent

type FxHaircutCurrency: 

	isTerminationCurrency boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "is_termination_currency" = "terminationCurrency", set to False when "is_termination_currency" = "fxCurrency"]
	fxDesignatedCurrency string (0..1) 
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "fx_designated_currency"]

	condition TerminationCurrency: 
		if isTerminationCurrency = True
		then fxDesignatedCurrency is absent

	condition FxDesignatedCurrency: 
		if isTerminationCurrency = False
		then fxDesignatedCurrency exists

type GeneralSimmElections: 

	simmVersion SimmVersion (0..1) 
		// ISDA Create for the 2016 IM NY Law only has the election for the SIMM calculation currency
		[synonym ISDA_Create_1_0 value "version_of_ISDA_SIMM"]
	simmCalculationCurrency SimmCalculationCurrency (1..1) 
		[synonym ISDA_Create_1_0 value "simm_calculation_currency"]

type HoldingAndUsingPostedCollateral: 

	// TODO: change cardinality to (2..2) when Ingestion process is able to support normalising external models (https://trello.com/c/TnJWvKes)
	partyElection HoldingAndUsingPostedCollateralElection (1..1) 

type HoldingAndUsingPostedCollateralElection: 
	[synonym FpML_5_10 value "HoldingAndUsingPostedCollateral"]

	party Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10 value "partyReference"]
	eligibilityToHoldCollateral EligibilityToHoldCollateral (1..1) 
		[synonym FpML_5_10 value "eligibilityToHoldCollateral"]
	useOfPostedCollateral boolean (1..1) 
		[synonym FpML_5_10 value "useOfPostedCollateral"]

type IneligibleCreditSupport: 

	specifiedParty Party (0..2) 
		[metadata reference]

type InterestAdjustment: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]
	periodicity InterestAdjustmentPeriodicity (1..1) 

type InterestAdjustmentPeriodicity: 

	standardElection InterestAdjustmentPeriodicityEnum (0..1) 
		[synonym ISDA_Create_1_0 value "timing"]
	customElection string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" set when "timing" = "other"]
	condition: one-of

type InterestAmount: 

	returnAmount ReturnAmount (1..1) 
	deliveryAmount DeliveryAmount (1..1) 

type JapaneseSecuritiesProvisions: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]
	relevantProvisionsElection boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "relevant_provisions" = "recommended_japanese", set to False when "relevant_provisions" = "specified"]
	relevantProvisionsTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "relevant_specify"]
	amendmentsToJapaneseProvisions boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "amendments_to_japanese_provisions" = "amendments_specify", set to False when "amendments_to_japanese_provisions" = "amendments_not_specified"]
	amendmentsToJapaneseProvisionsTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "amendments_specify" maps 2] // TODO: remove "maps 2" once migration complete

	condition relevantProvisionsElection: 
		if relevantProvisionsElection = True
		then relevantProvisionsTerms is absent

	condition amendmentsToJapaneseProvisions: 
		if amendmentsToJapaneseProvisions = False
		then amendmentsToJapaneseProvisionsTerms is absent

type JurisdictionRelatedTerms: 
	japaneseSecuritiesProvisions JapaneseSecuritiesProvisions (0..1) 
	// [documentReference ISDAEuroclear CtaInitialMargin 2019 paragraph "13" section "19 (c)"]
		[synonym ISDA_Create_1_0 value "japanese_securities_provisions"]
		[synonym ISDA_Create_1_0 value "japanese_collateral_provisions"]
	exclusiveJurisdiction boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "jurisdiction->exclusive_jurisdiction" = "applicable", set to False when "jurisdiction->exclusive_jurisdiction" = "not_applicable"]
	juryWaiver boolean (0..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "19 (b)"]
		[synonym ISDA_Create_1_0 set to True when "jury_waiver->is_applicable" = "applicable", set to False when "jury_waiver->is_applicable" = "not_applicable"]
	frenchLawAddendum FrenchLawAddendum (0..1) 
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "19 (d)"]
		[synonym ISDA_Create_1_0 value "french_law_addendum"]

type LegalAgreement extends LegalAgreementBase: 
	[metadata key]
 	[rootType]

 	// agreementQualifier agreementType (0..1) 
	agreementTerms AgreementTerms (0..1) 

	condition agreementVerification: 
		if agreementTerms -> agreement -> securityAgreementElections exists
		then agreementType -> name = LegalAgreementNameEnum->SecurityAgreement

		else if agreementTerms -> agreement -> creditSupportAgreementElections exists
		then agreementType -> name = LegalAgreementNameEnum->CreditSupportDeed or agreementType -> name = LegalAgreementNameEnum->CreditSupportAnnex

		else if agreementTerms -> agreement -> collateralTransferAgreementElections exists
		then agreementType -> name = LegalAgreementNameEnum->CollateralTransferAgreement

type LegalAgreementBase: 

	agreementDate date (1..1) 
		[synonym FpML_5_10 value "agreementDate" path "legalDocumentHeader"]
		[synonym ISDA_Create_1_0 value "executionDate" path "answers->partyA->execution_date"]
		[synonym ISDA_Create_1_0 value "collateral_transfer_agreement_date"]
		[synonym ISDA_Create_1_0 value "master_agreement_date"]
		[synonym ISDA_Create_1_0 value "partyA_date_of_security_agreement"]
		[synonym ISDA_Create_1_0 value "partyB_date_of_security_agreement"]
	effectiveDate date (0..1) 
		[synonym FpML_5_10 value "effectiveDate" path "legalDocumentHeader"]
	identifier Identifier (0..*) 
		[synonym FpML_5_10 value "partyDocumentIdentifier" path "legalDocumentHeader"]
	lineage Lineage (0..1) 
	agreementType LegalAgreementType (1..1) 
		[synonym FpML_5_10 value "documentType"]
	contractualParty Party (2..2)  
		[metadata reference]
		[synonym FpML_5_10 value "party"]
	otherParty PartyRole (0..*) 
	partyInformation Party (2..*) 
		[synonym ISDA_Create_1_0 value "answers" mapper "PartyInformation"]

type LegalAgreementType: 
	[synonym FpML_5_10 value "LegalDocumentType"]

	name LegalAgreementNameEnum (1..1) 
		[synonym FpML_5_10 value "name"]
		[synonym AcadiaSoft_AM_1_0 value "documentName"]
		[synonym ISDA_Create_1_0 value "documentType" path "document"]
	publisher LegalAgreementPublisherEnum (1..1) 
		[synonym FpML_5_10, AcadiaSoft_AM_1_0 value "publisher"]
		[synonym ISDA_Create_1_0 value "publisher" path "document"]
	governingLaw GoverningLawEnum (0..1) 
		[synonym FpML_5_10 value "style"]
		[synonym AcadiaSoft_AM_1_0 value "governingLaw"]
		[synonym ISDA_Create_1_0 value "governingLaw" path "document"]
	vintage string (0..1) 
		[synonym FpML_5_10, FpML_5_10 value "version"]
		[synonym AcadiaSoft_AM_1_0 value "csaVersion"]
		[synonym ISDA_Create_1_0 value "year" path "document"]
		[synonym ISDA_Create_1_0 value "isda_master_agreement_form"]

type MarginApproach: 

	marginApproach MarginApproachEnum (1..1)
		[synonym ISDA_Create_1_0 value "approach_selection"]

type MinimumTransferAmount: 

	partyElection ElectiveAmountElection (2..2) 

type MinimumTransferAmountAmendment: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "amendment_to_minimum_transfer_amount_is" = "applicable", set to False when "amendment_to_minimum_transfer_amount_is" = "not_applicable"]
	effectiveDate AmendmentEffectiveDate (0..1) 
	partyElections ElectiveAmountElection (0..2) 

	condition AmendmentNotApplicable: 
		if isApplicable = False
		then effectiveDate is absent and partyElections is absent

	condition AmendmentApplicable: 
		if isApplicable = True
		then effectiveDate exists and partyElections exists

type MultipleCreditNotations: 

	condition QuantifierEnum (1..1) 
		[synonym FpML_5_10 value "condition"]
	creditNotation CreditNotation (2..*) 
		[metadata scheme]
		[synonym FpML_5_10 value "debtType" meta "creditNotation"]
	mismatchResolution CreditNotationMismatchResolutionEnum (0..1)
	referenceAgency CreditRatingAgencyEnum (0..1)

	condition ReferenceAgency: 
		if MultipleCreditNotations -> mismatchResolution = CreditNotationMismatchResolutionEnum -> ReferenceAgency
		then MultipleCreditNotations -> referenceAgency exists

type MultipleDebtTypes: 

	condition QuantifierEnum (1..1) 
		[synonym FpML_5_10 value "condition"]
	debtType string (2..*) 
		[metadata scheme]
		[synonym FpML_5_10 value "debtType" meta "debtTypeScheme"]

type NotificationTime: 

	partyElections NotificationTimeElection (2..2) 
	disputeNotificationReference boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "include_reference_to_41a_is_applicable" = "applicable", set to False when "include_reference_to_41a_is_applicable" = "not_applicable"]
	transferTimingProviso boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "inclusion_of_proviso_for_transfer_timing_is_applicable" = "applicable",
									set to False when "inclusion_of_proviso_for_transfer_timing_is_applicable" = "not_applicable"]

type NotificationTimeElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_notification_time" = "false", set to "partyA" when "partyA_notification_time" = "true"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_notification_time" = "false", set to "partyB" when "partyB_notification_time" = "true"]
	notificationTime BusinessCenterTime (0..1) 
	customNotification string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify" set when "partyA_notification_time" = "false"]
		[synonym ISDA_Create_1_0 value "partyB_specify" set when "partyB_notification_time" = "false"]

	condition Choice: 
		required choice notificationTime, customNotification

type OneWayProvisions: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]
	postingParty string (0..1) 
		[synonym ISDA_Create_1_0 value "posting_party"]

	condition PostingPartyExists: 
		if isApplicable = True
		then postingParty exists

	condition PostingPartyAbsent: 
		if isApplicable = False
		then postingParty is absent

type OtherAgreements: 

	isSpecified boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "specify_japanese_law_csa_vm" = "true", set to False when "specify_japanese_law_csa_vm" = "false"]
		[synonym ISDA_Create_1_0 set to True when "specify_other_csa" = "true", set to False when "specify_other_csa" = "false"]
	legalDocument string (0..1) 
		[synonym ISDA_Create_1_0 value "specify"]

	condition LegalDocumentNotSpecified: 
		if isSpecified = False
		then legalDocument is absent

	condition LegalDocumentSpecified: 
		if isSpecified = True
		then legalDocument exists
// TODO - Need to associate a more meaningful definition to the below class and attribute.  I couldn't find anything as part of the CSA terms.
type OtherEligibleAndPostedSupport: 

	otherEligibleSupport string (0..1) 
		[synonym ISDA_Create_1_0 value "eligible_support_specify" path "other_eligible_support" set when "other_eligible_support->other_eligible_support" = "specify"]
		[synonym ISDA_Create_1_0 value "other_eligible_support" path "eligible_support"]
	applicableValue boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "support_value->is_applicable" = "applicable",	set to False when "support_value->is_applicable" = "not_applicable"]
	applicableTransfer boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "support_transfer->is_applicable" = "applicable", set to False when "support_transfer->is_applicable" = "not_applicable"]

type PartyAgreementIdentifier: 
	[metadata key]
	// TODO Never referenced in CDM
	[synonym FpML_5_10 value "PartyDocumentIdentifier" meta "id"]

	partyReference string (1..1) 
		[synonym FpML_5_10 value "partyReference"]
	documentIdentifier Identifier (1..*) 
		[metadata scheme]
		[synonym FpML_5_10 value "documentId" meta "legalDocumentIdScheme"]

type PostingObligations: 

	securityProvider string (1..1)
		[synonym ISDA_Create_1_0 value "pledgor"]
		[synonym ISDA_Create_1_0 value "chargor"]
		[synonym ISDA_Create_1_0 value "obligor"]
		[synonym ISDA_Create_1_0 value "security_provider"]
	partyElection PostingObligationsElection (1..2) 
	
type PostingObligationsElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "PartyA" when "partyA_type" = "control_agreement", set to "PartyA" when "partyA_type" = "collateral_management_agreement", set to "PartyA" when "partyA_type" = "specify"]
		[synonym ISDA_Create_1_0 set to "PartyB" when "partyB_type" = "control_agreement", set to "PartyB" when "partyB_type" = "collateral_management_agreement", set to "PartyB" when "partyB_type" = "specify"]
	asPermitted boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_type" = "control_agreement", set to True when "partyA_type" = "collateral_management_agreement", set to False when "partyA_type" = "specify"]
		[synonym ISDA_Create_1_0 set to True when "partyB_type" = "control_agreement", set to True when "partyB_type" = "collateral_management_agreement", set to False when "partyB_type" = "specify"]
	eligibleCollateral EligibleCollateral (0..*) 
		[synonym ISDA_Create_1_0 value "partyA_eligible_currencies" set when "partyA_type" = "specify"]
		[synonym ISDA_Create_1_0 value "partyB_eligible_currencies" set when "partyB_type" = "specify"]
	excludedCollateral string (0..1)  // This representation matches the current ISDA Create one, but should be aligned with the eligibleCollateral representation once that one is confirmed
		[synonym ISDA_Create_1_0 value "partyA_control_agreement_specify" set when "partyA_control_agreement" = "yey"]
		[synonym ISDA_Create_1_0 value "partyB_control_agreement_specify" set when "partyB_control_agreement" = "yey"]
		[synonym ISDA_Create_1_0 value "partyA_collateral_management_agreement_specify" set when "partyA_collateral_management_agreement" = "yey"]
		[synonym ISDA_Create_1_0 value "partyB_collateral_management_agreement_specify" set when "partyB_collateral_management_agreement" = "yey"]
	additionalLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_additional_language"]
		[synonym ISDA_Create_1_0 value "partyB_additional_language"]
		[synonym ISDA_Create_1_0 value "additional_language"]

	condition AsPermitted: 
		if asPermitted = True
		then eligibleCollateral is absent

	condition EligibleCollateral: 
		if asPermitted = False
		then eligibleCollateral exists

type ProcessAgent: 
	//
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "16"]

	partyElection ProcessAgentElection (2..2) 

type ProcessAgentElection: 

	party string (1..1) 
		[synonym AcadiaSoft_AM_1_0 value "party"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_process_agent" = "not_applicable", set to "partyA" when "partyA_process_agent" = "other"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_process_agent" = "not_applicable", set to "partyB" when "partyB_process_agent" = "other"]
	// TODO will need to streamline the parties here
	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_process_agent" = "other", set to False when "partyA_process_agent" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_process_agent" = "other", set to False when "partyB_process_agent" = "not_applicable"]
	specification string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify" maps 2] // TODO: remove "maps 2" once migration complete
		[synonym ISDA_Create_1_0 value "partyB_specify" maps 2] // TODO: remove "maps 2" once migration complete

	condition Applicable: 
		if isApplicable = True
		then specification exists

	condition NotApplicable: 
		if isApplicable = False
		then specification is absent

type RecalculationOfValue: 

	partyElection RecalculationOfValueElection (2..2)	

type RecalculationOfValueElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_recalculation_of_value" = "consultation_procedure", set to "partyA" when "partyA_recalculation_of_value" = "other_regulatory_CSA_procedure"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_recalculation_of_value" = "other_regulatory_CSA_procedure"]
		[synonym ISDA_Create_1_0 set to "partyA" when "recalculation_of_market_value" = "partyA_recalculation_of_market_value"]
		[synonym ISDA_Create_1_0 set to "partyB" when "recalculation_of_market_value" = "partyB_recalculation_of_market_value"]

	recalculationOfValueElection RecalculationOfValueElectionEnum (1..1) 
		[synonym ISDA_Create_1_0 value "partyA_recalculation_of_value"]
		[synonym ISDA_Create_1_0 value "partyB_recalculation_of_value"]
		[synonym ISDA_Create_1_0 value "partyA_recalculation_of_market_value"]
		[synonym ISDA_Create_1_0 value "partyB_recalculation_of_market_value"]

	recalculationOfValueTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_recalculation_of_value_terms" set when "partyA_recalculation_of_value" = "other"]
		[synonym ISDA_Create_1_0 value "partyB_recalculation_of_value_terms" set when "partyB_recalculation_of_value" = "other"]
		[synonym ISDA_Create_1_0 value "partyA_recalculation_of_market_value_terms" set when "partyA_recalculation_of_market_value" = "other"]
		[synonym ISDA_Create_1_0 value "partyB_recalculation_of_market_value_terms" set when "partyB_recalculation_of_market_value" = "other"]

	condition recalculationOfValueTerms: 
		if RecalculationOfValueElection exists
		then recalculationOfValueTerms is absent

type Regime: 
	[synonym AcadiaSoft_AM_1_0 value "Regime"]

	applicableRegime ApplicableRegime (1..*) 
		[synonym ISDA_Create_1_0 value "canada", "sec", "cftc", "emir", "japan", "switzerland", "prudential", "australia", "hong_kong", "singapore" mapper "ApplicableRegime"]
	fallbackToMandatoryMethodDays number (0..1) 
		[synonym ISDA_Create_1_0 value "fallback_to_mandatory_method_days" path "fallback_to_mandatory_method"]
	additionalRegime AdditionalRegime (0..*) 
		[synonym ISDA_Create_1_0 value "additional_regimes"  mapper "AdditionalRegime"]

    //TODO - Data Rule required as per description below
//	condition FallbackToMandatoryMethodDays: 
// 		if fallbackToMandatoryMethodDays exists
//		then applicableRegime -> regimeTerms -> simmException -> simmExceptionApplicable contains SimmExceptionApplicableEnum -> FallBackToMandatoryMethod

type RegimeTerms: 

	party string (1..1) 
	isApplicable ExceptionEnum (0..1) 
	asSpecified string (0..1) 
	//TODO - Condition required that asSpecified only exists when isApplicable is Other
	simmException SimmException (0..1) 
	retrospectiveEffect RetrospectiveEffect (0..1) 
	//TODO - Condition required that retrospectiveEffect should exist for 2016 CSD and be absent for 2018 CSD

type RetrospectiveEffect: 

	standardisedException ExceptionEnum (0..1) 
	asSpecified string (0..1) 
	// TODO condition asSpecified should only exist when standardisedException = Other


type ReturnAmount: 

	includesDefaultLanguage boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "return_amount" = "include", set to False when "return_amount" = "exclude", set to False when "return_amount" = "other"]
	customElection string (0..1) 
		[synonym ISDA_Create_1_0 value "specify_return_amount"]
	condition CustomElection: 
		if customElection exists then includesDefaultLanguage = False

type RightsEvents: 

	securityTakerRightsEvent SecuredPartyRightsEvent (1..1) 
		[synonym ISDA_Create_1_0 value "secured_party_rights_event"]
		[synonym ISDA_Create_1_0 value "security_taker_rights_event"]
		[synonym ISDA_Create_1_0 value "early_termination_date"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "h"]
	controlAgreementNecEvent ControlAgreementNecEvent (0..1) 
		[synonym ISDA_Create_1_0 value "control_agreement_nec_event"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "i"]
	securityProviderRightsEvent SecurityProviderRightsEvent (1..1) 
		[synonym ISDA_Create_1_0 value "obligor_rights_event"]
		[synonym ISDA_Create_1_0 value "chargor_rights_event"]
		[synonym ISDA_Create_1_0 value "pledgor_rights_event"]
		[synonym ISDA_Create_1_0 value "security_provider_rights_event"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "j"]
	deliveryInLieuRight boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "delivery_in_lieu_right->right" = "applicable", set to False when "delivery_in_lieu_right->right" = "not_applicable"]
	// [documentReference ISDA CtaInitialMargin 2019 paragraph "13" section "l"]
	additionalRightsEvent AdditionalRightsEvent (0..1) 
		[synonym ISDA_Create_1_0 value "chargor_additional_rights_event"]
		[synonym ISDA_Create_1_0 value "obligor_additional_rights_event"]
		[synonym ISDA_Create_1_0 value "pledgor_additional_rights_event"]

type SecuredPartyRightsEvent: 

	securedPartyRightsEventElection SecuredPartyRightsEventElection (0..2)

	earlyTerminationDateOptionalLanguage boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "early_termination_date_optional_language" = "include", set to False when "early_termination_date_optional_language" = "exclude"]
		[synonym ISDA_Create_1_0 set to True when "paid_in_full_language" = "include", set to False when "paid_in_full_language" = "exclude"]


	failureToPayEarlyTermination boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "failure_to_pay_early_termination_is_applicable" = "applicable",
									set to False when "failure_to_pay_early_termination_is_applicable" = "not_applicable"]

	condition FailureToPayLanguage: 
		if earlyTerminationDateOptionalLanguage = False
		then failureToPayEarlyTermination is absent

type SecuredPartyRightsEventElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_secured_party_rights_event" = "applicable", set to "partyA" when "partyA_secured_party_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_secured_party_rights_event" = "applicable", set to "partyB" when "partyB_secured_party_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_security_taker_rights_event" = "applicable", set to "partyA" when "partyA_security_taker_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_security_taker_rights_event" = "applicable", set to "partyB" when "partyB_security_taker_rights_event" = "not_applicable"]

	rightsEvent boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_secured_party_rights_event" = "applicable", set to False when "partyA_secured_party_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_secured_party_rights_event" = "applicable", set to False when "partyB_secured_party_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyA_security_taker_rights_event" = "applicable", set to False when "partyA_security_taker_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_security_taker_rights_event" = "applicable", set to False when "partyB_security_taker_rights_event" = "not_applicable"]

type SecurityAgreementElections: 

	pledgedAccount Account (0..1) 
		[synonym ISDA_Create_1_0 value "pledged_account_number"]
	enforcementEvent EnforcementEvent (0..1) 
		[synonym ISDA_Create_1_0 value "enforcement_event"]
		[synonym ISDA_Create_1_0 value "early_termination_date"]
	deliveryInLieuRight boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "delivery_in_lieu_right->right" = "applicable", set to False when "delivery_in_lieu_right->right" = "not_applicable"]
	fullDischarge boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "security_provider_full_discharge_condition->is_applicable" = "applicable",
									set to False when "security_provider_full_discharge_condition->is_applicable" = "not_applicable"]
	appropriatedCollateralValuation AppropriatedCollateralValuation (0..1) 
		[synonym ISDA_Create_1_0 value "valuation_of_appropriated_collateral"]
	processAgent ProcessAgent (0..1) 
		[synonym ISDA_Create_1_0 value "process_agent"]
	jurisdictionRelatedTerms JurisdictionRelatedTerms (0..1) 
	additionalAmendments string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "amendments" maps 2 set when "amendments->is_applicable" = "applicable"] // TODO: remove "maps 2" once migration complete
	additionalBespokeTerms string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" path "additional_terms" set when "additional_terms->is_applicable" = "applicable"]
		[synonym ISDA_Create_1_0 value "specify" path "bespoke_provisions" set when "bespoke_provisions->is_applicable" = "applicable"]
	executionTerms ExecutionTerms (0..1) 
		[synonym ISDA_Create_1_0 value "execution_language"]

type SecurityProviderRightsEvent: 

	partyElection SecurityProviderRightsEventElection (0..2)
	includeCoolingOffLanguage boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "cooling_off_language" = "include", set to False when "cooling_off_language" = "not_specified", set to False when "cooling_off_language" = "other"]
		[synonym ISDA_Create_1_0 set to True when "cooling_off_period_condition_is_applicable" = "applicable", set to False when "cooling_off_period_condition_is_applicable" = "not_applicable"]
	fullDischarge boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "chargor_full_discharge_condition_is_applicable" = "applicable", set to False when "chargor_full_discharge_condition_is_applicable" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "pledgor_full_discharge_condition_is_applicable" = "applicable", set to False when "pledgor_full_discharge_condition_is_applicable" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "obligor_full_discharge_condition_is_applicable" = "applicable", set to False when "obligor_full_discharge_condition_is_applicable" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "security_provider_full_discharge_condition_is_applicable" = "applicable",
								set to False when "security_provider_full_discharge_condition_is_applicable" = "not_applicable"]
	automaticSetOff boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "automatic_setoff->right" = "applicable", set to False when "automatic_setoff->right" = "not_applicable"]

	customElection string (0..1) 
		[synonym ISDA_Create_1_0 value "specify"]

	condition RightsEvent_includeCoolingOffLanguage: 
		if includeCoolingOffLanguage = True
		then customElection is absent

	condition RightsEvent_customElection: 
		if customElection exists
		then includeCoolingOffLanguage = False

type SecurityProviderRightsEventElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_chargor_rights_event" = "applicable", set to "partyA" when "partyA_chargor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_chargor_rights_event" = "applicable", set to "partyB" when "partyB_chargor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_pledgor_rights_event" = "applicable", set to "partyA" when "partyA_pledgor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_pledgor_rights_event" = "applicable", set to "partyB" when "partyB_pledgor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_obligor_rights_event" = "applicable", set to "partyA" when "partyA_obligor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_obligor_rights_event" = "applicable", set to "partyB" when "partyB_obligor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_security_provider_rights_event" = "applicable", set to "partyA" when "partyA_security_provider_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_security_provider_rights_event" = "applicable", set to "partyB" when "partyB_security_provider_rights_event" = "not_applicable"]

	rightsEvent boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_chargor_rights_event" = "applicable", set to False when "partyA_chargor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_chargor_rights_event" = "applicable", set to False when "partyB_chargor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyA_pledgor_rights_event" = "applicable", set to False when "partyA_pledgor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_pledgor_rights_event" = "applicable", set to False when "partyB_pledgor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyA_obligor_rights_event" = "applicable", set to False when "partyA_obligor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_obligor_rights_event" = "applicable", set to False when "partyB_obligor_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyA_security_provider_rights_event" = "applicable", set to False when "partyA_security_provider_rights_event" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_security_provider_rights_event" = "applicable", set to False when "partyB_security_provider_rights_event" = "not_applicable"]

type SensitivityMethodologies: 

	sensitivityToEquity SensitivityMethodology (1..1) 
		[synonym ISDA_Create_1_0 value "sensitivities_to_equity_indices_funds_etfs"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (g)(ii)(A)"]
	sensitivityToCommodity SensitivityMethodology (1..1) 
		[synonym ISDA_Create_1_0 value "sensitivities_to_commodity_indices"]
	// [documentReference Euroclear CtaInitialMargin 2019 paragraph "13" section "General Principles (g)(ii)(B)"]

type SensitivityMethodology: 

	specifiedMethodology SensitivitiesEnum (0..1) 
		[synonym ISDA_Create_1_0 value "sensitivities_equity_indices_funds_etfs", "sensitivities_commodity_indices"]
	customMethodology string (0..1) 
		[synonym ISDA_Create_1_0 value "sensitivities_equity_indices_funds_etfs_specify", "sensitivities_commodity_indices_specify"]
	condition: one-of

type SimmCalculationCurrency: 
	
	partyElection CalculationCurrencyElection (2..2) 

type SimmException: 

	standardisedException ExceptionEnum (0..1) 
		[synonym AcadiaSoft_AM_1_0 set to ExceptionEnum -> NotApplicable when "simmException" = "False"]
	simmExceptionApplicable SimmExceptionApplicableEnum (0..1) 
	// TODO condition that SimmExceptionApplicableEnum should only exist if SimmExceptionEnum = Applicable
	asSpecified string (0..1) 
	// TODO condition asSpecified exists if something OtherMethods are specified

type SimmVersion: 

	isSpecified boolean (0..1) 
		[synonym ISDA_Create_1_0 set to True when "is_specified" = "specified", set to False when "is_specified" = "not_specified"]
	partyVersion string (0..1) 
		[metadata reference]
		[synonym ISDA_Create_1_0 set to "PartyA" when "party_A_or_party_B_version" = "partyA", set to "PartyB" when "party_A_or_party_B_version" = "partyB"]
	//	TODO - ISDA Create export has a blank value type referencing party in 2018 CSD Eng Law schema.  Feedback to ISDA
	asSpecified string (0..1) 
		[synonym ISDA_Create_1_0 value "specify" set when "is_specified" = "other"]


	condition VersionNotSpecified: 
		if isSpecified = False
		then partyVersion is absent

	condition VersionSpecified: 
		if isSpecified = True
		then partyVersion exists

type SubstitutedRegime: 

	partyElection SubstitutedRegimeElection (2..2) 

type SubstitutedRegimeElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_emir" = "applicable", set to "partyA" when "partyA_emir" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_emir" = "applicable", set to "partyB" when "partyB_emir" = "not_applicable"]
	emir boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_emir" = "applicable", set to False when "partyA_emir" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_emir" = "applicable", set to False when "partyB_emir" = "not_applicable"]
	prudential boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_prudential" = "applicable", set to False when "partyA_prudential" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_prudential" = "applicable", set to False when "partyB_prudential" = "not_applicable"]
	cftc boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_cftc" = "applicable", set to False when "partyA_cftc" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_cftc" = "applicable", set to False when "partyB_cftc" = "not_applicable"]
	sec boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_sec" = "applicable", set to False when "partyA_sec" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_sec" = "applicable", set to False when "partyB_sec" = "not_applicable"]
	canada boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_canada" = "applicable", set to False when "partyA_canada" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_canada" = "applicable", set to False when "partyB_canada" = "not_applicable"]
	switzerland boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_switzerland" = "applicable", set to False when "partyA_switzerland" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_switzerland" = "applicable", set to False when "partyB_switzerland" = "not_applicable"]
	japan boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_japan" = "applicable", set to False when "partyA_japan" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_japan" = "applicable", set to False when "partyB_japan" = "not_applicable"]
	australia boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_australia" = "applicable", set to False when "partyA_australia" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_australia" = "applicable", set to False when "partyB_australia" = "not_applicable"]
	hong_kong boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_hong_kong" = "applicable", set to False when "partyA_hong_kong" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_hong_kong" = "applicable", set to False when "partyB_hong_kong" = "not_applicable"]
	singapore boolean (1..1)
		[synonym ISDA_Create_1_0 set to True when "partyA_singapore" = "applicable", set to False when "partyA_singapore" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "partyB_singapore" = "applicable", set to False when "partyB_singapore" = "not_applicable"]

type Substitution: 

	needsConsent boolean (1..1) 
		[synonym ISDA_Create_1_0  set to True when "is_applicable" = "standard", set to False when "is_applicable" = "other"]
		[synonym ISDA_Create_1_0  set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]
	specificConsentLanguage string (0..1) 
		[synonym ISDA_Create_1_0 value "specify"]

type TerminationCurrencyAmendment: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]
		[synonym ISDA_Create_1_0 set to True when "amendment_to_termination_currency_is" = "applicable", set to False when "amendment_to_termination_currency_is" = "not_applicable" ]
	effectiveDate AmendmentEffectiveDate (0..1) 
	partyElection TerminationCurrencyElection (0..3) 

	condition Applicablity: 
		if isApplicable = False
		then ( effectiveDate
		and partyElection) is absent // TODO - Logic to be confirmed by testing NotApplicable

type TerminationCurrencyElection: 

	party string (1..1) 
		[synonym ISDA_Create_1_0 set to "partyA" when "partyA_amendment_to_termination_currency" = "specify", set to "partyA" when "partyA_amendment_to_termination_currency" = "in_schedule"]
		[synonym ISDA_Create_1_0 set to "partyB" when "partyB_amendment_to_termination_currency" = "specify", set to "partyB" when "partyB_amendment_to_termination_currency" = "in_schedule"]
		[synonym ISDA_Create_1_0 set to "partyA,partyB" when "two_affected_parties" = "specify", set to "partyA,partyB" when "two_affected_parties" = "in_schedule"]
	isSpecified boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "partyA_amendment_to_termination_currency" = "specify", set to False when "partyA_amendment_to_termination_currency" = "in_schedule"]
		[synonym ISDA_Create_1_0 set to True when "partyB_amendment_to_termination_currency" = "specify", set to False when "partyB_amendment_to_termination_currency" = "in_schedule"]
		[synonym ISDA_Create_1_0 set to True when "two_affected_parties" = "specify", set to False when "two_affected_parties" = "in_schedule"]
	currency string (1..1) 
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "partyA_termination_currency"]
		[synonym ISDA_Create_1_0 value "partyB_termination_currency"]
		[synonym ISDA_Create_1_0 value "partyA_currency"]
		[synonym ISDA_Create_1_0 value "partyB_currency"]
		[synonym ISDA_Create_1_0 value "two_affected_parties_currency"]
		[synonym ISDA_Create_1_0 value "both_parties_termination_currency"]

	condition CurrencyElection: 
		if isSpecified = False then currency is absent

type Threshold: 

	partyElection ElectiveAmountElection (2..2) 

type TransactionConfirmation: 
// TODO - Next step to move Contract from Contractual Product to here.  Will require significant refactoring of model.

type UmbrellaAgreement: 

	isApplicable boolean (1..1) 
		[synonym ISDA_Create_1_0 set to True when "is_applicable" = "applicable", set to False when "is_applicable" = "not_applicable"]
	language string (0..1) 
		[synonym ISDA_Create_1_0 value "language" maps 2] // TODO: remove "maps 2" once migration complete
	parties UmbrellaAgreementEntity (0..*) 
		[synonym ISDA_Create_1_0 value "principal_identification_schedule" mapper "UmbrellaAgreementEntity"]
	
	condition UmbrellaAgreementExists: 
		if isApplicable = True
		then (language and parties) exists

type UmbrellaAgreementEntity extends LegalEntity: 
	terms string (0..1) 

// Agreement Validation

func SaIsdaBankCustodian2019NewYorkLaw:
	// [validation agreement]
	inputs: agreementTerms AgreementTerms (1..1)
	output: is_agreement boolean (1..1)
	
	assign-output is_agreement:
		agreementTerms -> relatedAgreements -> legalAgreement -> agreementType -> name = LegalAgreementNameEnum->CollateralTransferAgreement //The agreement is a CTA
		and agreementTerms -> relatedAgreements -> legalAgreement -> agreementType -> publisher = LegalAgreementPublisherEnum->ISDA //published by ISDA
		and agreementTerms -> relatedAgreements -> legalAgreement -> agreementType -> governingLaw = GoverningLawEnum->USNY //under New York Law
		and agreementTerms -> relatedAgreements -> legalAgreement -> agreementType -> vintage = "2019" //with vintage 2019
		and agreementTerms -> relatedAgreements -> legalAgreement -> agreementDate exists //then the CTA should have an agreement date specified
		and agreementTerms -> agreement -> securityAgreementElections -> pledgedAccount is absent //there should not be a PledgedAccount
		and agreementTerms -> agreement -> securityAgreementElections -> enforcementEvent is absent //there should not be EnforcementEvent terms specified
		and agreementTerms -> agreement -> securityAgreementElections -> deliveryInLieuRight is absent //there should not be Delivery in Lieu Right terms specified
		and agreementTerms -> agreement -> securityAgreementElections -> fullDischarge is absent //there should not be Full Discharge terms specified
		and agreementTerms -> agreement -> securityAgreementElections -> appropriatedCollateralValuation is absent //there should not be any Valuation of Appropriated Collateral terms specified
		and agreementTerms -> agreement -> securityAgreementElections -> processAgent exists //there should be Process Agent terms specified
		and agreementTerms -> agreement -> securityAgreementElections -> jurisdictionRelatedTerms -> japaneseSecuritiesProvisions exists //there should be Japanese Securities Provisions specified
		and agreementTerms -> agreement -> securityAgreementElections -> jurisdictionRelatedTerms -> exclusiveJurisdiction exists //there should be Exclusive Jurisdiction terms specified
		and agreementTerms -> agreement -> securityAgreementElections -> jurisdictionRelatedTerms -> juryWaiver exists //there should be Jury Waiver terms specified


import cdm.base.*
import cdm.synonyms.config.*

type AdjustableDate: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AdjustableDate" meta "id" path "adjustableDate"]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AdjustableDate2" meta "id" path "adjustableDate"]

	unadjustedDate date (0..1 ) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate" maps 2]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate" path "adjustableDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate" path "paymentDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate" path "paymentDate->adjustableDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "firstPeriodStartDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustablePaymentDate"]
	dateAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "calculationPeriodDates->terminationDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "calculationPeriodDates->effectiveDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "paymentDate->adjustableDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "adjustableDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "paymentDate"]
	dateAdjustmentsReference BusinessDayAdjustments (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustmentsReference" meta "href"]
	adjustedDate date (0..1) 
		[metadata id]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" meta "id"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" path "paymentDate" meta "id"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" path "adjustableDate" meta "id"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" path "paymentDate->adjustableDate" meta "id"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedTerminationDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedEffectiveDate"]

	condition Choice: 
		optional choice dateAdjustments, dateAdjustmentsReference


type AdjustableDates: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AdjustableDates" meta "id"]

	unadjustedDate date (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate"]
	dateAdjustments BusinessDayAdjustments (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments"]
	adjustedDate date (0..*) 
		[metadata id]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" meta "id"]


type AdjustableOrAdjustedDate: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "AdjustableOrAdjustedDate" meta "id"]

	unadjustedDate date (0..1 ) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate"]
	dateAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments"]
	adjustedDate date (0..1) 
		[metadata id]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" meta "id"]

	condition AdjustedDate: 
		if AdjustableOrAdjustedDate exists
		then adjustedDate exists
			or ( unadjustedDate and dateAdjustments and adjustedDate) exists
			or (( unadjustedDate and dateAdjustments) exists
			and adjustedDate is absent)

type AdjustableOrAdjustedOrRelativeDate: 

	unadjustedDate date (0..1 ) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustablePaymentDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate" path "paymentDate->adjustableDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate" path "paymentDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedDate" path "adjustableDate"]
	dateAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "paymentDate->adjustableDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "paymentDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "adjustableDate"]
	adjustedDate date (0..1) 
		[metadata id]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" meta "id"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" path "paymentDate" meta "id"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate" path "adjustableDate" meta "id"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedPaymentDate" meta "id"]
		[synonym FpML_5_10 value "adjustedPaymentDate" path "FpML"]
	relativeDate RelativeDateOffset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDate" path "paymentDate"]

	condition AdjustedDate: 
		if AdjustableOrAdjustedOrRelativeDate exists
		then adjustedDate exists
			or relativeDate exists
			or ( unadjustedDate) exists
			or (( unadjustedDate and dateAdjustments) exists
			and adjustedDate is absent)

type AdjustableOrRelativeDate: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id" path "adjustedEffectiveDate"]

	adjustableDate AdjustableDate (0..1) 
	relativeDate AdjustedRelativeDateOffset (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDate" path "paymentDate"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "periodMultiplier"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "period"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "dayType"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "businessDayConvention"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "businessCenters"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "dateRelativeTo"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "relativeDateAdjustments"]
		[synonym FpML_5_10 value "relativeDate" path "paymentDateFinal"]

	condition Choice: 
		required choice adjustableDate, relativeDate

type AdjustableOrRelativeDates: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	adjustableDates AdjustableDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustableDates"]
	relativeDates RelativeDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDates"]
		[synonym FpML_5_10 value "relativeDateSequence"]

	condition Choice: 
		required choice adjustableDates, relativeDates

type AdjustedRelativeDateOffset extends RelativeDateOffset: 
	[synonym FpML_5_10 value "AdjustedRelativeDateOffset"]
	relativeDateAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relativeDateAdjustments"]

type BusinessCenters: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id" path "businessCenters"]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	businessCenter BusinessCenterEnum (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenter" meta "businessCenterScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenter" path "businessCenters" meta "businessCenterScheme"]
	businessCentersReference BusinessCenters (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCentersReference" meta "href"]

	condition Choice: 
		required choice businessCenter, businessCentersReference

type BusinessCenterTime: 
	[synonym FpML_5_10 value "BusinessCenterTime"]

	hourMinuteTime time (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "hourMinuteTime"]
		[synonym ISDA_Create_1_0 value "partyA_time"]
		[synonym ISDA_Create_1_0 value "partyB_time"]
		[synonym ISDA_Create_1_0 value "time"]
	businessCenter BusinessCenterEnum (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenter" meta "businessCenterScheme"]
		[synonym ISDA_Create_1_0 value "partyA_location"]
		[synonym ISDA_Create_1_0 value "partyB_location"]
		[synonym ISDA_Create_1_0 value "location"]


type BusinessDateRange extends DateRange: 
	[synonym FpML_5_10 value "BusinessDateRange"]

	businessDayConvention BusinessDayConventionEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDayConvention"]
	businessCenters BusinessCenters (0..1) 

type BusinessDayAdjustments: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "BusinessDayAdjustments" meta "id"]

	businessDayConvention BusinessDayConventionEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDayConvention" maps 2]
	businessCenters BusinessCenters (0..1) 

type DateRange: 
	[synonym FpML_5_10 value "DateRange"]

	unadjustedFirstDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedFirstDate"]
	unadjustedLastDate date (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "unadjustedLastDate"]


type DateList: 
	[synonym FpML_5_10 value "DateList"]

	date date (1..*)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "date"]


type DateTimeList: 
	[synonym FpML_5_10 value "DateTimeList"]

	dateTime zonedDateTime (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateTime"]

type Frequency: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Frequency" meta "id"]

	periodMultiplier int (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodMultiplier"]
		[synonym FpML_5_10 value "periodMultiplier" path "paymentDatesInterim->relativeDates"]
	period PeriodExtendedEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "period"]
		[synonym FpML_5_10 value "period" path "paymentDatesInterim->relativeDates"]

	condition TermPeriod: 
		if period = PeriodExtendedEnum -> T
		then periodMultiplier = 1

	condition PositivePeriodMultiplier: 
		if Frequency exists
		then periodMultiplier >= 0

type Offset extends Period: 
	[synonym FpML_5_10 value "Offset"]
	dayType DayTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayType"]
		[synonym ISDA_Create_1_0 set to DayTypeEnum -> Calendar when "release_date" = "days"]
	condition DayType: 
		if period <> PeriodEnum -> D
			or periodMultiplier = 0
		then dayType is absent

type Period: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Period" meta "id"]
	periodMultiplier int (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodMultiplier" maps 2]
		[synonym FpML_5_10 value "periodMultiplier" path "dateOffset"]
		[synonym FpML_5_10 value "periodMultiplier" path "calculationPeriodDates->relativeEffectiveDate"]
		[synonym ISDA_Create_1_0 value "timely_days", "release_days", "after_days"]
	period PeriodEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "period" maps 2]
		[synonym FpML_5_10 value "period" path "dateOffset"]
	// [synonym ISDA_Create_1_0 set to PeriodEnum -> D]
	condition DayPeriod: 
		if periodMultiplier = 0
		then period = PeriodEnum -> D

type RelativeDates extends RelativeDateOffset: 
	[synonym FpML_5_10 value "RelativeDates"]
	periodSkip int (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodSkip"]
	scheduleBounds DateRange (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "scheduleBounds"]

	condition PeriodSkipGreaterThanOne: 
		if periodSkip exists
		then periodSkip > 1

type RelativeDateOffset extends Offset: 
	[synonym FpML_5_10 value "RelativeDateOffset"]
	businessDayConvention BusinessDayConventionEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessDayConvention"]
		[synonym FpML_5_10 value "businessDayConvention" path "dateOffset"]
	businessCenters BusinessCenters (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCenters"]
	businessCentersReference BusinessCenters (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "businessCentersReference" meta "href"]
	dateRelativeTo date (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateRelativeTo" meta "href"]
	adjustedDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "adjustedDate"]

type TimeZone: 

	time time (1..1) 
		[synonym Workflow_Event value "time"]
	location string (0..1) 
		[metadata scheme]
		[synonym Workflow_Event value "location" meta "timezoneLocationScheme"]

type DateGroup:
	dates date(0..*)

type PeriodRange: 
	lowerBound PeriodBound (0..1) 
	upperBound PeriodBound (0..1) 
	condition: lowerBound exists or upperBound exists

type PeriodBound: 
    period Period (1..1) 
    inclusive boolean (1..1) 



import cdm.base.*
import cdm.base.datetime.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type CalculationAgentModel: 
	// TODO Never referenced in CDM
	calculationAgent CalculationAgent (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgent" path "trade"]
		[synonym Workflow_Event value "calculationAgent"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgent" path "trade->swaption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgent" path "swaption"]
	calculationAgentBusinessCenter BusinessCenterEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgentBusinessCenter" path "trade"]
		[synonym Workflow_Event value "calculationAgentBusinessCenter"]
		

/*
 * Only some of the attributes have been incorporated at this point, as some seem questionable (e.g. executionDateTime, which should be associated to the relevant execution event).
 */
type PackageInformation: 
	// TODO Never referenced in CDM
	[synonym FpML_5_10 value "PackageInformation"]
	relatedParty RelatedParty (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relatedParty"]
	category CategoryEnum (0..*)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "category"]
	/*
	 * Why should the below be specifically associated with package transactions?
	 * It seems to also be relevant in the context of single trades
	 */
	intentToAllocate boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "intentToAllocate"]

type PartyContractInformation: 
	[synonym FpML_5_10 value "PartyTradeInformation"]
	partyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyReference" meta "href"]
	naturalPersonRole NaturalPersonRole (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relatedPerson"]
	relatedParty RelatedParty (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "relatedParty"]
	accountReference Account (0..1) 
		[metadata reference]
		[synonym CME_ClearedConfirm_1_17 value "accountReference" meta "href"]
	category CategoryEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "category" meta "categoryScheme"]

type PercentageRule: 
	[synonym FpML_5_10 value "PercentageRule"]
	paymentPercent number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentPercent"]
	notionalAmountReference Money (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalAmountReference" meta "href"]


import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.asset.rates.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type AssetIdentifier: 

	productIdentifier ProductIdentifier (0..1) 
		// For QuantityNotation only set productIdentifier if openUnits exists
		[synonym FpML_5_10 value "equity" set when "openUnits" exists]
		[synonym CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ignore"]
	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" maps 2 meta "currencyScheme"]
	rateOption FloatingRateOption (0..1) 

	condition: one-of


type Cashflow extends PayoutBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	payerReceiver PayerReceiver (1..1)
	paymentDiscounting PaymentDiscounting (0..1) 
	cashflowAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmount"]
	premiumExpression PremiumExpression (0..1) 
	cashflowDate AdjustableOrAdjustedOrRelativeDate (0..1)
	cashflowCalculation calculation (0..1) 
		[synonym Workflow_Event value "cashflowCalculation"]
	cashflowType CashflowTypeEnum (0..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "paymentType"]
	discountFactor number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discountFactor"]
	presentValueAmount Money (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "presentValueAmount"]
	paymentDelay boolean (0..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "paymentDelay" path "trade->creditDefaultSwap->feeLeg"]

	condition CashflowAmount: 
		if cashflowAmount exists
		then cashflowAmount -> amount >= 0.0
	
	condition QuantityAssetIdentifier:
		if payoutQuantity -> assetIdentifier exists
		then payoutQuantity -> assetIdentifier -> currency exists

/*
 * TODO - Follow-up to evaluate an alternative approach consisting in referencing those data points rather than specifying them.
 * Trello card: https://trello.com/c/4D6zubCG
 */
type ClosedState: 

	state ClosedStateEnum (1..1) 
		[synonym Workflow_Event value "state"]
	activityDate date (1..1) 
		[synonym Workflow_Event value "activityDate"]
	effectiveDate date (0..1) 
		[synonym Workflow_Event value "effectiveDate"]
	lastPaymentDate date (0..1) 
		[synonym Workflow_Event value "lastPaymentDate"]


type Contract: 
	[metadata key]
	[rootType]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id" path "trade"]

	contractIdentifier Identifier (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyTradeIdentifier" path "trade->tradeHeader"]
		[synonym CME_ClearedConfirm_1_17 value "universalSwapIdentifier" path "trade->tradeHeader"]
		[synonym CME_SubmissionIRS_1_0 value "partyTradeIdentifier" path "Instrmt->SecXML->FpML->trade->tradeHeader"]
	tradeDate TradeDate (1..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "tradeHeader" path "trade"]
		[synonym CME_SubmissionIRS_1_0 value "tradeHeader" path "Instrmt->SecXML->FpML->trade"]
	clearedDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "clearedDate" path "trade->tradeHeader"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "clearedDate" path "tradeHeader"]
	tradableProduct TradableProduct (1..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "trade"]
		[synonym CME_SubmissionIRS_1_0 value "trade" path "Instrmt->SecXML->FpML"]
	collateral Collateral (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "collateral" path "trade"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "collateral"]
	documentation RelatedAgreement (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "documentation" path "trade"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "documentation"]
	governingLaw GoverningLawEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "governingLaw" path "trade" meta "governingLawScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "governingLaw"]
	party Party (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "party"]
		[synonym CME_SubmissionIRS_1_0 value "party" path "Instrmt->SecXML->FpML"]
	account Account (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "account"]
	partyRole PartyRole (0..*) 
	calculationAgent CalculationAgent (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgent" path "trade", "calculationAgent" path "contract"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAgent" path "trade->swaption", "calculationAgent" path "contract->swaption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "trade"]
	partyContractInformation PartyContractInformation (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "partyTradeInformation" path "trade->tradeHeader"]
		[synonym CME_ClearedConfirm_1_17 value "partyTradeInformation" path "trade->tradeHeader"]
	closedState ClosedState (0..1) 
		[synonym Workflow_Event value "closedState" path "trade"]
	
	condition DeliverableObligationsPhysicalSettlementMatrix: 
		if ( documentation -> documentationIdentification -> contractualMatrix -> matrixType <> MatrixTypeEnum -> CreditDerivativesPhysicalSettlementMatrix
			or documentation -> documentationIdentification -> contractualMatrix -> matrixType is absent)
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> notSubordinated
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> specifiedCurrency
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> notSovereignLender
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> notDomesticCurrency
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> notDomesticLaw
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> notContingent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> notDomesticIssuance
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> assignableLoan
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> consentRequiredLoan
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> transferable
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> maximumMaturity
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> notBearer
			) exists
			and ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> fullFaithAndCreditObLiability
			or tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> generalFundObligationLiability
			or tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> revenueObligationLiability
			) exists

	condition ObligationsPhysicalSettlementMatrix: 
		if ( documentation -> documentationIdentification -> contractualMatrix -> matrixType <> MatrixTypeEnum -> CreditDerivativesPhysicalSettlementMatrix
			or documentation -> documentationIdentification -> contractualMatrix -> matrixType is absent)
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> notSubordinated
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> notSovereignLender
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> notDomesticLaw
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> notDomesticIssuance
			) exists
			and (
			tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> fullFaithAndCreditObLiability
			or tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> generalFundObligationLiability
			or tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> revenueObligationLiability
			) exists

	condition CreditEventsPhysicalSettlementMatrix: 
		if ( documentation -> documentationIdentification -> contractualMatrix -> matrixType <> MatrixTypeEnum -> CreditDerivativesPhysicalSettlementMatrix
			or documentation -> documentationIdentification -> contractualMatrix -> matrixType is absent )
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> bankruptcy
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> obligationDefault
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> obligationAcceleration
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> repudiationMoratorium
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> governmentalIntervention
			) exists

	condition RestructuringPhysicalSettlementMatrix: 
		if ( documentation -> documentationIdentification -> contractualMatrix -> matrixType <> MatrixTypeEnum -> CreditDerivativesPhysicalSettlementMatrix
			or documentation -> documentationIdentification -> contractualMatrix -> matrixType is absent )
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> restructuring exists
		then tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> restructuring -> multipleHolderObligation exists

	/*
	 * TODO - Confirm the set of Contractual Terms Supplements that qualify mortgage products
	 */
	condition AdditionalFixedPaymentsMortgages: 
		if ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation -> referenceObligation -> mortgageBackedSecurity exists
			or documentation -> documentationIdentification -> contractualTermsSupplement -> contractualTermsSupplementType = ContractualSupplementEnum -> CDSonMBS)
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents -> additionalFixedPayments -> interestShortfallReimbursement
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents -> additionalFixedPayments -> principalShortfallReimbursement
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents -> additionalFixedPayments -> writedownReimbursement
			) exists

	condition FloatingAmountEventsMortgages: 
		if ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation -> referenceObligation -> mortgageBackedSecurity exists
			or documentation -> documentationIdentification -> contractualTermsSupplement -> contractualTermsSupplementType = ContractualSupplementEnum -> CDSonMBS)
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents -> failureToPayPrincipal
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents -> writedown
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> floatingAmountEvents -> impliedWritedown
			) exists

	condition CreditEventsMortgages: 
		if ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation -> referenceObligation -> mortgageBackedSecurity exists
			or documentation -> documentationIdentification -> contractualTermsSupplement -> contractualTermsSupplementType = ContractualSupplementEnum -> CDSonMBS)
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> failureToPayPrincipal
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> failureToPayInterest
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> distressedRatingsDowngrade
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> maturityExtension
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> writedown
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> impliedWritedown
			) exists

	condition HedgingParty: 
		if partyRole -> role = PartyRoleEnum -> HedgingParty
		then partyRole -> role count <= 2

	condition DeterminingParty: 
		if partyRole -> role = PartyRoleEnum -> DeterminingParty
		then partyRole -> role count <= 2

	condition BarrierDerterminationAgent: 
		if partyRole -> role = PartyRoleEnum -> BarrierDeterminationAgent
		then partyRole -> role count <= 1

	condition ClearedDate: 
		if clearedDate exists
		then clearedDate >= tradeDate -> date

	condition ContractualProductExists:
		tradableProduct -> product -> contractualProduct only exists

	condition FpML_cd_1: 
		if tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
		then tradeDate -> date < tradableProduct -> product -> contractualProduct -> economicTerms -> effectiveDate -> adjustableDate -> unadjustedDate
			or tradeDate -> date < tradableProduct -> product -> contractualProduct -> economicTerms -> effectiveDate -> adjustableDate -> adjustedDate

	condition FpML_cd_7: 
		if ( documentation -> documentationIdentification -> masterConfirmation and documentation -> documentationIdentification -> contractualMatrix ) is absent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
		then tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> calculationPeriodDates -> effectiveDate -> adjustableDate -> dateAdjustments exists
			or tradeDate -> date < tradableProduct -> product -> contractualProduct -> economicTerms -> effectiveDate -> adjustableDate -> adjustedDate

	condition FpML_cd_8: 
		if ( documentation -> documentationIdentification -> masterConfirmation and documentation -> documentationIdentification -> contractualMatrix ) is absent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
		then tradableProduct -> product -> contractualProduct -> economicTerms -> terminationDate -> adjustableDate -> dateAdjustments exists

	condition FpML_cd_11: 
		if ( documentation -> documentationIdentification -> masterConfirmation and documentation -> documentationIdentification -> contractualMatrix ) is absent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
			and documentation -> documentationIdentification -> contractualDefinitions = ContractualDefinitionsEnum -> ISDA2003Credit
		then tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation -> allGuarantees exists

	condition FpML_cd_19: 
		if documentation -> documentationIdentification -> contractualDefinitions = ContractualDefinitionsEnum -> ISDA1999Credit
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> creditEventNotice -> businessCenter
		and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> restructuring -> multipleHolderObligation
		and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> restructuring -> multipleCreditEventNotices
		and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation -> allGuarantees
		and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation
		and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> substitution
		and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> modifiedEquityDelivery )
	is absent

	condition FpML_cd_20: 
		if documentation -> documentationIdentification -> contractualDefinitions = ContractualDefinitionsEnum -> ISDA2003Credit
		then tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations -> notContingent is absent

	condition FpML_cd_23: 
		if ( documentation -> documentationIdentification -> masterConfirmation and documentation -> documentationIdentification -> contractualMatrix ) is absent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> cashSettlementTerms or tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms) exists

	condition FpML_cd_24: 
		if ( documentation -> documentationIdentification -> masterConfirmation and documentation -> documentationIdentification -> contractualMatrix ) is absent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> creditEvents -> creditEventNotice
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> obligations
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout ->generalTerms -> referenceInformation -> referencePrice
			) exists

	condition FpML_cd_25: 
		if ( documentation -> documentationIdentification -> masterConfirmation and documentation -> documentationIdentification -> contractualMatrix ) is absent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms exists
		then ( tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> settlementCurrency
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> physicalSettlementPeriod
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> escrow
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> physicalSettlementTerms -> deliverableObligations -> accruedInterest
			) exists

	condition FpML_cd_32: 
		if ( documentation -> documentationIdentification -> masterConfirmation and documentation -> documentationIdentification -> contractualMatrix ) is absent
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> referenceInformation exists
			and tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> payoutQuantity -> assetIdentifier -> currency exists
			and tradableProduct -> quantityNotation -> quantity -> amount exists
		then tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> dayCountFraction exists


type ContractualProduct: 

	productIdentification ProductIdentification (0..1) 
	productTaxonomy ProductTaxonomy (0..*) 
	economicTerms EconomicTerms (1..1) 


type FixedRateSpecification extends RateSpecificationBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id" path "fixedRate"]
	
	rateSchedule Schedule (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedRateSchedule"]
	
	condition CurrencyAssetIdentifier: 
		assetIdentifier -> currency only exists


type QuantityMultiplier: 

	fxLinkedNotionalSchedule FxLinkedNotionalSchedule (0..1) 
	multiplierValue number (0..1)
	condition: one-of


type ResolvablePayoutQuantity: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]
	[synonym FpML_5_10 meta "id" path "notionalAmount"]
	[synonym FpML_5_10 meta "id" path "notionalStepSchedule"]

	resolvedQuantity NonNegativeQuantity (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "ignore"]
	quantitySchedule NonNegativeQuantitySchedule (0..1) 
	assetIdentifier AssetIdentifier (0..1) 
		// For Swap Stream:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalAmount", "notionalStepSchedule"]
		// For FRA, CDS Single Fee, Repo, and Bond Option:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "currency"]
		// For CDS:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount"]
		// For FX:
		[synonym FpML_5_10 value "paymentAmount"]
	quantityReference ResolvablePayoutQuantity (0..1) 
		[metadata reference]
		[synonym FpML_5_10 value "relativeNotionalAmount" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "constantNotionalScheduleReference" meta "href"]
		// For CDS Option, CDX Index Option, Bond Option, Swaption:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalReference" meta "href"]
	quantityMultiplier QuantityMultiplier (0..1) 
	reset boolean (0..1) 
		[synonym FpML_5_10 value "notionalReset"]
	futureValueNotional FutureValueAmount (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "futureValueNotional"]

	condition Choice: 
		optional choice assetIdentifier, quantityReference

	condition QuantityMultiplier: 
		if quantityMultiplier exists
		then ResolvablePayoutQuantity -> quantityReference -> reference exists

	condition ResolvedQuantity: 
		if ResolvablePayoutQuantity -> quantityReference -> reference is absent and assetIdentifier is absent
		then resolvedQuantity -> amount exists


type CrossCurrencyTerms:

	principalExchanges PrincipalExchanges (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "principalExchanges"]
	settlementProvision SettlementProvision (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementProvision"]


type CreditDefaultPayout: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	generalTerms GeneralTerms (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "generalTerms"]
	protectionTerms ProtectionTerms (1..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "protectionTerms"]
	cashSettlementTerms CashSettlementTerms (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementTerms"]
	physicalSettlementTerms PhysicalSettlementTerms (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "physicalSettlementTerms"]
	transactedPrice TransactedPrice (0..1) 

	condition FpML_cd_12: 
		if generalTerms -> referenceInformation -> referencePrice exists
		then generalTerms -> referenceInformation -> referencePrice >= 0

	condition FpML_cd_13: 
		if protectionTerms -> creditEvents -> creditEventNotice -> notifyingParty -> buyerPartyReference -> reference exists
		then protectionTerms -> creditEvents -> creditEventNotice -> notifyingParty -> buyerPartyReference -> reference = generalTerms -> buyerSeller -> buyerPartyReference -> reference

	condition FpML_cd_14: 
		if protectionTerms -> creditEvents -> creditEventNotice -> notifyingParty -> sellerPartyReference -> reference exists
		then protectionTerms -> creditEvents -> creditEventNotice -> notifyingParty -> sellerPartyReference -> reference = generalTerms -> buyerSeller -> sellerPartyReference -> reference

	condition Choice: 
		optional choice cashSettlementTerms, physicalSettlementTerms


type EconomicTerms: 
	effectiveDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "effectiveDate" path "generalTerms"]
	terminationDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "scheduledTerminationDate" path "generalTerms"]
	dateAdjustments BusinessDayAdjustments (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateAdjustments" path "generalTerms"]
	payout Payout (1..1) 
	earlyTerminationProvision EarlyTerminationProvision (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "earlyTerminationProvision"]
	optionProvision OptionProvision (0..1) 
	extraordinaryEvents ExtraordinaryEvents (0..1) 
		[synonym FpML_5_10 value "extraordinaryEvents"]

	condition ExtraordinaryEvents: 
		if extraordinaryEvents exists
		then payout -> equityPayout exists

	condition FpML_cd_26_28: 
		if payout -> creditDefaultPayout exists
			and payout -> cashflow exists
			and effectiveDate exists
			and payout -> cashflow -> cashflowDate -> unadjustedDate exists
			and payout -> cashflow -> cashflowDate -> relativeDate is absent
		then payout -> cashflow -> cashflowDate -> unadjustedDate > effectiveDate -> adjustableDate -> unadjustedDate
			or payout -> cashflow -> cashflowDate -> adjustedDate > effectiveDate -> adjustableDate -> adjustedDate
			or payout -> cashflow -> cashflowDate -> relativeDate -> adjustedDate > effectiveDate -> relativeDate -> adjustedDate

	condition FpML_cd_27: 
		if payout -> creditDefaultPayout exists
			and payout -> cashflow exists
			and terminationDate exists
			and payout -> cashflow -> cashflowDate exists
		then payout -> cashflow -> cashflowDate -> unadjustedDate < terminationDate -> adjustableDate -> unadjustedDate
			or payout -> cashflow -> cashflowDate -> adjustedDate < terminationDate -> adjustableDate -> adjustedDate
			or payout -> cashflow -> cashflowDate -> relativeDate -> adjustedDate < terminationDate -> adjustableDate -> adjustedDate

	condition FpML_cd_30: 
		if ( payout -> interestRatePayout -> paymentDates -> lastPaymentDate -> lastRegularPaymentDate
			and terminationDate) exists
		then payout -> interestRatePayout -> paymentDates -> lastPaymentDate -> lastRegularPaymentDate < terminationDate -> adjustableDate -> unadjustedDate


// FIXME Object compare: effectiveDate > terminationDate
//	condition CalculationPeriodDates_effectiveDate_terminationDate: 
//		if effectiveDate exists
//		and terminationDate exists
//		then effectiveDate > terminationDate
type EquityPayout extends PayoutBase: 
	[metadata key]
	[synonym FpML_5_10 meta "id"]

	payerReceiver PayerReceiver (0..1)
	underlier Underlier (1..1) 
		[synonym FpML_5_10 value "singleUnderlyer" path "underlyer", "basket" path "underlyer"]
	returnType ReturnTypeEnum (1..1) 
		[synonym FpML_5_10 value "returnType" path "return"]
	dividendReturnTerms DividendReturnTerms (0..1) 
		[synonym FpML_5_10 value "dividendConditions" path "return", "singleUnderlyer" path "underlyer"]
	priceReturnTerms PriceReturnTerms (0..1) 
	calculationPeriodDates CalculationPeriodDates (1..1) 
	paymentDates PaymentDates (1..1) 
		[synonym FpML_5_10 value "paymentDates" path "rateOfReturn"]
	settlementTerms SettlementTerms (1..1) 
	rateOfReturn number (0..1) 
	performance number (0..1) 

	condition DividendReturn: 
		if returnType = ReturnTypeEnum -> Price
		then priceReturnTerms exists
			and dividendReturnTerms is absent

	condition PriceReturn: 
		if returnType = ReturnTypeEnum -> Dividend
		then dividendReturnTerms exists
			and priceReturnTerms is absent

	condition TotalReturn: 
		if returnType = ReturnTypeEnum -> Total
		then priceReturnTerms exists
			and dividendReturnTerms exists

	condition SingleUnderlier: 
		if underlier exists
		then (underlier -> underlyingProduct -> security -> equity
			or underlier -> underlyingProduct -> security -> exchangeTradedFund
			or underlier -> underlyingProduct -> security -> mutualFund
			or underlier -> underlyingProduct -> security -> warrant) exists


type Execution: 
	[metadata key]
	executionType ExecutionTypeEnum (1..1) 
		[synonym Workflow_Event value "executionType" path "trade"]
		[synonym CME_SubmissionIRS_1_0 value "VenuTyp"]
	executionVenue LegalEntity (0..1) 
	identifier Identifier (1..*) 
		[synonym FpML_5_10 value "partyTradeIdentifier" path "trade->tradeHeader"]

		[synonym CME_SubmissionIRS_1_0 value "partyTradeIdentifier" path "Instrmt->SecXML->FpML->trade->tradeHeader"]
	tradeDate date (1..1) 
		[metadata id]
		[synonym FpML_5_10 value "tradeDate" path "trade->tradeHeader" meta "id"]
		[synonym CME_SubmissionIRS_1_0 value "tradeDate" path "Instrmt->SecXML->FpML->trade->tradeHeader" meta "id"]
	tradableProduct TradableProduct (1..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "trade"]
		[synonym CME_SubmissionIRS_1_0 value "trade" path "Instrmt->SecXML->FpML"]
	party Party (0..*) 
		[metadata reference]
		[synonym CME_SubmissionIRS_1_0 value "party" path "Instrmt->SecXML->FpML"]
	partyRole PartyRole (0..*) 
		[synonym Workflow_Event value "trade"]
	closedState ClosedState (0..1) 
		[synonym Workflow_Event value "closedState" path "trade"]
	settlementTerms SettlementTerms (0..1) 

	condition ExecutionVenue: 
		if executionType = ExecutionTypeEnum -> Electronic
		then executionVenue exists

	condition SecurityPartyRole: 
		if tradableProduct -> product -> security exists
		then partyRole -> role contains PartyRoleEnum -> ExecutingEntity and partyRole -> role contains PartyRoleEnum -> Counterparty

	condition SecurityPartyRoleBuyerSeller: 
		if tradableProduct -> product -> security exists
		then partyRole -> role contains PartyRoleEnum -> Buyer and partyRole -> role contains PartyRoleEnum -> Seller

	condition SecurityPrice: 
		if tradableProduct -> product -> security exists
		then tradableProduct -> priceNotation -> price exists

	condition SettlementTerms: 
		if tradableProduct -> product -> security exists
		then settlementTerms exists


type GeneralTerms: 

	buyerSeller BuyerSeller (1..1) 
	referenceInformation ReferenceInformation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceInformation"]
	indexReferenceInformation IndexReferenceInformation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "indexReferenceInformation"]
	basketReferenceInformation BasketReferenceInformation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "basketReferenceInformation"]
	additionalTerm string (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "additionalTerm" meta "additionalTermScheme"]
	substitution boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "substitution"]
		[synonym Workflow_Event value "substitution"]
	modifiedEquityDelivery boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "modifiedEquityDelivery"]
		[synonym Workflow_Event value "modifiedEquityDelivery"]

	condition Choice: 
		required choice referenceInformation, indexReferenceInformation, basketReferenceInformation

	condition FpML_cd_41: 
		if indexReferenceInformation -> tranche is absent
		then modifiedEquityDelivery is absent

	condition FpML_cd_42: 
		if basketReferenceInformation is absent
		then substitution is absent

	condition BasketReferenceInformationNameOrId: 
		if basketReferenceInformation exists
		then basketReferenceInformation -> basketName exists
			or basketReferenceInformation -> basketId exists

type InterestRatePayout extends PayoutBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	payerReceiver PayerReceiver (0..1) 
	rateSpecification RateSpecification (1..1) 
	dayCountFraction DayCountFractionEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayCountFraction" path "calculationPeriodAmount->calculation" meta "dayCountFractionScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayCountFraction" path "periodicPayment->fixedAmountCalculation" meta "dayCountFractionScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayCountFraction" path "periodicPayment->floatingAmountCalculation" meta "dayCountFractionScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayCountFraction"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dayCountFraction" path "interestCalculation" meta "dayCountFractionScheme"]
	calculationPeriodDates CalculationPeriodDates (0..1) 
	paymentDates PaymentDates (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDates"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodicPayment"]
		[synonym FpML_5_10 value "interestLegPaymentDates" path "interestLegCalculationPeriodDates"]
	paymentDate AdjustableDate (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDate"]
	paymentDelay boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "paymentDelay"]
	resetDates ResetDates (0..1) 
	discountingMethod DiscountingMethod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "discounting" path "calculationPeriodAmount->calculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "fraDiscounting"]
	compoundingMethod CompoundingMethodEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "compoundingMethod" path "calculationPeriodAmount->calculation"]
	cashflowRepresentation CashflowRepresentation (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashflows"]
	crossCurrencyTerms CrossCurrencyTerms (0..1) 
	stubPeriod StubPeriod (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "stubCalculationPeriodAmount"]
	bondReference BondReference (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bondReference"]
	fixedAmount calculation (0..1) 
	floatingAmount calculation (0..1) 

	condition Choice: 
		optional choice paymentDates, paymentDate

	condition FutureValueNotional: 
		if rateSpecification -> fixedRate is absent
		then payoutQuantity -> futureValueNotional is absent

	condition TerminationDate: 
		if payoutQuantity -> futureValueNotional exists
		then payoutQuantity -> futureValueNotional -> valueDate = calculationPeriodDates -> terminationDate -> adjustableDate -> adjustedDate

	condition FpML_ird_6: 
		if paymentDates -> firstPaymentDate exists
			and calculationPeriodDates -> effectiveDate exists
		then paymentDates -> firstPaymentDate > calculationPeriodDates -> effectiveDate -> adjustableDate -> unadjustedDate

	condition FpML_ird_8: 
		if InterestRatePayout exists
		then payerReceiver -> payerPartyReference <> payerReceiver -> receiverPartyReference
			or payerReceiver -> payerAccountReference <> payerReceiver -> receiverAccountReference

	condition FpML_ird_23: 
		if stubPeriod -> initialStub exists
		then calculationPeriodDates -> firstRegularPeriodStartDate exists

	condition FpML_ird_24: 
		if stubPeriod -> finalStub exists
		then calculationPeriodDates -> lastRegularPeriodEndDate exists

	condition InitialStubFinalStub: 
		if stubPeriod exists
		then stubPeriod -> initialStub exists
			or stubPeriod -> finalStub exists

	condition SettlementProvisionSettlementCurrency: 
		if crossCurrencyTerms -> settlementProvision -> nonDeliverableSettlement exists
		then crossCurrencyTerms -> settlementProvision -> settlementCurrency <> payoutQuantity -> assetIdentifier -> currency
			or crossCurrencyTerms -> settlementProvision -> settlementCurrency <> payoutQuantity -> quantityMultiplier -> fxLinkedNotionalSchedule -> varyingNotionalCurrency

	/*
	 * TODO - Need for an associated logic that will parse the respective legs of the swap, as this is not made explicit at present as part of the syntax
	 */
	condition FpML_ird_7_1: 
		if paymentDates -> paymentFrequency -> period = calculationPeriodDates -> calculationPeriodFrequency -> period
			and paymentDates -> paymentFrequency -> periodMultiplier = calculationPeriodDates -> calculationPeriodFrequency -> periodMultiplier
		then ( compoundingMethod is absent or compoundingMethod = CompoundingMethodEnum -> None)

	condition FpML_ird_7_2: 
		if (( paymentDates -> paymentFrequency -> period and calculationPeriodDates -> calculationPeriodFrequency -> period) exists
			and paymentDates -> paymentFrequency -> period <> calculationPeriodDates -> calculationPeriodFrequency -> period)
			or (( paymentDates -> paymentFrequency -> periodMultiplier and calculationPeriodDates -> calculationPeriodFrequency -> periodMultiplier) exists
			and paymentDates -> paymentFrequency -> periodMultiplier <> calculationPeriodDates -> calculationPeriodFrequency -> periodMultiplier)
		then compoundingMethod exists

	condition FpML_ird_9: 
		if compoundingMethod exists
		then resetDates exists

	condition FpML_ird_29: 
		if compoundingMethod exists
		then rateSpecification -> fixedRate is absent

	condition CalculationPeriodDatesFirstCompoundingPeriodEndDate: 
		if compoundingMethod is absent
			or compoundingMethod = CompoundingMethodEnum -> None
		then calculationPeriodDates -> firstCompoundingPeriodEndDate is absent


type OptionExercise: 

	optionStyle OptionStyle (1..1) 
	strike OptionStrike (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "strike"]
	exerciseProcedure ExerciseProcedure (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "exerciseProcedure"]
	settlement OptionSettlement (0..1) 


type OptionPayout extends PayoutBase: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]

	buyerSeller BuyerSeller (1..1)
	optionType OptionTypeEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "optionType"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 set to OptionTypeEnum -> Straddle when "swaptionStraddle" = True]
	feature OptionFeature (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "feature"]
	denomination OptionDenomination (0..1) 
	exerciseTerms OptionExercise (1..1) 
	underlier Underlier (1..1) 
		[synonym CME_ClearedConfirm_1_17 hint "swap"]

type SecurityLeg: 
	[metadata key]
	[synonym FpML_5_10 meta "id"]

	buyerSeller BuyerSeller (1..1) 
	settlementDate AdjustableOrRelativeDate (1..1) 
		[synonym FpML_5_10 value "settlementDate"]
	settlementAmount Money (0..1) 
		[synonym FpML_5_10 value "settlementAmount"]
	settlementCurrency string (0..1) 
		[synonym FpML_5_10 value "settlementCurrency"]
	fxRate ExchangeRate (0..1) 
	deliveryDate AdjustableOrRelativeDate (0..1) 
		[synonym FpML_5_10 value "deliveryDate"]
	deliveryMethod DeliveryMethodEnum (1..1) 
		[synonym FpML_5_10 value "deliveryMethod"]
	condition Choice:
		required choice settlementAmount, settlementCurrency


type SecurityValuation: 

	securityValuationModel SecurityValuationModel (1..1) 
		[synonym FpML_5_10 value "collateral"]
	underlier Security (1..1) 


type SecurityValuationModel: 

	bondValuationModel BondValuationModel (0..1) 
	unitContractValuationModel UnitContractValuationModel (0..1) 
	condition: one-of

type BondValuationModel: 

	nominalAmount Money (1..1) 
		[synonym FpML_5_10 value "nominalAmount"]
	bondPriceAndYieldModel BondPriceAndYieldModel (1..1) 
	accrualsAmount Money (0..1) 


type BondPriceAndYieldModel: 

	cleanOrDirtyPrice CleanOrDirtyPrice (0..1) 
	relativePrice RelativePrice (0..1) 
	yieldToMaturity number (0..1) 
	inflationFactor number (0..1) 
	allInPrice number (0..1) 


type CleanOrDirtyPrice: 

	cleanPrice CleanPrice (0..1) 
	dirtyPrice number (0..1) 
		[synonym FpML_5_10 value "dirtyPrice"]


type CleanPrice: 

	cleanPrice number (1..1) 
		[synonym FpML_5_10 value "cleanPrice"]
	accruals number (0..1) 
		[synonym FpML_5_10 value "accruals"]
	dirtyPrice calculation (0..1) 


type RelativePrice: 

	spread number (1..1) 
	bondEquityModel BondEquityModel (1..*) 


type BondEquityModel: 

	bondchoiceModel BondChoiceModel (0..1) 
	equity Equity (0..1) 
	condition: one-of

type BondChoiceModel: 
	bond Bond (0..1)
	convertibleBond ConvertibleBond (0..1)
	condition: one-of

type UnitContractValuationModel: 

	numberOfUnits Quantity (1..1) 
	unitPrice Money (1..1) 


type SecurityPayout: 
	[metadata key]
	securityLeg SecurityLeg (1..*) 
		[synonym FpML_5_10 value "nearLeg"]
		[synonym FpML_5_10 value "farLeg"]
	// TO DO: triParty, collateral substitutions, callDate and callingParty for an evergreen transaction (or should this be part of an Option Payout?)
	initialMargin InitialMargin (0..1) 
		[synonym FpML_5_10 value "initialMargin"]
	repoDuration RepoDurationEnum (0..1) 
		[synonym FpML_5_10 value "duration"]
	securityValuation SecurityValuation (1..*) 
		[synonym FpML_5_10 value "nearLeg", "bond"]


type InitialMargin: 

	marginType MarginTypeEnum (1..1) 
		[synonym FpML_5_10 value "marginType"]
	margin InitialMarginCalculation (1..*) 
		[synonym FpML_5_10 value "margin"]
	marginThreshold Money (0..1) 
		[synonym FpML_5_10 value "marginThreshold"]
	minimumTransferAmount Money (0..1) 
		[synonym FpML_5_10 value "minimumTransferAmount"]

	condition MarginThreshold:
		if marginThreshold exists
		then marginThreshold -> amount > 0

	condition MinimumTransferAmount:
		if minimumTransferAmount exists
		then minimumTransferAmount -> amount > 0

type InitialMarginCalculation: 

	marginRatio number (0..1) 
		[synonym FpML_5_10 value "marginRatio"]
	marginRatioThreshold number (0..2) 
		[synonym FpML_5_10 value "marginRatioThreshold"]
	haircut number (0..1) 
		[synonym FpML_5_10 value "haircut"]
	haircutThreshold number (0..2) 
		[synonym FpML_5_10 value "haircutThreshold"]

	condition Choice:
		required choice marginRatio, haircut

/*
 * TO DO ON SECURITY PAYOUT:

 * Move all implementation of SecurityPayout to a dedicated file

 * type rules to add for security payout:
 * - underliers are the same in each collateral leg
 * - number of collateral legs (2)?
 * - one leg is a buyer and the other is a seller
 * - the underlying security reference in SecurityValuation matches either the Bond or Equity reference in the further SecurityValuationModel

 * Have appropriate synonyms vs the repo model in FpML
 */
type PayoutBase: 

	payoutQuantity ResolvablePayoutQuantity (1..1) 
		// For Equity Swap:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notional"]
		[synonym FpML_5_10 value "rateOfReturn"]
		// For Swap Stream:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalSchedule" path "calculationPeriodAmount->calculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxLinkedNotionalSchedule" path "calculationPeriodAmount->calculation"]
		// For CDS:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount" path "periodicPayment->fixedAmountCalculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount" path "periodicPayment->floatingAmountCalculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmount"]
		// For FX:
		[synonym FpML_5_10 hint "paymentAmount"]
		// For Repo:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "settlementAmount" path "nearLeg"]
		// For BRL CDI swaps:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculation" path "calculationPeriodAmount"]
		// For CDS Option:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "notionalReference"]
		// For Bond Option:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalAmount"]

type Payout: 

	interestRatePayout InterestRatePayout (0..*) 
		// For Swap Stream
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "swapStream"]
		// For CapFloor:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "capFloorStream"]
		// For FRA:
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "fra" mapper "FRAIRPSplitter"]
		// For CDS:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "generalTerms", "feeLeg" set when "feeLeg->periodicPayment" exists]
		// For Equity Swap
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "interestLeg"]
		// For Repo:
		[synonym FpML_5_10 value "repo"]
	creditDefaultPayout CreditDefaultPayout (0..1) 
	equityPayout EquityPayout (0..*) 
		[synonym FpML_5_10 value "returnLeg"]
		[synonym CME_SubmissionIRS_1_0 value "ignore"]
	optionPayout OptionPayout (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "swaption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditDefaultSwapOption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "bondOption"]
	forwardPayout ForwardPayout (0..*)
		[synonym FpML_5_10 value "fxSingleLeg"]
		[synonym CME_SubmissionIRS_1_0 value "ignore"]
	securityPayout SecurityPayout (0..*) 
		[synonym FpML_5_10 value "repo"]
		[synonym CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "ignore"]
	cashflow Cashflow (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "additionalPayment"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialPayment" path "feeLeg"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "singlePayment" path "feeLeg"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "singlePayment"]
		// TODO - The below 2 attributes are not properly mapped.  This needs to be addressed as part of this Trello card https://trello.com/c/488uoZcS
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "paymentDelay"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "payerReceiver"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "premium" path "swaption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "premium" path "bondOption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "premium" path "creditDefaultSwapOption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "otherPartyPayment"]

	condition LastRegularPaymentDate: 
		if interestRatePayout -> paymentDates -> lastPaymentDate -> lastRegularPaymentDate exists
			and interestRatePayout -> stubPeriod -> finalStub exists
		then interestRatePayout count = 2

//	condition Payout_quantity: 
//	 	if equityPayout exists
//	 		or interestRatePayout exists
//	 	then ( equityPayout -> payoutQuantity -> quantitySchedule exists
//	 			and equityPayout -> payoutQuantity -> quantitySchedule -> amount = 1.0 )
//	  		or ( interestRatePayout -> payoutQuantity -> quantitySchedule exists
//	 and interestRatePayout -> payoutQuantity -> quantitySchedule -> amount = 1.0 )

	condition PayRelativeTo: 
		if interestRatePayout count = 2
			and interestRatePayout -> paymentDates exists
		then interestRatePayout -> paymentDates -> payRelativeTo exists

	condition PaymentDatesAdjustments: 
		if interestRatePayout count = 2
			and interestRatePayout -> paymentDates exists
		then interestRatePayout -> paymentDates -> paymentDatesAdjustments exists

	condition PaymentFrequency: 
		if interestRatePayout count = 2
			and interestRatePayout -> paymentDates exists
		then interestRatePayout -> paymentDates -> paymentFrequency exists

	condition Quantity: 
		if interestRatePayout exists
			and creditDefaultPayout is absent
			and optionPayout is absent
		then interestRatePayout -> payoutQuantity exists

	condition DayCountFraction: 
		if interestRatePayout count = 2
		then interestRatePayout -> dayCountFraction exists

	condition PaymentDates: 
		if interestRatePayout count = 2
		then interestRatePayout -> dayCountFraction exists

	condition MarketPrice: 
		if creditDefaultPayout -> generalTerms -> indexReferenceInformation is absent
		then creditDefaultPayout -> transactedPrice -> marketFixedRate is absent
			and creditDefaultPayout -> transactedPrice -> marketPrice is absent

	condition NotionalResetOnEquityPayout: 
		interestRatePayout -> payoutQuantity -> reset is absent
			and creditDefaultPayout -> protectionTerms -> payoutQuantity -> reset is absent
			and optionPayout -> payoutQuantity -> reset is absent
			and cashflow -> payoutQuantity -> reset is absent
	
	condition NotionalResetInterestRatePayoutExists: 
 		if equityPayout -> payoutQuantity -> reset = True 
 		then interestRatePayout exists
	

type Product: 
	[metadata key]

	contractualProduct ContractualProduct (0..1)
		// For Equity Swap:
		[synonym FpML_5_10 value "returnSwap", "equitySwapTransactionSupplement"]
		// For Swap Stream:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "swap"]
		// For Swaption:
		[synonym FpML_5_10 value "swaption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "swaption"]
		// For CapFloor:
		[synonym FpML_5_10 value "capFloor"]
		// For FRA:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "fra"]
		// For Bond Options:
		[synonym FpML_5_10 hint "bondOption"]
		// For CDS:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditDefaultSwap"]
		// For CDS Option
		[synonym FpML_5_10 hint "creditDefaultSwapOption"]
		// For FX:
		[synonym FpML_5_10 hint "fxSingleLeg"]
		// For Repo:
		[synonym FpML_5_10 hint "repo"]
		// To handle the case when addition payments are part of the trade - TODO: should be part of the event,  not the contract
		[synonym FpML_5_10 hint "otherPartyPayment"]
	index Index (0..1)
		[synonym FpML_5_10 value "index"]
	loan Loan (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "loan"]
	foreignExchange ForeignExchange (0..1)
	security Security (0..1)
	condition: one-of

type TradableProduct: 
	product Product (1..1) 
	quantityNotation QuantityNotation (1..*) 
		// For Equity Swap:
		[synonym FpML_5_10 value "notional" path "returnSwap->returnLeg", "notional" path "equitySwapTransactionSupplement->returnLeg"]
		[synonym FpML_5_10 value "underlyer" path "returnSwap->returnLeg", "underlyer" path "equitySwapTransactionSupplement->returnLeg"]
		// For Swap Stream, incl. Swaption and CapFloor:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalSchedule" path "swap->swapStream->calculationPeriodAmount->calculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalSchedule" path "capFloor->capFloorStream->calculationPeriodAmount->calculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalSchedule" path "swaption->swap->swapStream->calculationPeriodAmount->calculation"]
		// For BRL CDI swaps
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "futureValueNotional" path "swap->swapStream->calculationPeriodAmount->calculation"]
		// For FRA:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fra"]
		// For CDS
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "protectionTerms" path "creditDefaultSwap"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmountCalculation" path "creditDefaultSwap->feeLeg->periodicPayment"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingAmountCalculation" path "creditDefaultSwap->feeLeg->periodicPayment"]
		// For CD Swaption
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "protectionTerms" path "creditDefaultSwapOption->creditDefaultSwap"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmountCalculation" path "creditDefaultSwapOption->creditDefaultSwap->feeLeg->periodicPayment"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingAmountCalculation" path "creditDefaultSwapOption->creditDefaultSwap->feeLeg->periodicPayment"]
		// For FX:
		[synonym FpML_5_10 value "exchangedCurrency1" path "fxSingleLeg"]
		[synonym FpML_5_10 value "exchangedCurrency2" path "fxSingleLeg"]
		[synonym Workflow_Event value "cashflow"]
		// For Repo:
		[synonym FpML_5_10 value "nearLeg" path "repo"]
		// For Bond Option:
		[synonym FpML_5_10 value "notionalAmount" path "bondOption"]
	priceNotation PriceNotation (1..*) 
		// For Swap Streams:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "swapStream" path "swap"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "additionalPayment" path "swap"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "capFloorStream" path "capFloor"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "otherPartyPayment"]
		// For Equity Swaps
		[synonym FpML_5_10 value "returnLeg" path "returnSwap"]
		[synonym FpML_5_10 value "returnLeg" path "equitySwapTransactionSupplement"]
		[synonym FpML_5_10 value "interestLeg" path "returnSwap"]
		// For Swaptions:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "premium" path "swaption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "swapStream" path "swaption->swap"]
		// For CD Index and CDS
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialPayment" path "creditDefaultSwap->feeLeg"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "singlePayment" path "creditDefaultSwap->feeLeg"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodicPayment" path "creditDefaultSwap->feeLeg"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "periodicPayment" path "creditDefaultSwapOption->creditDefaultSwap->feeLeg"]
		// For FRA:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fra"]
		// For CD Swaption:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "premium" path "creditDefaultSwapOption"]
		// For Bond Options:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "premium" path "bondOption"]
		// For FX
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fxSingleLeg"]
		// For Repo:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "repo"]
	// TBD: make quantity and price notation optional, and only validate that it exists as part of an execution / contract?
	// TBD: positioning of future DateNotation (Effective Date, Termination Date) - only applicable to contractual products. In EconomicTerms?
	// TBD: positioning of future PartyNotation - as part of this type, or higher-up in the Execution / Contract?
	// The latter would align the concept of TradeableProduct across securities and contractual products (securities do not require any party specification to be "tradeable")

	adjustment NotionalAdjustmentEnum (0..1) 
		[synonym FpML_5_10 value "notionalAdjustments" path "returnSwap->returnLeg", "notionalAdjustments" path "equitySwapTransactionSupplement->returnLeg"]

	condition PriceQuantityTriangulation:
		PriceQuantityTriangulation( priceNotation, quantityNotation ) = True
		
	condition NotionalAdjustment: 
 		if adjustment exists
		then product -> contractualProduct -> economicTerms -> payout -> equityPayout exists
	
	condition InterestRatePayoutQuantityResolvable:
		if product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> payoutQuantity -> assetIdentifier exists
		then quantityNotation -> assetIdentifier exists
			and quantityNotation -> assetIdentifier contains product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> payoutQuantity -> assetIdentifier

	condition EquityPayoutQuantityResolvable:
		if product -> contractualProduct -> economicTerms -> payout -> equityPayout -> payoutQuantity -> assetIdentifier exists
		then quantityNotation -> assetIdentifier exists
			and quantityNotation -> assetIdentifier contains product -> contractualProduct -> economicTerms -> payout -> equityPayout -> payoutQuantity -> assetIdentifier

	condition CreditDefaultPayoutQuantityResolvable:
		if product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> payoutQuantity -> assetIdentifier exists
		then quantityNotation -> assetIdentifier exists
			and quantityNotation -> assetIdentifier contains product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> protectionTerms -> payoutQuantity -> assetIdentifier

	condition CashflowQuantityResolvable:
		if product -> contractualProduct -> economicTerms -> payout -> cashflow -> payoutQuantity -> assetIdentifier -> currency exists
		then 
			( quantityNotation -> assetIdentifier exists 
				and quantityNotation -> assetIdentifier contains product -> contractualProduct -> economicTerms -> payout -> cashflow -> payoutQuantity -> assetIdentifier )
			or 
			( priceNotation -> price -> cashPrice -> cashflowAmount -> currency exists 
				and product -> contractualProduct -> economicTerms -> payout -> cashflow -> payoutQuantity -> assetIdentifier -> currency = priceNotation -> price -> cashPrice -> cashflowAmount -> currency )

	condition SecurityQuantityResolvable:
		if product -> security -> bond -> productIdentifier exists
		then quantityNotation -> assetIdentifier -> productIdentifier exists
			and quantityNotation -> assetIdentifier -> productIdentifier contains product -> security -> bond -> productIdentifier

	condition FpML_ird_25_FixedRate: 
		if priceNotation -> price -> fixedInterestRate -> rate exists and product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> fixedRate -> rateSchedule -> step is absent
		then priceNotation -> price -> fixedInterestRate -> rate <> 0.0

	condition FpML_ird_25_FloatingRateSpread: 
		if priceNotation -> price -> floatingInterestRate -> spread exists and product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> spreadSchedule -> step is absent
		then priceNotation -> price -> floatingInterestRate -> spread <> 0.0

	condition FpML_ird_25_FloatingRateCapRate: 
		if priceNotation -> price -> floatingInterestRate -> capRate exists and product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> capRateSchedule -> step is absent
		then priceNotation -> price -> floatingInterestRate -> capRate <> 0.0

	condition FpML_ird_25_FloatingRateFloorRate: 
		if priceNotation -> price -> floatingInterestRate -> floorRate exists and product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> floorRateSchedule -> step is absent
		then priceNotation -> price -> floatingInterestRate -> floorRate <> 0.0


type ProductIdentification: 

	productQualifier productType (0..1) 
	primaryAssetdata AssetClassEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "primaryAssetClass" meta "assetClassScheme"]
	secondaryAssetdata AssetClassEnum (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "secondaryAssetClass" meta "assetClassScheme"]
	productType string (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "productType" meta "productTypeScheme"]

	productId string (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "productId" meta "productIdScheme"]


type QuantityNotation: 

	quantity NonNegativeQuantity (1..1) 
		// For Swap Streams:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalStepSchedule"]
		// For Swap Streams, Equity Swaps and Bond Options:
		[synonym FpML_5_10 value "notionalAmount"]
		// For BRL CDI swaps:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "amount"]
		// For Equity Swaps:
		[synonym FpML_5_10 value "singleUnderlyer"]
		// For FRA:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notional"]
		// For CDS:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount"]
		// For FX:
		[synonym FpML_5_10 value "paymentAmount"]
		// For Repo:
		[synonym FpML_5_10 value "settlementAmount"]
	assetIdentifier AssetIdentifier (1..1) 
		// For Swap Stream:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalStepSchedule"]
		// For Swap Streams, Equity Swaps and Bond Options:
		[synonym FpML_5_10 value "notionalAmount"]
		// For BRL CDI swaps:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "currency"]
		// For Equity Swaps
		[synonym FpML_5_10 value "singleUnderlyer" set when "singleUnderlyer->openUnits" exists]
		// For FRA and CDS single fee:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notional"]
		// For CDS:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount"]
		// For FX:
		[synonym FpML_5_10 value "paymentAmount"]
		// For Repo:
		[synonym FpML_5_10 value "settlementAmount"]

	condition CurrencyAmount: 
		if assetIdentifier -> currency exists then quantity -> unit is absent


type PriceNotation: 

	price Price (1..1) 
	assetIdentifier AssetIdentifier (0..1) 
		// For fixedRate:
		// For Swap Streams etc
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalStepSchedule" path "calculationPeriodAmount->calculation->notionalSchedule" set when "calculationPeriodAmount->calculation->fixedRateSchedule" exists]
		// For Equity Swaps
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "singleUnderlyer" path "underlyer"]
		// For CDS
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount" path "fixedAmountCalculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmount"]
		// For FRA
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notional"]

		// For floatingRate:
		// For Swap Streams etc
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation" path "calculationPeriodAmount->calculation"
			set when "calculationPeriodAmount->calculation->floatingRateCalculation->floatingRate" exists,
			set when "calculationPeriodAmount->calculation->floatingRateCalculation->initialRate" exists,
			set when "calculationPeriodAmount->calculation->floatingRateCalculation->spreadSchedule" exists,
			set when "calculationPeriodAmount->calculation->floatingRateCalculation->capRateSchedule" exists,
			set when "calculationPeriodAmount->calculation->floatingRateCalculation->floorRateSchedule" exists]
		// For Equity Swaps
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation" path "interestCalculation" set when "interestCalculation->floatingRateCalculation->spreadSchedule" exists]
		// For Repo
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation" set when "floatingRateCalculation->spreadSchedule" exists]
		// For CD Index
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingAmountCalculation" set when "floatingAmountCalculation->floatingRate" exists]

	condition CurrencyAssetIdentifier: 
		if price -> fixedInterestRate exists
		then assetIdentifier -> currency only exists

	condition RateOptionAssetIdentifier: 
		if price -> floatingInterestRate exists
		then assetIdentifier -> rateOption only exists


// TODO: Create "RateSpecificationBase" and position "assetIdentifier" as an attribute, then each of the 3 rate specifications below should inherit from it.
// NOTE: floating rates will no longer inherit from "FloatingRateOption", instead the rate option will be contained in "assetIdentifier"
// Then implement data rules to verify that we have the right type of "AssetIdentifier" for a fixed or floating rate
type RateSpecificationBase:
	assetIdentifier AssetIdentifier (0..1)
		// For fixedRate:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notionalStepSchedule" path "notionalSchedule" set when "fixedRateSchedule" exists]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "currency"]
		// For floatingRate:
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "floatingRateIndex"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "indexTenor"]


type RateSpecification: 

	fixedRate FixedRateSpecification (0..1) 
		// For Swap Streams etc
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculation" path "calculationPeriodAmount"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationAmount" path "periodicPayment->fixedAmountCalculation"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fixedAmountCalculation" path "periodicPayment"]
		// For FRA
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notional"]
	floatingRate FloatingRateSpecification (0..1) 
		// For Swap Streams etc
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation" path "calculationPeriodAmount->calculation"]
		// For Equity Swaps
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation" path "interestCalculation"]
		// For Repo
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRateCalculation"]
		// For CD Index
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "floatingRate" path "periodicPayment->floatingAmountCalculation"]
		// For FRA
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "floatingRateIndex"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 hint "indexTenor"]
	inflationRate InflationRateSpecification (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "inflationRateCalculation" path "calculationPeriodAmount->calculation"]
	condition: one-of

type StubPeriod: 
	[synonym FpML_5_10 value "StubCalculationPeriodAmount"]

	calculationPeriodDatesReference CalculationPeriodDates (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "calculationPeriodDatesReference" meta "href"]
	initialStub StubValue (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialStub"]
	finalStub StubValue (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "finalStub"]

/*
 * QUESTION TO CDM GROUP
 * TODO - FpML sample credit trades don't include examples that specify those attributes
 * Would be great if we could confirm the actual usage though sample transactions
 * See Trello card https://trello.com/c/VLtPwoek
 */
type TransactedPrice: 

	marketFixedRate number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "marketFixedRate" path "feeLeg"]
	initialPoints number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialPoints" path "feeLeg"]
	marketPrice number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "marketPrice" path "feeLeg"]
	quotationStyle QuotationStyleEnum (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "quotationStyle" path "feeLeg"]


/************************
 * Portfolio Aggregation *
 ************************/
type Position: 

	product Product (1..1) 
	quantity Quantity (1..1) 
	cashBalance Money (0..1) 
	positionStatus PositionStatusEnum (1..1) 
	contractReference Contract (0..1) 
		[metadata reference]

	condition ContractFormed: 
		if positionStatus = PositionStatusEnum -> Formed
		then contractReference exists

/*
 * 	TODO: implement this extra check based on a comparison function for EconomicTerms
 * 		and product -> contractualProduct -> = contract -> contractualProduct -> EconomicTerms
 */
enum PositionStatusEnum: 
	Executed 
	Formed 
	Settled 
	Cancelled 

type PortfolioState: 
	[metadata key]
	positions Position (0..*) 
	lineage Lineage (1..1) 

	condition Initialisation: 
		if PortfolioState exists and lineage -> portfolioStateReference is absent
		then positions is absent
			and lineage -> eventReference is absent

type AggregationParameters: 

	dateTime zonedDateTime (1..1) 
	totalPosition boolean (0..1) 
	// Just a subset of possible aggregation parameters, for illustration to initiate the build-up of that class
	positionStatus PositionStatusEnum (0..1) 
	party Party (0..*) 
		[metadata reference]
	product Product (0..*) 
	productQualifier productType (0..*) 
	contractReference Contract (0..*) 
		[metadata reference]
	executionReference Execution (0..*) 
		[metadata reference]

// TO DO: add more possible aggregation attributes, and more complex filtering/aggregation rules such as exclusion instead of just inclusion, etc.
// TBD: include the time dimension here to filter relevant events in a given period?
type Portfolio: 

	aggregationParameters AggregationParameters (1..1) 
	portfolioState PortfolioState (1..1) 

// TO ADD: PortfolioState calculation based on EventEffect


import cdm.base.*
import cdm.synonyms.config.*
 
type NotDomesticCurrency: 
	[synonym FpML_5_10 value "NotDomesticCurrency"]
	applicable boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "applicable"]
	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" meta "currencyScheme"]

type Obligations: 
	[synonym FpML_5_10 value "Obligations"]
	category ObligationCategoryEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "category"]
	notSubordinated boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notSubordinated"]
	specifiedCurrency SpecifiedCurrency (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "specifiedCurrency"]
	notSovereignLender boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notSovereignLender"]
	notDomesticCurrency NotDomesticCurrency (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notDomesticCurrency"]
	notDomesticLaw boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notDomesticLaw"]
	listed boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "listed"]
	notDomesticIssuance boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notDomesticIssuance"]
	fullFaithAndCreditObLiability boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "fullFaithAndCreditObLiability"]
	generalFundObligationLiability boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "generalFundObligationLiability"]
	revenueObligationLiability boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "revenueObligationLiability"]
	notContingent boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "notContingent"]
	excluded string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "excluded"]
	othReferenceEntityObligations string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "othReferenceEntityObligations"]
	designatedPriority string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "designatedPriority" meta "lienScheme"]
	cashSettlementOnly boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "cashSettlementOnly"]
	deliveryOfCommitments boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "deliveryOfCommitments"]
	continuity boolean (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "continuity"]

	condition Choice: 
		optional choice fullFaithAndCreditObLiability, generalFundObligationLiability, revenueObligationLiability


type SpecifiedCurrency:
	[synonym FpML_5_10 value "SpecifiedCurrency"]
	applicable boolean (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "applicable"]
	currency string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currency" meta "currencyScheme"]


 

import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.party.*

type Confirmation: 
	identifier Identifier (1..*) 
	party Party (1..*) 
	partyRole PartyRole (1..*) 
	lineage Lineage (0..1) 
	status ConfirmationStatusEnum (1..1)

	condition BothBuyerAndSellerPartyRolesMustExist: 
		if lineage -> executionReference -> tradableProduct -> product -> security exists
		then partyRole -> role contains PartyRoleEnum -> Buyer or partyRole -> role contains PartyRoleEnum -> Seller

enum ConfirmationStatusEnum: 
	Confirmed
	Unconfirmed

type Affirmation: 
	identifier Identifier (1..*) 
	party Party (1..*) 
	partyRole PartyRole (1..*) 
	lineage Lineage (0..1) 
	status AffirmationStatusEnum (1..1)
	condition BothBuyerAndSellerPartyRolesMustExist: 
		if lineage -> executionReference -> tradableProduct -> product -> security exists
		then partyRole -> role contains PartyRoleEnum -> Buyer or partyRole -> role contains PartyRoleEnum -> Seller

enum AffirmationStatusEnum: 
	Affirmed
	Unaffirmed

import cdm.base.*
import cdm.base.staticdata.identifier.*
import cdm.synonyms.config.*

type BuyerSeller: 
	buyerPartyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "buyerPartyReference" meta "href"]
	buyerAccountReference Account (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "buyerAccountReference" meta "href"]
	sellerPartyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "sellerPartyReference" meta "href"]
	sellerAccountReference Account (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "sellerAccountReference" meta "href"]


type PayerReceiver: 
	payerPartyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "payerPartyReference" meta "href"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "buyerPartyReference" maps 2 meta "href"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "buyerPartyReference" path "trade->creditDefaultSwap->generalTerms" maps 2 meta "href"]
		[synonym CME_SubmissionIRS_1_0 value "payerPartyReference" meta "href" mapper "TradeSideToParty"]
		[synonym CME_SubmissionIRS_1_0 value "buyerPartyReference" maps 2 meta "href" mapper "TradeSideToParty"]
	payerAccountReference Account (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "payerAccountReference" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "buyerAccountReference" maps 2 meta "href"]
	receiverPartyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "receiverPartyReference" meta "href"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "sellerPartyReference" maps 2 meta "href"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "sellerPartyReference" path "trade->creditDefaultSwap->generalTerms" maps 2 meta "href"]
		[synonym CME_SubmissionIRS_1_0 value "receiverPartyReference" meta "href" mapper "TradeSideToParty"]
		[synonym CME_SubmissionIRS_1_0 value "sellerPartyReference" maps 2 meta "href" mapper "TradeSideToParty"]
	receiverAccountReference Account (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "receiverAccountReference" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "sellerAccountReference" maps 2 meta "href"]


type ReferenceBank: 
	[synonym FpML_5_10 value "ReferenceBank"]

	referenceBankId string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceBankId" meta "referenceBankIdScheme"]
	referenceBankName string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "referenceBankName"]

type RelatedParty:
	[synonym FpML_5_10 value "RelatedParty"]

	partyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyReference" meta "href"]
	accountReference Account (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accountReference" meta "href"]
	role PartyRoleEnum (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "role"]

type Account: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Account" meta "id"]

	accountNumber string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accountId" meta "accountIdScheme"]
		[synonym ISDA_Create_1_0 value "partyA_cash", "partyA_securities" ]
		[synonym ISDA_Create_1_0 value "partyB_cash", "partyB_securities" ]
		[synonym ISDA_Create_1_0 value "pledged_account_number"]
	accountName string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accountName" meta "accountNameScheme"]
		[synonym ISDA_Create_1_0 value "name"]
	accountType AccountTypeEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accountType" meta "accountTypeScheme"]
	accountBeneficiary Party (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "accountBeneficiary" meta "href"]
	servicingParty Party (0..1)  
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "servicingParty" meta "href"]


type Address: 
	[synonym FpML_5_10 value "Address"]

	street string (1..*) 
		[synonym FpML_5_10 value "streetAddress"]
	city string (1..1) 
		[synonym FpML_5_10 value "city"]
	state string (0..1) 
		[synonym FpML_5_10 value "state"]
	country string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10 value "country" meta "countryScheme"]
	postalCode string (1..1) 
		[synonym FpML_5_10 value "postalCode"]


type BusinessUnit: 
	[metadata key]
	[synonym FpML_5_10 value "BusinessUnit" meta "id"]

	name string (1..1) 
		[synonym FpML_5_10 value "name"]
	identifier Identifier (0..1) 
	contactInformation ContactInformation (0..1) 
		[synonym FpML_5_10 value "contactInfo"]


type ContactInformation: 
	[synonym FpML_5_10 value "ContactInformation"]

	telephone TelephoneNumber (0..*) 
		[synonym FpML_5_10 value "telephone"]
	address Address (0..*) 
		[synonym FpML_5_10 value "address"]
	email string (0..*) 
		[synonym FpML_5_10 value "email"]
	webPage string (0..*) 


type LegalEntity: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id" path "referenceEntity"]

	entityId string (0..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityId" meta "entityIdScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityId" path "referenceEntity" meta "entityIdScheme"]
	name string (1..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyName" meta "entityNameScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityName" meta "entityNameScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityName" path "referenceEntity" meta "entityNameScheme"]
		[synonym CME_SubmissionIRS_1_0 value "SID" path "Hdr"]
		[synonym ISDA_Create_1_0 value "partyA_custodian_name", "partyB_custodian_name"]
		[synonym ISDA_Create_1_0 value "partyA_specify", "partyB_specify"]
		[synonym Workflow_Event value "executionVenue" path "trade"]
		[synonym FpML_5_10 value "initialDesignation"]


type NaturalPerson: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "Person" meta "id"]

	honorific string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "honorific"]
	firstName string (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "firstName"]
	middleName string (0..*)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "middleName"]
	initial string (0..*)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initial"]
	surname string (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "surname"]
	suffix string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "suffix"]
	dateOfBirth date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "dateOfBirth"]

	condition Choice: 
		optional choice middleName, initial


type NaturalPersonRole: 

	personReference NaturalPerson (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "personReference" meta "href"]
	role NaturalPersonRoleEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "role" meta "personRoleScheme"]


type Party: 
	[metadata key]
	[synonym FpML_5_10, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "Party" meta "id" maps 2]

	partyId string (1..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "partyId" meta "partyIdScheme"]
		
	name string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyName" meta "entityNameScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityName" meta "entityNameScheme"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "entityName" path "referenceEntity" meta "entityNameScheme"]
		[synonym CME_SubmissionIRS_1_0 value "SID" path "Hdr"]
	person NaturalPerson (0..*) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "person"]
	account Account (0..1) 
		[synonym FpML_5_10, CME_ClearedConfirm_1_17, CME_SubmissionIRS_1_0 value "account"]


type PartyContactInformation: 
	[synonym FpML_5_10 value "PartyContactInformation"]

	partyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10 value "partyReference" meta "href"]
	contactInformation ContactInformation (0..1) 
		[synonym FpML_5_10 value "contactInfo"]
	businessUnit BusinessUnit (0..*) 
		[synonym FpML_5_10 value "businessUnit"]
	person NaturalPerson (0..*) 
		[synonym FpML_5_10 value "person"]
	address string (0..1) 
		[synonym ISDA_Create_1_0 value "partyA_specify"]
		[synonym ISDA_Create_1_0 value "partyB_specify"]

	condition Choice: 
		optional choice contactInformation, address

type PartyRole: 

	partyReference Party (1..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "determiningParty" path "trade" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "barrierDeterminationAgent" path "trade" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "hedgingParty" path "trade" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "brokerPartyReference" path "trade" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "partyReference" path "trade->tradeHeader->partyTradeIdentifier->relatedParty" meta "href"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "partyReference" path "tradeHeader->partyTradeInformation->relatedParty" meta "href"]
		[synonym ISDA_Create_1_0 value "partyA"]
	role PartyRoleEnum (1..1) 
		[synonym FpML_5_10 set to PartyRoleEnum -> DeterminingParty when path = "trade->determiningParty"]
		[synonym FpML_5_10 set to PartyRoleEnum -> BarrierDeterminationAgent when path = "trade->barrierDeterminationAgent"]
		[synonym FpML_5_10 set to PartyRoleEnum -> HedgingParty when path = "trade->hedgingParty"]
		[synonym FpML_5_10 set to PartyRoleEnum -> ArrangingBroker when path = "trade->brokerPartyReference"]
		[synonym FpML_5_10, CME_ClearedConfirm_1_17 value "role" path "tradeHeader->partyTradeInformation->relatedParty"]
	ownershipPartyReference Party (0..1) 
		[metadata reference]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value "partyReference" path "tradeHeader->partyTradeInformation" meta "href"]


type TelephoneNumber: 

	telephoneNumberType TelephoneTypeEnum (0..1) 
	number string (1..1) 
 

import cdm.base.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type AssetPool: 
	[synonym FpML_5_10 value "AssetPool"]
	version string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "version"]
	effectiveDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "effectiveDate"]
	initialFactor number (1..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "initialFactor"]
	currentFactor number (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "currentFactor"]
	condition EffectiveDate: 
		if version is absent
		then effectiveDate is absent

type Bond extends IdentifiedProduct: 

/*
 * Placeholder, that will need to be populated
 */
type Commodity: 
	[synonym FpML_5_10 value "Commodity"]


type ConvertibleBond extends IdentifiedProduct: 

type Equity extends IdentifiedProduct: 

type ExchangeTradedFund extends IdentifiedProduct: 

type IdentifiedProduct: 
	productIdentifier ProductIdentifier (1..1)


type Index extends IdentifiedProduct: 

type Loan extends IdentifiedProduct:
	[synonym FpML_5_10 value "Loan"]
	borrower LegalEntity (0..*) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "borrower"]
	lien string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "lien" meta "lienScheme"]
	facilityType string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "facilityType" meta "facilityTypeScheme"]
	creditAgreementDate date (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "creditAgreementDate"]
	tranche string (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "tranche" meta "loanTrancheScheme"]

type MortgageBackedSecurity extends ProductIdentifier:
	[synonym FpML_5_10 value "Mortgage"]
	pool AssetPool (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "pool"]
	sector MortgageSectorEnum (0..1) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "sector" meta "mortgageSectorScheme"]
	tranche string (0..1) 
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "tranche"]

type MutualFund extends IdentifiedProduct: 

type ProductIdentifier: 
	[metadata key]
	[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 meta "id"]
	
	identifier string (1..*) 
		[metadata scheme]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, Workflow_Event value "instrumentId" maps 2 meta "instrumentIdScheme"]
		[synonym Workflow_Event value "instrumentId" meta "instrumentIdScheme"]
	source ProductIdSourceEnum (0..1) 
	productTaxonomy ProductTaxonomy (0..*) 

type ProductTaxonomy: 
	taxonomyValue string (1..1) 
	taxonomySource TaxonomySourceEnum (1..1) 

type Security:
	bond Bond (0..1)
		[synonym FpML_5_10 hint "instrumentId"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17, Workflow_Event value "bond"]
	convertibleBond ConvertibleBond (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17, Workflow_Event value "convertibleBond"]
	equity Equity (0..1)
		[synonym FpML_5_10 value "equity"]
	exchangeTradedFund ExchangeTradedFund (0..1)
		[synonym FpML_5_10 value "exchangeTradedFund"]
	mortgageBackedSecurity MortgageBackedSecurity (0..1)
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value "mortgage"]
	mutualFund MutualFund (0..1)
		[synonym FpML_5_10 value "mutualFund"]
	warrant Warrant (0..1)
		[synonym FpML_5_10 value "warrant"]
	condition: one-of

type Warrant extends IdentifiedProduct: 
	[synonym FpML_5_10 value "Warrant"]

 

import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.party.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.asset.rates.*
import cdm.synonyms.config.*

//*********************
// Event Qualification

isEvent root BusinessEvent;

func Qualify_Allocation: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> split exists
		and businessEvent -> primitives -> contractFormation exists
		and businessEvent -> primitives -> split -> after -> splitTrades -> execution count = businessEvent -> primitives -> contractFormation -> after -> contract count

/*
 * Temporary event qualification until such time that we firm out the proper qualification and the way to infer it
 */
func Qualify_CashflowCalculationNotification:
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1
		and businessEvent -> primitives -> transfer -> cashTransfer -> transferCalculation exists
		and businessEvent -> primitives -> transfer -> identifier -> scheme = "DTCCCashflowId"


func Qualify_CashTransfer: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1
		and businessEvent -> primitives -> transfer exists
		and businessEvent -> primitives -> transfer -> cashTransfer exists
		and businessEvent -> primitives -> transfer -> securityTransfer is absent
		and businessEvent -> primitives -> transfer -> commodityTransfer is absent
		and businessEvent -> primitives -> transfer -> identifier -> scheme <> "DTCCCashflowId"

func Qualify_CashAndSecurityTransfer: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> transfer -> cashTransfer exists
		and businessEvent -> primitives -> transfer -> securityTransfer exists
		and businessEvent -> primitives -> transfer -> cashTransfer -> payerReceiver -> payerPartyReference
		-> reference = businessEvent -> primitives -> transfer -> securityTransfer -> transferorTransferee -> transferorPartyReference -> reference
		and businessEvent -> primitives -> transfer -> commodityTransfer is absent

// Simple Agency model for clearing
func Qualify_ClearedTrade:
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 5
		and businessEvent -> primitives -> quantityChange count = 1
		and QuantityDecreasedToZero(businessEvent -> primitives -> quantityChange) = True
		and businessEvent -> primitives -> execution count = 2
		and businessEvent -> primitives -> contractFormation count = 2
		and businessEvent -> primitives -> execution -> after = businessEvent -> primitives -> contractFormation -> before
		// TODO - Add this back in when we correctly map the ClearingOrganization
		and businessEvent -> primitives -> contractFormation -> after -> contract -> partyRole -> role contains PartyRoleEnum -> ClearingOrganization


func Qualify_ClearingRejection: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1
		and businessEvent -> primitives -> termsChange exists
		and businessEvent -> workflowEventState -> workflowStatus = WorkflowStatusEnum -> Rejected
		and (businessEvent -> primitives -> termsChange -> before -> execution -> partyRole is absent
		or businessEvent -> primitives -> termsChange -> before -> execution -> partyRole -> role <> PartyRoleEnum -> ClearingOrganization
		or businessEvent -> primitives -> termsChange -> before -> contract -> partyRole is absent
		or businessEvent -> primitives -> termsChange -> before -> contract -> partyRole -> role <> PartyRoleEnum -> ClearingOrganization)
		and (businessEvent -> primitives -> termsChange -> after -> execution -> partyRole -> role = PartyRoleEnum -> ClearingOrganization
		or businessEvent -> primitives -> termsChange -> after -> contract -> partyRole -> role = PartyRoleEnum -> ClearingOrganization)
		and NoQuantityChange(businessEvent -> primitives -> quantityChange) = True

func Qualify_ClearingSubmission: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1
		and businessEvent -> primitives -> termsChange exists
		and businessEvent -> workflowEventState -> workflowStatus = WorkflowStatusEnum -> Submitted
		and (
			businessEvent -> primitives -> termsChange -> before -> execution -> partyRole is absent
			or businessEvent -> primitives -> termsChange -> before -> execution -> partyRole -> role <> PartyRoleEnum -> ClearingOrganization
			or businessEvent -> primitives -> termsChange -> before -> contract -> partyRole is absent
			or businessEvent -> primitives -> termsChange -> before -> contract -> partyRole -> role <> PartyRoleEnum -> ClearingOrganization
		)
		and (
			businessEvent -> primitives -> termsChange -> after -> contract -> partyRole -> role = PartyRoleEnum -> ClearingOrganization
			or businessEvent -> primitives -> termsChange -> after -> contract -> partyContractInformation -> relatedParty -> role = PartyRoleEnum -> ClearingOrganization
			or businessEvent -> primitives -> termsChange -> after -> execution -> partyRole -> role = PartyRoleEnum -> ClearingOrganization
		)

func Qualify_Compression: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> quantityChange exists
		and businessEvent -> primitives -> quantityChange -> before -> contract multiple exists

func Qualify_DerivedObservation: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> observation only multiple exists
		and businessEvent -> functionCall exists

func Qualify_Exercise: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1
		and businessEvent -> primitives -> exercise exists

func Qualify_Increase: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		(businessEvent -> intent is absent or businessEvent -> intent = IntentEnum -> Increase)
		and (
			businessEvent -> primitives count = 1
			and businessEvent -> primitives -> quantityChange exists
			or (businessEvent -> primitives -> quantityChange exists
				and businessEvent -> primitives -> transfer -> cashTransfer exists
			))
		and QuantityIncreased(businessEvent -> primitives -> quantityChange) = True
		and businessEvent -> primitives -> quantityChange -> after -> contract -> closedState is absent

func Qualify_MultipleTransfers: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> transfer multiple exists

func Qualify_Novation: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> quantityChange exists
		and businessEvent -> primitives -> contractFormation exists
		and QuantityDecreasedToZero(businessEvent -> primitives -> quantityChange) = True
		and businessEvent -> primitives -> quantityChange -> after -> contract -> closedState -> state = ClosedStateEnum -> Novated
		and businessEvent -> primitives -> contractFormation -> after -> contract -> contractIdentifier <> businessEvent -> primitives -> quantityChange -> before -> contract -> contractIdentifier
		and businessEvent -> eventDate = businessEvent -> primitives -> contractFormation -> after -> contract -> tradeDate -> date
		and businessEvent -> effectiveDate = NovatedContractEffectiveDate(businessEvent) -> dates only-element
		//and originalContractParties <> newContractParties

func Qualify_Observation: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> observation only single exists

func Qualify_PartialNovation: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> quantityChange exists
		and businessEvent -> primitives -> contractFormation exists
		and businessEvent -> primitives -> contractFormation -> after -> contract -> contractIdentifier <> businessEvent -> primitives -> quantityChange -> before -> contract -> contractIdentifier
		and businessEvent -> eventDate = businessEvent -> primitives -> contractFormation -> after -> contract -> tradeDate -> date
		and businessEvent -> effectiveDate = NovatedContractEffectiveDate(businessEvent) -> dates
		and QuantityDecreased(businessEvent -> primitives -> quantityChange) = True
		//and originalContractParties <> newContractParties

func Qualify_PartialTermination: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		(businessEvent -> intent is absent or businessEvent -> intent = IntentEnum -> PartialTermination)
		and (businessEvent -> primitives count = 1
		and businessEvent -> primitives -> quantityChange exists
			or (businessEvent -> primitives -> quantityChange exists
				and businessEvent -> primitives -> transfer -> cashTransfer exists
			))
		and QuantityDecreased(businessEvent -> primitives -> quantityChange) = True
		and businessEvent -> primitives -> quantityChange -> after -> contract -> closedState is absent

func Qualify_Reset: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent (1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1
		and businessEvent -> primitives -> reset exists

func Qualify_SecurityTransfer: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1
		and businessEvent -> primitives -> transfer exists
		and businessEvent -> primitives -> transfer -> securityTransfer exists
		and businessEvent -> primitives -> transfer -> cashTransfer is absent
		and businessEvent -> primitives -> transfer -> commodityTransfer is absent

func Qualify_SecuritySettlement: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> transfer -> cashTransfer exists
		and businessEvent -> primitives -> transfer -> securityTransfer exists
		and businessEvent -> primitives -> transfer -> cashTransfer -> payerReceiver -> payerPartyReference -> reference = businessEvent -> primitives -> transfer -> securityTransfer -> transferorTransferee -> transfereePartyReference -> reference
		and businessEvent -> primitives -> transfer -> commodityTransfer is absent

func Qualify_Termination: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		(businessEvent -> intent is absent or businessEvent -> intent = IntentEnum -> Termination)
		and (businessEvent -> primitives count = 1
		and businessEvent -> primitives -> quantityChange exists
			or (businessEvent -> primitives -> quantityChange exists
				and businessEvent -> primitives -> transfer -> cashTransfer exists)
			)
		and QuantityDecreasedToZero(businessEvent -> primitives -> quantityChange) = True
		and businessEvent -> primitives -> quantityChange -> after -> contract -> closedState -> state = ClosedStateEnum -> Terminated

func Qualify_TradeWarehousePositionNotification:
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives -> contractFormation exists
		and businessEvent -> primitives -> contractFormation -> after -> tradeWarehouseWorkflow exists

func Qualify_Execution: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1 and businessEvent -> primitives -> execution exists

func Qualify_ContractFormation: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent(1..1)
	output: is_event boolean (1..1)
	assign-output is_event:
		businessEvent -> primitives count = 1 and businessEvent -> primitives -> contractFormation exists
		and businessEvent -> primitives -> contractFormation -> after -> tradeWarehouseWorkflow is absent

func Qualify_StockSplit: 
	[qualification BusinessEvent]
	inputs:
		businessEvent BusinessEvent (1..1)
		
	output: is_event boolean (1..1)

	alias beforeQuantityNotation:
		businessEvent -> primitives -> quantityChange -> before -> contract -> tradableProduct -> quantityNotation
	
	alias beforeNoOfUnits:
		if beforeQuantityNotation exists
		then NoOfUnits( beforeQuantityNotation )
	
	alias afterQuantityNotation:
		businessEvent -> primitives -> quantityChange -> after -> contract -> tradableProduct -> quantityNotation
	
	alias afterNoOfUnits:
		if afterQuantityNotation exists
		then NoOfUnits( afterQuantityNotation )
	
	alias beforeCurrencyAmount: 
		if beforeQuantityNotation exists
		then CurrencyAmount( beforeQuantityNotation, empty )
	
	alias afterCurrencyAmount:
		if afterQuantityNotation exists
		then CurrencyAmount( afterQuantityNotation, empty )
	
	alias beforeCashPrices:
		businessEvent -> primitives -> termsChange -> before -> contract -> tradableProduct -> priceNotation -> price -> cashPrice -> netPrice -> amount
	
	alias beforeCashPrice:
		beforeCashPrices only-element 
		
	alias afterCashPrices:
		businessEvent -> primitives -> termsChange -> after -> contract -> tradableProduct -> priceNotation -> price -> cashPrice -> netPrice -> amount
	
	alias afterCashPrice:
		afterCashPrices only-element
		
	alias currencyAmountUnchanged:
		if ( beforeCurrencyAmount and afterCurrencyAmount ) exists
		then beforeCurrencyAmount = afterCurrencyAmount
		else False
	
	alias noOfUnitsChanged:
		if ( beforeNoOfUnits and afterNoOfUnits ) exists
		then afterNoOfUnits <> beforeNoOfUnits
		else False
	
	alias cashPriceChanged:
		if ( beforeCashPrice and afterCashPrice ) exists
		then beforeCashPrice <> afterCashPrice
		else False
	
	alias adjustmentRatioMatches:
		if ( beforeNoOfUnits and afterNoOfUnits and beforeCashPrice and afterCashPrice ) exists
		then afterNoOfUnits / beforeNoOfUnits = beforeCashPrice / afterCashPrice
		else False
	
	assign-output is_event:
		// TODO: check product type is equity?
		businessEvent -> primitives count = 2
		and currencyAmountUnchanged = True
		and noOfUnitsChanged = True
		and cashPriceChanged = True 
		and adjustmentRatioMatches = True
