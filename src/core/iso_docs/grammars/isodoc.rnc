# instantiations of this grammar may replace leaf strings
# with more elaborated types; e.g. title (text) replaced with
# title-main, title-intro, title-part; type replaced with
# enum.
#
# some renaming at leaf nodes is permissible
#
# obligations can change both from optional to mandatory,
# and from mandatory to optional; optional elements may
# be omitted; freely positioned alternatives may be replaced
# with strict ordering
#
# DO NOT introduce a namespace here. We do not want a distinct namespace
# for these elements, and a distinct namespace for any grammar inheriting
# these elements; we just want one namespace for any child grammars
# of this.

grammar {

include "reqt.rnc" { }

#include "biblio.rnc" { }

include "basicdoc.rnc" { 

start = standard-document

hyperlink =
  element link {
    attribute target { xsd:anyURI },
    attribute type { ReferenceFormat }?,
    attribute alt { text }?,
    text
}

xref =
  element xref {
     attribute target { xsd:IDREF },
     attribute type { ReferenceFormat }?,
     attribute alt { text }?,
     attribute case { "capital" | "lowercase" }?,
     text
}

example =
  element example {
    attribute id { xsd:ID },
    attribute unnumbered { xsd:boolean }?,
    attribute subsequence { text }?,
    tname?,
    ( formula | ul | ol | dl | quote | sourcecode | paragraph-with-footnote | figure )+,
    note*
}

BibDataExtensionType = 
  doctype,
  editorialgroup?,
  ics*,
  structuredidentifier*

# TitleType = text

sections =
  element sections {
    ( clause | terms | term-clause | definitions)+
}

references =
  element references {
    attribute id { xsd:ID }?,
    attribute obligation { "normative" | "informative" }?,
    attribute normative { xsd:boolean },
    section-title?,
    BasicBlock*, note*,
    (bibitem, note*)*,
    references*
}

note = element note {
    attribute id { xsd:ID },
    (paragraph | ul | ol | dl | formula)+
}

Basic-Section =
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    (BasicBlock+, note*)

li =
  element li {
    attribute id { xsd:ID }?,
    BasicBlock+
    # exclude figures?
  }

dd =
  element dd {
    # exclude figures?
    BasicBlock*
  }

thead = element thead { tr+ }

td =
  element td {
    attribute colspan { text }?,
    attribute rowspan { text }?,
    attribute align { "left" | "right" | "center" }?,
    (
      (TextElement | fn )* |
      (paragraph-with-footnote | dl | ul | ol | figure)+
    )
}

th =
  element th {
    attribute colspan { text }?,
    attribute rowspan { text }?,
    attribute align { "left" | "right" | "center" }?,
    (
      (TextElement | fn )* |
      paragraph-with-footnote+
    )
}

table-note = element note {
    attribute id { xsd:ID }?,
 paragraph
}

}

# end overrides

TextElement |= concept

concept = element concept {
  attribute term { text }?,
  ( eref | xref | termref )
}

BasicBlock |= requirement | recommendation | permission

bibliography =
  element bibliography {
    (references | reference-clause)+
}

reference-clause =
  element clause {
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute inline-header { xsd:boolean }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    BasicBlock*, note*,
    (
       reference-clause+ | references*
    )
}

editorialgroup = element editorialgroup {
  technical-committee+
}

technical-committee =
  element technical-committee { IsoWorkgroup }

IsoWorkgroup =
    attribute number { xsd:int }?,
    attribute type { text }?,
    text

ics = element ics {
  element code { text },
  element text { text }
}

standard-document =
element standard-document {
  bibdata, boilerplate?, preface?, sections, annex*, references*
}

preface =
  element preface { ( content | preface_abstract | foreword | introduction | acknowledgements)+ }

foreword =
  element foreword { Content-Section }

introduction =
  element introduction { Content-Section }

boilerplate = 
  element boilerplate { copyright-statement?, license-statement?, legal-statement?, feedback-statement? }

copyright-statement =
  element copyright-statement { Content-Section }

license-statement =
  element license-statement { Content-Section }

legal-statement =
  element legal-statement { Content-Section }

feedback-statement =
  element feedback-statement { Content-Section }

definitions =
  element definitions {
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    (BasicBlock*, note*,
    dl)+
}

content =
  element clause { Content-Section }

abstract =
  element abstract { Content-Section }

acknowledgements =
  element acknowledgements { Content-Section }

content-subsection =
  element clause { 
    attribute type { text }?,
    Content-Section 
  }

Content-Section =
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute inline-header { xsd:boolean }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    ( (BasicBlock*, note*),
      content-subsection* )

clause =
  element clause { 
    attribute type { text }?,
    Clause-Section 
  }

Clause-Section =
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute inline-header { xsd:boolean }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    (
      ( BasicBlock*, note* ),
       (clause-subsection | terms | definitions)*
    )

Annex-Section =
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute inline-header { xsd:boolean }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    (
      ( BasicBlock*, note* ),
       (annex-subsection | terms | definitions | references )*
    )

clause-subsection =
  element clause { Clause-Section }

annex-subsection =
  element clause { Annex-Section }

annex =
  element annex {
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute inline-header { xsd:boolean }?,
    attribute obligation { ( "normative" | "informative" ) },
    section-title?,
    ( ( BasicBlock*, note* ), 
      (annex-subsection | terms | definitions | references)* )
}

terms =
  element terms {
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    BasicBlock*, note*,
    (term+ | ( terms*, definitions?) )
  }

term =
  element term {
    attribute id { xsd:ID }?,
    preferred+, admitted*, related*, deprecates*,
    termdomain?, termgrammar*, definition, termnote*, termexample*, termsource*
  }

preferred =
  element preferred { TextElement+ }

admitted =
  element admitted { TextElement+ }

related = 
  element related {
    attribute type { "compare" | "contrast" | "see" }?,
    TextElement+
}

deprecates =
  element deprecates { TextElement+ }

termdomain =
  element domain { TextElement+ }

termgrammar =
  element grammar { TextElement+ }

definition =
  element definition {
    ( paragraph | figure | formula )+
  }

termnote =
  element termnote { 
    attribute id { xsd:ID },
    (paragraph | ul | ol | dl | formula)+
}

termexample =
  element termexample { 
    attribute id { xsd:ID },
paragraph }

termsource =
  element termsource {
    attribute status { ( "identical" | "modified" ) },
    origin, modification?
}

origin =
  element origin { erefType | termref }

modification =
  element modification { paragraph }

termref = element termref {
  attribute base { text },
  attribute target { text },
  text?
}

structuredidentifier = element structuredidentifier {
  attribute type { text }?,
  element agency { text }+,
  element class { text }?,
  element docnumber { text },
  element partnumber { text }?,
  element edition { text }?,
  element version { text }?,
  element supplementtype { text }?,
  element supplementnumber { text }?,
  element language { text }?,
  element year { text }?
}

preface_abstract = element abstract { Basic-Section }

term-clause =
  element clause {
    attribute id { xsd:ID }?,
    attribute language { text }?,
    attribute script { text }?,
    attribute inline-header { xsd:boolean }?,
    attribute obligation { "normative" | "informative" }?,
    section-title?,
    BasicBlock*, note*,
    (
       (term-clause | terms | definitions)*
    )
}

termdocsource =
  element termdocsource { CitationType }

}
